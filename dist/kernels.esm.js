var Tr=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof require!="undefined"?require:t)[n]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var C2=Object.create,sc=Object.defineProperty,N2=Object.getOwnPropertyDescriptor,T2=Object.getOwnPropertyNames,$2=Object.getPrototypeOf,A2=Object.prototype.hasOwnProperty,Fy=e=>sc(e,"__esModule",{value:!0}),Mn=(e=>typeof Tr!="undefined"?Tr:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof Tr!="undefined"?Tr:t)[n]}):e)(function(e){if(typeof Tr!="undefined")return Tr.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),fn=(e,t)=>function(){return t||(0,e[Object.keys(e)[0]])((t={exports:{}}).exports,t),t.exports},$e=(e,t)=>{Fy(e);for(var n in t)sc(e,n,{get:t[n],enumerable:!0})},E2=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of T2(t))!A2.call(e,s)&&s!=="default"&&sc(e,s,{get:()=>t[s],enumerable:!(n=N2(t,s))||n.enumerable});return e},$r=e=>E2(Fy(sc(e!=null?C2($2(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),_2=fn({"src/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function s(D,C,P){this.low=D|0,this.high=C|0,this.unsigned=!!P}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(D){return(D&&D.__isLong__)===!0}s.isLong=r;var a={},o={};function i(D,C){var P,V,G;return C?(D>>>=0,(G=0<=D&&D<256)&&(V=o[D],V)?V:(P=c(D,(D|0)<0?-1:0,!0),G&&(o[D]=P),P)):(D|=0,(G=-128<=D&&D<128)&&(V=a[D],V)?V:(P=c(D,D<0?-1:0,!1),G&&(a[D]=P),P))}s.fromInt=i;function u(D,C){if(isNaN(D))return C?w:y;if(C){if(D<0)return w;if(D>=g)return _}else{if(D<=-b)return O;if(D+1>=b)return A}return D<0?u(-D,C).neg():c(D%m|0,D/m|0,C)}s.fromNumber=u;function c(D,C,P){return new s(D,C,P)}s.fromBits=c;var l=Math.pow;function d(D,C,P){if(D.length===0)throw Error("empty string");if(D==="NaN"||D==="Infinity"||D==="+Infinity"||D==="-Infinity")return y;if(typeof C=="number"?(P=C,C=!1):C=!!C,P=P||10,P<2||36<P)throw RangeError("radix");var V;if((V=D.indexOf("-"))>0)throw Error("interior hyphen");if(V===0)return d(D.substring(1),C,P).neg();for(var G=u(l(P,8)),U=y,q=0;q<D.length;q+=8){var Y=Math.min(8,D.length-q),Z=parseInt(D.substring(q,q+Y),P);if(Y<8){var J=u(l(P,Y));U=U.mul(J).add(u(Z))}else U=U.mul(G),U=U.add(u(Z))}return U.unsigned=C,U}s.fromString=d;function h(D,C){return typeof D=="number"?u(D,C):typeof D=="string"?d(D,C):c(D.low,D.high,typeof C=="boolean"?C:D.unsigned)}s.fromValue=h;var p=1<<16,f=1<<24,m=p*p,g=m*m,b=g/2,v=i(f),y=i(0);s.ZERO=y;var w=i(0,!0);s.UZERO=w;var k=i(1);s.ONE=k;var S=i(1,!0);s.UONE=S;var N=i(-1);s.NEG_ONE=N;var A=c(4294967295|0,2147483647|0,!1);s.MAX_VALUE=A;var _=c(4294967295|0,4294967295|0,!0);s.MAX_UNSIGNED_VALUE=_;var O=c(0,2147483648|0,!1);s.MIN_VALUE=O;var R=s.prototype;R.toInt=function(){return this.unsigned?this.low>>>0:this.low},R.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},R.toString=function(C){if(C=C||10,C<2||36<C)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(O)){var P=u(C),V=this.div(P),G=V.mul(P).sub(this);return V.toString(C)+G.toInt().toString(C)}else return"-"+this.neg().toString(C);for(var U=u(l(C,6),this.unsigned),q=this,Y="";;){var Z=q.div(U),J=q.sub(Z.mul(U)).toInt()>>>0,ne=J.toString(C);if(q=Z,q.isZero())return ne+Y;for(;ne.length<6;)ne="0"+ne;Y=""+ne+Y}},R.getHighBits=function(){return this.high},R.getHighBitsUnsigned=function(){return this.high>>>0},R.getLowBits=function(){return this.low},R.getLowBitsUnsigned=function(){return this.low>>>0},R.getNumBitsAbs=function(){if(this.isNegative())return this.eq(O)?64:this.neg().getNumBitsAbs();for(var C=this.high!=0?this.high:this.low,P=31;P>0&&(C&1<<P)==0;P--);return this.high!=0?P+33:P+1},R.isZero=function(){return this.high===0&&this.low===0},R.eqz=R.isZero,R.isNegative=function(){return!this.unsigned&&this.high<0},R.isPositive=function(){return this.unsigned||this.high>=0},R.isOdd=function(){return(this.low&1)==1},R.isEven=function(){return(this.low&1)==0},R.equals=function(C){return r(C)||(C=h(C)),this.unsigned!==C.unsigned&&this.high>>>31==1&&C.high>>>31==1?!1:this.high===C.high&&this.low===C.low},R.eq=R.equals,R.notEquals=function(C){return!this.eq(C)},R.neq=R.notEquals,R.ne=R.notEquals,R.lessThan=function(C){return this.comp(C)<0},R.lt=R.lessThan,R.lessThanOrEqual=function(C){return this.comp(C)<=0},R.lte=R.lessThanOrEqual,R.le=R.lessThanOrEqual,R.greaterThan=function(C){return this.comp(C)>0},R.gt=R.greaterThan,R.greaterThanOrEqual=function(C){return this.comp(C)>=0},R.gte=R.greaterThanOrEqual,R.ge=R.greaterThanOrEqual,R.compare=function(C){if(r(C)||(C=h(C)),this.eq(C))return 0;var P=this.isNegative(),V=C.isNegative();return P&&!V?-1:!P&&V?1:this.unsigned?C.high>>>0>this.high>>>0||C.high===this.high&&C.low>>>0>this.low>>>0?-1:1:this.sub(C).isNegative()?-1:1},R.comp=R.compare,R.negate=function(){return!this.unsigned&&this.eq(O)?O:this.not().add(k)},R.neg=R.negate,R.add=function(C){r(C)||(C=h(C));var P=this.high>>>16,V=this.high&65535,G=this.low>>>16,U=this.low&65535,q=C.high>>>16,Y=C.high&65535,Z=C.low>>>16,J=C.low&65535,ne=0,ee=0,te=0,re=0;return re+=U+J,te+=re>>>16,re&=65535,te+=G+Z,ee+=te>>>16,te&=65535,ee+=V+Y,ne+=ee>>>16,ee&=65535,ne+=P+q,ne&=65535,c(te<<16|re,ne<<16|ee,this.unsigned)},R.subtract=function(C){return r(C)||(C=h(C)),this.add(C.neg())},R.sub=R.subtract,R.multiply=function(C){if(this.isZero())return y;if(r(C)||(C=h(C)),n){var P=n.mul(this.low,this.high,C.low,C.high);return c(P,n.get_high(),this.unsigned)}if(C.isZero())return y;if(this.eq(O))return C.isOdd()?O:y;if(C.eq(O))return this.isOdd()?O:y;if(this.isNegative())return C.isNegative()?this.neg().mul(C.neg()):this.neg().mul(C).neg();if(C.isNegative())return this.mul(C.neg()).neg();if(this.lt(v)&&C.lt(v))return u(this.toNumber()*C.toNumber(),this.unsigned);var V=this.high>>>16,G=this.high&65535,U=this.low>>>16,q=this.low&65535,Y=C.high>>>16,Z=C.high&65535,J=C.low>>>16,ne=C.low&65535,ee=0,te=0,re=0,ce=0;return ce+=q*ne,re+=ce>>>16,ce&=65535,re+=U*ne,te+=re>>>16,re&=65535,re+=q*J,te+=re>>>16,re&=65535,te+=G*ne,ee+=te>>>16,te&=65535,te+=U*J,ee+=te>>>16,te&=65535,te+=q*Z,ee+=te>>>16,te&=65535,ee+=V*ne+G*J+U*Z+q*Y,ee&=65535,c(re<<16|ce,ee<<16|te,this.unsigned)},R.mul=R.multiply,R.divide=function(C){if(r(C)||(C=h(C)),C.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&C.low===-1&&C.high===-1)return this;var P=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,C.low,C.high);return c(P,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?w:y;var V,G,U;if(this.unsigned){if(C.unsigned||(C=C.toUnsigned()),C.gt(this))return w;if(C.gt(this.shru(1)))return S;U=w}else{if(this.eq(O)){if(C.eq(k)||C.eq(N))return O;if(C.eq(O))return k;var q=this.shr(1);return V=q.div(C).shl(1),V.eq(y)?C.isNegative()?k:N:(G=this.sub(C.mul(V)),U=V.add(G.div(C)),U)}else if(C.eq(O))return this.unsigned?w:y;if(this.isNegative())return C.isNegative()?this.neg().div(C.neg()):this.neg().div(C).neg();if(C.isNegative())return this.div(C.neg()).neg();U=y}for(G=this;G.gte(C);){V=Math.max(1,Math.floor(G.toNumber()/C.toNumber()));for(var Y=Math.ceil(Math.log(V)/Math.LN2),Z=Y<=48?1:l(2,Y-48),J=u(V),ne=J.mul(C);ne.isNegative()||ne.gt(G);)V-=Z,J=u(V,this.unsigned),ne=J.mul(C);J.isZero()&&(J=k),U=U.add(J),G=G.sub(ne)}return U},R.div=R.divide,R.modulo=function(C){if(r(C)||(C=h(C)),n){var P=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,C.low,C.high);return c(P,n.get_high(),this.unsigned)}return this.sub(this.div(C).mul(C))},R.mod=R.modulo,R.rem=R.modulo,R.not=function(){return c(~this.low,~this.high,this.unsigned)},R.and=function(C){return r(C)||(C=h(C)),c(this.low&C.low,this.high&C.high,this.unsigned)},R.or=function(C){return r(C)||(C=h(C)),c(this.low|C.low,this.high|C.high,this.unsigned)},R.xor=function(C){return r(C)||(C=h(C)),c(this.low^C.low,this.high^C.high,this.unsigned)},R.shiftLeft=function(C){return r(C)&&(C=C.toInt()),(C&=63)==0?this:C<32?c(this.low<<C,this.high<<C|this.low>>>32-C,this.unsigned):c(0,this.low<<C-32,this.unsigned)},R.shl=R.shiftLeft,R.shiftRight=function(C){return r(C)&&(C=C.toInt()),(C&=63)==0?this:C<32?c(this.low>>>C|this.high<<32-C,this.high>>C,this.unsigned):c(this.high>>C-32,this.high>=0?0:-1,this.unsigned)},R.shr=R.shiftRight,R.shiftRightUnsigned=function(C){if(r(C)&&(C=C.toInt()),C&=63,C===0)return this;var P=this.high;if(C<32){var V=this.low;return c(V>>>C|P<<32-C,P>>>C,this.unsigned)}else return C===32?c(P,0,this.unsigned):c(P>>>C-32,0,this.unsigned)},R.shru=R.shiftRightUnsigned,R.shr_u=R.shiftRightUnsigned,R.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},R.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},R.toBytes=function(C){return C?this.toBytesLE():this.toBytesBE()},R.toBytesLE=function(){var C=this.high,P=this.low;return[P&255,P>>>8&255,P>>>16&255,P>>>24,C&255,C>>>8&255,C>>>16&255,C>>>24]},R.toBytesBE=function(){var C=this.high,P=this.low;return[C>>>24,C>>>16&255,C>>>8&255,C&255,P>>>24,P>>>16&255,P>>>8&255,P&255]},s.fromBytes=function(C,P,V){return V?s.fromBytesLE(C,P):s.fromBytesBE(C,P)},s.fromBytesLE=function(C,P){return new s(C[0]|C[1]<<8|C[2]<<16|C[3]<<24,C[4]|C[5]<<8|C[6]<<16|C[7]<<24,P)},s.fromBytesBE=function(C,P){return new s(C[4]<<24|C[5]<<16|C[6]<<8|C[7],C[0]<<24|C[1]<<16|C[2]<<8|C[3],P)}}}),R2=fn({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),D2=fn({"(disabled):util"(){}}),F2=fn({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(c){var l=this,d=u();l.next=function(){var h=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=h-(l.c=h|0)},l.c=1,l.s0=d(" "),l.s1=d(" "),l.s2=d(" "),l.s0-=d(c),l.s0<0&&(l.s0+=1),l.s1-=d(c),l.s1<0&&(l.s1+=1),l.s2-=d(c),l.s2<0&&(l.s2+=1),d=null}function o(c,l){return l.c=c.c,l.s0=c.s0,l.s1=c.s1,l.s2=c.s2,l}function i(c,l){var d=new a(c),h=l&&l.state,p=d.next;return p.int32=function(){return d.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,h&&(typeof h=="object"&&o(h,d),p.state=function(){return o(d,{})}),p}function u(){var c=4022871197,l=function(d){d=String(d);for(var h=0;h<d.length;h++){c+=d.charCodeAt(h);var p=.02519603282416938*c;c=p>>>0,p-=c,p*=c,c=p>>>0,p-=c,c+=p*4294967296}return(c>>>0)*23283064365386963e-26};return l}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),O2=fn({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(u){var c=this,l="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var h=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^h^h>>>8},u===(u|0)?c.x=u:l+=u;for(var d=0;d<l.length+64;d++)c.x^=l.charCodeAt(d)|0,c.next()}function o(u,c){return c.x=u.x,c.y=u.y,c.z=u.z,c.w=u.w,c}function i(u,c){var l=new a(u),d=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(typeof d=="object"&&o(d,l),h.state=function(){return o(l,{})}),h}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),P2=fn({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(u){var c=this,l="";c.next=function(){var h=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(h^h<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,u===(u|0)?c.x=u:l+=u;for(var d=0;d<l.length+64;d++)c.x^=l.charCodeAt(d)|0,d==l.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(u,c){return c.x=u.x,c.y=u.y,c.z=u.z,c.w=u.w,c.v=u.v,c.d=u.d,c}function i(u,c){var l=new a(u),d=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(typeof d=="object"&&o(d,l),h.state=function(){return o(l,{})}),h}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),L2=fn({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(u){var c=this;c.next=function(){var d=c.x,h=c.i,p,f,m;return p=d[h],p^=p>>>7,f=p^p<<24,p=d[h+1&7],f^=p^p>>>10,p=d[h+3&7],f^=p^p>>>3,p=d[h+4&7],f^=p^p<<7,p=d[h+7&7],p=p^p<<13,f^=p^p<<9,d[h]=f,c.i=h+1&7,f};function l(d,h){var p,f,m=[];if(h===(h|0))f=m[0]=h;else for(h=""+h,p=0;p<h.length;++p)m[p&7]=m[p&7]<<15^h.charCodeAt(p)+m[p+1&7]<<13;for(;m.length<8;)m.push(0);for(p=0;p<8&&m[p]===0;++p);for(p==8?f=m[7]=-1:f=m[p],d.x=m,d.i=0,p=256;p>0;--p)d.next()}l(c,u)}function o(u,c){return c.x=u.x.slice(),c.i=u.i,c}function i(u,c){u==null&&(u=+new Date);var l=new a(u),d=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(d.x&&o(d,l),h.state=function(){return o(l,{})}),h}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),z2=fn({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(u){var c=this;c.next=function(){var d=c.w,h=c.X,p=c.i,f,m;return c.w=d=d+1640531527|0,m=h[p+34&127],f=h[p=p+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=h[p]=m^f,c.i=p,m+(d^d>>>16)|0};function l(d,h){var p,f,m,g,b,v=[],y=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,y=Math.max(y,h.length)),m=0,g=-32;g<y;++g)h&&(f^=h.charCodeAt((g+32)%h.length)),g===0&&(b=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(b=b+1640531527|0,p=v[g&127]^=f+b,m=p==0?m+1:0);for(m>=128&&(v[(h&&h.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=v[m+34&127],p=v[m=m+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,v[m]=f^p;d.w=b,d.X=v,d.i=m}l(c,u)}function o(u,c){return c.i=u.i,c.w=u.w,c.X=u.X.slice(),c}function i(u,c){u==null&&(u=+new Date);var l=new a(u),d=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(d.X&&o(d,l),h.state=function(){return o(l,{})}),h}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),M2=fn({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(u){var c=this,l="";c.next=function(){var h=c.b,p=c.c,f=c.d,m=c.a;return h=h<<25^h>>>7^p,p=p-f|0,f=f<<24^f>>>8^m,m=m-h|0,c.b=h=h<<20^h>>>12^p,c.c=p=p-f|0,c.d=f<<16^p>>>16^m,c.a=m-h|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,u===Math.floor(u)?(c.a=u/4294967296|0,c.b=u|0):l+=u;for(var d=0;d<l.length+20;d++)c.b^=l.charCodeAt(d)|0,c.next()}function o(u,c){return c.a=u.a,c.b=u.b,c.c=u.c,c.d=u.d,c}function i(u,c){var l=new a(u),d=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var p=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(typeof d=="object"&&o(d,l),h.state=function(){return o(l,{})}),h}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),B2=fn({"(disabled):crypto"(){}}),V2=fn({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,o=6,i=52,u="random",c=r.pow(a,o),l=r.pow(2,i),d=l*2,h=a-1,p;function f(k,S,N){var A=[];S=S==!0?{entropy:!0}:S||{};var _=v(b(S.entropy?[k,w(s)]:k??y(),3),A),O=new m(A),R=function(){for(var D=O.g(o),C=c,P=0;D<l;)D=(D+P)*a,C*=a,P=O.g(1);for(;D>=d;)D/=2,C/=2,P>>>=1;return(D+P)/C};return R.int32=function(){return O.g(4)|0},R.quick=function(){return O.g(4)/4294967296},R.double=R,v(w(O.S),s),(S.pass||N||function(D,C,P,V){return V&&(V.S&&g(V,O),D.state=function(){return g(O,{})}),P?(r[u]=D,C):D})(R,_,"global"in S?S.global:this==r,S.state)}function m(k){var S,N=k.length,A=this,_=0,O=A.i=A.j=0,R=A.S=[];for(N||(k=[N++]);_<a;)R[_]=_++;for(_=0;_<a;_++)R[_]=R[O=h&O+k[_%N]+(S=R[_])],R[O]=S;(A.g=function(D){for(var C,P=0,V=A.i,G=A.j,U=A.S;D--;)C=U[V=h&V+1],P=P*a+U[h&(U[V]=U[G=h&G+C])+(U[G]=C)];return A.i=V,A.j=G,P})(a)}function g(k,S){return S.i=k.i,S.j=k.j,S.S=k.S.slice(),S}function b(k,S){var N=[],A=typeof k,_;if(S&&A=="object")for(_ in k)try{N.push(b(k[_],S-1))}catch{}return N.length?N:A=="string"?k:k+"\0"}function v(k,S){for(var N=k+"",A,_=0;_<N.length;)S[h&_]=h&(A^=S[h&_]*19)+N.charCodeAt(_++);return w(S)}function y(){try{var k;return p&&(k=p.randomBytes)?k=k(a):(k=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(k)),w(k)}catch{var S=n.navigator,N=S&&S.plugins;return[+new Date,n,N,n.screen,w(s)]}}function w(k){return String.fromCharCode.apply(0,k)}if(v(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{p=B2()}catch{}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+u]=f})(typeof self!="undefined"?self:e,[],Math)}}),rc=fn({"src/node_modules/seedrandom/index.js"(e,t){var n=F2(),s=O2(),r=P2(),a=L2(),o=z2(),i=M2(),u=V2();u.alea=n,u.xor128=s,u.xorwow=r,u.xorshift7=a,u.xor4096=o,u.tychei=i,t.exports=u}}),Oy=fn({"(disabled):src/node_modules/string_decoder/index.js"(){}}),W2=fn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};function a(){return te.buffer!=ht&&qt(te.buffer),bt}function o(){return te.buffer!=ht&&qt(te.buffer),An}function i(){return te.buffer!=ht&&qt(te.buffer),sn}function u(){return te.buffer!=ht&&qt(te.buffer),In}function c(){return te.buffer!=ht&&qt(te.buffer),En}var l=typeof r!="undefined"?r:{},d,h;l.ready=new Promise(function(I,$){d=I,h=$});var p={},f;for(f in l)l.hasOwnProperty(f)&&(p[f]=l[f]);var m=[],g="./this.program",b=function(I,$){throw $},v=!1,y=!1,w=!1,k=!1;v=typeof window=="object",y=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",k=!v&&!w&&!y;var S=l.ENVIRONMENT_IS_PTHREAD||!1;S&&(ht=l.buffer);var N="";function A(I){return l.locateFile?l.locateFile(I,N):N+I}var _,O,R,D,C,P;if(w){y?N=Mn("path").dirname(N)+"/":N=__dirname+"/",_=function($,L){return C||(C=Mn("fs")),P||(P=Mn("path")),$=P.normalize($),C.readFileSync($,L?null:"utf8")},R=function($){var L=_($,!0);return L.buffer||(L=new Uint8Array(L)),be(L.buffer),L},process.argv.length>1&&(g=process.argv[1].replace(/\\/g,"/")),m=process.argv.slice(2),process.on("uncaughtException",function(I){if(!(I instanceof ru))throw I}),process.on("unhandledRejection",As),b=function(I){process.exit(I)},l.inspect=function(){return"[Emscripten Module object]"};var V;try{V=Mn("worker_threads")}catch(I){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),I}global.Worker=V.Worker}else k?(typeof read!="undefined"&&(_=function($){return read($)}),R=function($){var L;return typeof readbuffer=="function"?new Uint8Array(readbuffer($)):(L=read($,"binary"),be(typeof L=="object"),L)},typeof scriptArgs!="undefined"?m=scriptArgs:typeof arguments!="undefined"&&(m=arguments),typeof quit=="function"&&(b=function(I){quit(I)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(v||y)&&(y?N=self.location.href:typeof document!="undefined"&&document.currentScript&&(N=document.currentScript.src),typeof s!="undefined"&&s&&(N=s),N.indexOf("blob:")!==0?N=N.substr(0,N.lastIndexOf("/")+1):N="",w?(_=function($,L){return C||(C=Mn("fs")),P||(P=Mn("path")),$=P.normalize($),C.readFileSync($,L?null:"utf8")},R=function($){var L=_($,!0);return L.buffer||(L=new Uint8Array(L)),be(L.buffer),L}):(_=function(I){var $=new XMLHttpRequest;return $.open("GET",I,!1),$.send(null),$.responseText},y&&(R=function(I){var $=new XMLHttpRequest;return $.open("GET",I,!1),$.responseType="arraybuffer",$.send(null),new Uint8Array($.response)}),O=function(I,$,L){var j=new XMLHttpRequest;j.open("GET",I,!0),j.responseType="arraybuffer",j.onload=function(){if(j.status==200||j.status==0&&j.response){$(j.response);return}L()},j.onerror=L,j.send(null)}),D=function(I){document.title=I});w&&typeof performance=="undefined"&&(global.performance=Mn("perf_hooks").performance);var G=l.print||console.log.bind(console),U=l.printErr||console.warn.bind(console);for(f in p)p.hasOwnProperty(f)&&(l[f]=p[f]);p=null,l.arguments&&(m=l.arguments),l.thisProgram&&(g=l.thisProgram),l.quit&&(b=l.quit);function q(I){q.shown||(q.shown={}),q.shown[I]||(q.shown[I]=1,U(I))}var Y=Atomics.load,Z=Atomics.store,J=Atomics.compareExchange,ne;l.wasmBinary&&(ne=l.wasmBinary);var ee=l.noExitRuntime||!0;typeof WebAssembly!="object"&&As("no native wasm support detected");var te,re,ce=!1,pe;function be(I,$){I||As("Assertion failed: "+$)}function we(I){var $=l["_"+I];return be($,"Cannot call unknown function "+I+", make sure it is exported"),$}function Ae(I,$,L,j,le){var ie={string:function(rn){var po=0;if(rn!=null&&rn!==0){var Dy=(rn.length<<2)+1;po=lo(Dy),et(rn,po,Dy)}return po},array:function(rn){var po=lo(rn.length);return lt(rn,po),po}};function ue(rn){return $==="string"?Be(rn):$==="boolean"?Boolean(rn):rn}var ye=we(I),Ze=[],Mt=0;if(j)for(var Rt=0;Rt<j.length;Rt++){var Ks=ie[L[Rt]];Ks?(Mt===0&&(Mt=su()),Ze[Rt]=Ks(j[Rt])):Ze[Rt]=j[Rt]}var ho=ye.apply(null,Ze);return ho=ue(ho),Mt!==0&&uo(Mt),ho}function Fe(I,$,L,j){L=L||[];var le=L.every(function(ue){return ue==="number"}),ie=$!=="string";return ie&&le&&!j?we(I):function(){return Ae(I,$,L,arguments,j)}}function Le(I,$,L){for(var j=$+L,le="";!($>=j);){var ie=I[$++];if(!ie)return le;if(!(ie&128)){le+=String.fromCharCode(ie);continue}var ue=I[$++]&63;if((ie&224)==192){le+=String.fromCharCode((ie&31)<<6|ue);continue}var ye=I[$++]&63;if((ie&240)==224?ie=(ie&15)<<12|ue<<6|ye:ie=(ie&7)<<18|ue<<12|ye<<6|I[$++]&63,ie<65536)le+=String.fromCharCode(ie);else{var Ze=ie-65536;le+=String.fromCharCode(55296|Ze>>10,56320|Ze&1023)}}return le}function Be(I,$){return I?Le(o(),I,$):""}function Je(I,$,L,j){if(!(j>0))return 0;for(var le=L,ie=L+j-1,ue=0;ue<I.length;++ue){var ye=I.charCodeAt(ue);if(ye>=55296&&ye<=57343){var Ze=I.charCodeAt(++ue);ye=65536+((ye&1023)<<10)|Ze&1023}if(ye<=127){if(L>=ie)break;$[L++]=ye}else if(ye<=2047){if(L+1>=ie)break;$[L++]=192|ye>>6,$[L++]=128|ye&63}else if(ye<=65535){if(L+2>=ie)break;$[L++]=224|ye>>12,$[L++]=128|ye>>6&63,$[L++]=128|ye&63}else{if(L+3>=ie)break;$[L++]=240|ye>>18,$[L++]=128|ye>>12&63,$[L++]=128|ye>>6&63,$[L++]=128|ye&63}}return $[L]=0,L-le}function et(I,$,L){return Je(I,o(),$,L)}function He(I){for(var $=0,L=0;L<I.length;++L){var j=I.charCodeAt(L);j>=55296&&j<=57343&&(j=65536+((j&1023)<<10)|I.charCodeAt(++L)&1023),j<=127?++$:j<=2047?$+=2:j<=65535?$+=3:$+=4}return $}function lt(I,$){a().set(I,$)}function st(I,$){return I%$>0&&(I+=$-I%$),I}var ht,bt,An,Ht,Xn,sn,In,Ln,En;function qt(I){ht=I,l.HEAP8=bt=new Int8Array(I),l.HEAP16=Ht=new Int16Array(I),l.HEAP32=sn=new Int32Array(I),l.HEAPU8=An=new Uint8Array(I),l.HEAPU16=Xn=new Uint16Array(I),l.HEAPU32=In=new Uint32Array(I),l.HEAPF32=Ln=new Float32Array(I),l.HEAPF64=En=new Float64Array(I)}var cs=l.INITIAL_MEMORY||16777216;if(S)te=l.wasmMemory,ht=l.buffer;else if(l.wasmMemory)te=l.wasmMemory;else if(te=new WebAssembly.Memory({initial:cs/65536,maximum:2147483648/65536,shared:!0}),!(te.buffer instanceof SharedArrayBuffer))throw U("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");te&&(ht=te.buffer),cs=ht.byteLength,qt(ht);var Jt,ds=[],hs=[],Ws=[],ji=[],Yn=[],Rl=!1,bh=!1;S||hs.push({func:function(){Yl()}});function Dl(){if(!S){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)yh(l.preRun.shift());ao(ds)}}function Fl(){Rl=!0,!S&&ao(hs)}function Ol(){S||ao(Ws)}function hn(){S||(bh=!0)}function Pl(){if(!S){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)vh(l.postRun.shift());ao(Yn)}}function yh(I){ds.unshift(I)}function vh(I){Yn.unshift(I)}var zn=0,Ki=null,Ir=null;function xh(I){be(!S,"addRunDependency cannot be used in a pthread worker"),zn++,l.monitorRunDependencies&&l.monitorRunDependencies(zn)}function wh(I){if(zn--,l.monitorRunDependencies&&l.monitorRunDependencies(zn),zn==0&&(Ki!==null&&(clearInterval(Ki),Ki=null),Ir)){var $=Ir;Ir=null,$()}}l.preloadedImages={},l.preloadedAudios={};function As(I){l.onAbort&&l.onAbort(I),S&&console.error("Pthread aborting at "+new Error().stack),I+="",U(I),ce=!0,pe=1,I="abort("+I+"). Build with -s ASSERTIONS=1 for more info.";var $=new WebAssembly.RuntimeError(I);throw h($),$}function Sr(I,$){return String.prototype.startsWith?I.startsWith($):I.indexOf($)===0}var kh="data:application/octet-stream;base64,";function Ll(I){return Sr(I,kh)}var Ih="file://";function zl(I){return Sr(I,Ih)}var pn="tfjs-backend-wasm-threaded-simd.wasm";Ll(pn)||(pn=A(pn));function Sh(I){try{if(I==pn&&ne)return new Uint8Array(ne);if(R)return R(I);throw"both async and sync fetching of the wasm failed"}catch($){As($)}}function Ml(){if(!ne&&(v||y)){if(typeof fetch=="function"&&!zl(pn))return fetch(pn,{credentials:"same-origin"}).then(function(I){if(!I.ok)throw"failed to load wasm binary file at '"+pn+"'";return I.arrayBuffer()}).catch(function(){return Sh(pn)});if(O)return new Promise(function(I,$){O(pn,function(L){I(new Uint8Array(L))},$)})}return Promise.resolve().then(function(){return Sh(pn)})}function Ch(){var I={a:bp};function $(ue,ye){var Ze=ue.exports;if(l.asm=Ze,Jt=l.asm.kb,re=ye,!S){var Mt=ke.unusedWorkers.length;ke.unusedWorkers.forEach(function(Rt){ke.loadWasmModuleToWorker(Rt,function(){--Mt||wh("wasm-instantiate")})})}}S||xh("wasm-instantiate");function L(ue){$(ue.instance,ue.module)}function j(ue){return Ml().then(function(ye){return WebAssembly.instantiate(ye,I)}).then(ue,function(ye){U("failed to asynchronously prepare wasm: "+ye),As(ye)})}function le(){return!ne&&typeof WebAssembly.instantiateStreaming=="function"&&!Ll(pn)&&!zl(pn)&&typeof fetch=="function"?fetch(pn,{credentials:"same-origin"}).then(function(ue){var ye=WebAssembly.instantiateStreaming(ue,I);return ye.then(L,function(Ze){return U("wasm streaming compile failed: "+Ze),U("falling back to ArrayBuffer instantiation"),j(L)})}):j(L)}if(l.instantiateWasm)try{var ie=l.instantiateWasm(I,$);return ie}catch(ue){return U("Module.instantiateWasm callback failed with error: "+ue),!1}return le().catch(h),{}}var Bl={10072:function(){throw"Canceled!"},10090:function(I,$){setTimeout(function(){Ty(I,$)},0)}};function Nh(){ke.initRuntime()}function ao(I){for(;I.length>0;){var $=I.shift();if(typeof $=="function"){$(l);continue}var L=$.func;typeof L=="number"?$.arg===void 0?Jt.get(L)():Jt.get(L)($.arg):L($.arg===void 0?null:$.arg)}}var Us={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Xi(I,$){if(I<=0||I>a().length||I&!0||$<0)return-28;if($==0)return 0;$>=2147483647&&($=1/0);var L=Atomics.load(i(),co>>2),j=0;if(L==I){var le=Atomics.compareExchange(i(),co>>2,L,0);if(le==L&&(--$,j=1,$<=0))return 1}var ie=Atomics.notify(i(),I>>2,$);if(ie>=0)return ie+j;throw"Atomics.notify returned an unexpected value "+ie}l._emscripten_futex_wake=Xi;function Th(I){if(S)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in killThread!";i()[I+12>>2]=0;var $=ke.pthreads[I];$.worker.terminate(),ke.freeThreadData($),ke.runningWorkers.splice(ke.runningWorkers.indexOf($.worker),1),$.worker.pthread=void 0}function $h(I){if(S)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in cancelThread!";var $=ke.pthreads[I];$.worker.postMessage({cmd:"cancel"})}function Vl(I){if(S)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in cleanupThread!";var $=ke.pthreads[I];if($){i()[I+12>>2]=0;var L=$.worker;ke.returnWorkerToPool(L)}}var ke={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var I=8,$=0;$<I;++$)ke.allocateUnusedWorker()},initRuntime:function(){for(var I=Nr(228),$=0;$<228/4;++$)u()[I/4+$]=0;i()[I+12>>2]=I;var L=I+152;i()[L>>2]=L;for(var j=Nr(512),$=0;$<128;++$)u()[j/4+$]=0;Atomics.store(u(),I+100>>2,j),Atomics.store(u(),I+40>>2,I),Lp(I,!y,1),Cy(I)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;ke.threadExitHandlers.length>0;)ke.threadExitHandlers.pop()();S&&js()&&Sy()},runExitHandlersAndDeinitThread:function(I,$){Atomics.store(u(),I+56>>2,1),Atomics.store(u(),I+60>>2,0),ke.runExitHandlers(),Atomics.store(u(),I+4>>2,$),Atomics.store(u(),I+0>>2,1),Xi(I+0,2147483647),Lp(0,0,0)},threadExit:function(I){var $=js();$&&(ke.runExitHandlersAndDeinitThread($,I),S&&postMessage({cmd:"exit"}))},threadCancel:function(){ke.runExitHandlersAndDeinitThread(js(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var I in ke.pthreads){var $=ke.pthreads[I];$&&$.worker&&ke.returnWorkerToPool($.worker)}ke.pthreads={};for(var L=0;L<ke.unusedWorkers.length;++L){var j=ke.unusedWorkers[L];j.terminate()}ke.unusedWorkers=[];for(var L=0;L<ke.runningWorkers.length;++L){var j=ke.runningWorkers[L],$=j.pthread;ke.freeThreadData($),j.terminate()}ke.runningWorkers=[]},freeThreadData:function(I){if(!!I){if(I.threadInfoStruct){var $=i()[I.threadInfoStruct+100>>2];i()[I.threadInfoStruct+100>>2]=0,nu($),nu(I.threadInfoStruct)}I.threadInfoStruct=0,I.allocatedOwnStack&&I.stackBase&&nu(I.stackBase),I.stackBase=0,I.worker&&(I.worker.pthread=null)}},returnWorkerToPool:function(I){ke.runWithoutMainThreadQueuedCalls(function(){delete ke.pthreads[I.pthread.threadInfoStruct],ke.unusedWorkers.push(I),ke.runningWorkers.splice(ke.runningWorkers.indexOf(I),1),ke.freeThreadData(I.pthread),I.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(I){i()[Ry>>2]=0;try{I()}finally{i()[Ry>>2]=1}},receiveObjectTransfer:function(I){},loadWasmModuleToWorker:function(I,$){I.onmessage=function(L){var j=L.data,le=j.cmd;if(I.pthread&&(ke.currentProxiedOperationCallerThread=I.pthread.threadInfoStruct),j.targetThread&&j.targetThread!=js()){var ie=ke.pthreads[j.targetThread];ie?ie.worker.postMessage(L.data,j.transferList):console.error('Internal error! Worker sent a message "'+le+'" to target pthread '+j.targetThread+", but that thread no longer exists!"),ke.currentProxiedOperationCallerThread=void 0;return}if(le==="processQueuedMainThreadWork")tc();else if(le==="spawnThread")Kl(L.data);else if(le==="cleanupThread")Vl(j.thread);else if(le==="killThread")Th(j.thread);else if(le==="cancelThread")$h(j.thread);else if(le==="loaded")I.loaded=!0,$&&$(I),I.runPthread&&(I.runPthread(),delete I.runPthread);else if(le==="print")G("Thread "+j.threadId+": "+j.text);else if(le==="printErr")U("Thread "+j.threadId+": "+j.text);else if(le==="alert")alert("Thread "+j.threadId+": "+j.text);else if(le==="exit"){var ue=I.pthread&&Atomics.load(u(),I.pthread.threadInfoStruct+64>>2);ue&&ke.returnWorkerToPool(I)}else if(le==="exitProcess")try{S2(j.returnCode)}catch(ye){if(ye instanceof ru)return;throw ye}else le==="cancelDone"?ke.returnWorkerToPool(I):le==="objectTransfer"?ke.receiveObjectTransfer(L.data):L.data.target==="setimmediate"?I.postMessage(L.data):U("worker sent an unknown command "+le);ke.currentProxiedOperationCallerThread=void 0},I.onerror=function(L){U("pthread sent an error! "+L.filename+":"+L.lineno+": "+L.message)},w&&(I.on("message",function(L){I.onmessage({data:L})}),I.on("error",function(L){I.onerror(L)}),I.on("exit",function(L){})),I.postMessage({cmd:"load",urlOrBlob:l.mainScriptUrlOrBlob||s,wasmMemory:te,wasmModule:re})},allocateUnusedWorker:function(){var I=A("tfjs-backend-wasm-threaded-simd.worker.js");ke.unusedWorkers.push(new Worker(I))},getNewWorker:function(){return ke.unusedWorkers.length==0&&(ke.allocateUnusedWorker(),ke.loadWasmModuleToWorker(ke.unusedWorkers[0])),ke.unusedWorkers.length>0?ke.unusedWorkers.pop():null},busySpinWait:function(I){for(var $=performance.now()+I;performance.now()<$;);}};function Ah(I,$){Ey(I,$),uo(I)}l.establishStackSpace=Ah;function Eh(){return ee}l.getNoExitRuntime=Eh;function _h(I,$){return Jt.get(I)($)}l.invokeEntryPoint=_h;function Rh(I,$,L,j){As("Assertion failed: "+Be(I)+", at: "+[$?Be($):"unknown filename",L,j?Be(j):"unknown function"])}function Dh(I,$){var L=_main(I,$)}var Cr;w?Cr=function(){var I=process.hrtime();return I[0]*1e3+I[1]/1e6}:S?Cr=function(){return performance.now()-l.__performance_now_clock_drift}:typeof dateNow!="undefined"?Cr=dateNow:Cr=function(){return performance.now()};function Fh(I){return i()[ky()>>2]=I,I}function Oh(I,$){if(S)return Gs(1,1,I,$)}function Ph(I,$){if(I==$)postMessage({cmd:"processQueuedMainThreadWork"});else if(S)postMessage({targetThread:I,cmd:"processThreadQueue"});else{var L=ke.pthreads[I],j=L&&L.worker;if(!j)return;j.postMessage({cmd:"processThreadQueue"})}return 1}function Lh(){As()}function zh(I,$,L){var j=Wh($,L);return Bl[I].apply(null,j)}function Mh(I,$){}function Wl(I,$,L){if(I<=0||I>a().length||I&!0)return-28;if(v){if(Atomics.load(i(),I>>2)!=$)return-6;for(var le=performance.now(),ie=le+L,ue=Atomics.exchange(i(),co>>2,I);;){if(le=performance.now(),le>ie)return ue=Atomics.exchange(i(),co>>2,0),-73;if(ue=Atomics.exchange(i(),co>>2,0),ue==0)break;if(tc(),Atomics.load(i(),I>>2)!=$)return-6;ue=Atomics.exchange(i(),co>>2,I)}return 0}else{var j=Atomics.wait(i(),I>>2,$,L);if(j==="timed-out")return-73;if(j==="not-equal")return-6;if(j==="ok")return 0;throw"Atomics.wait returned an unexpected value "+j}}function Bh(I,$,L){o().copyWithin(I,$,$+L)}function Vh(){return w?Mn("os").cpus().length:navigator.hardwareConcurrency}function Gs(I,$){for(var L=arguments.length-2,j=su(),le=L,ie=lo(le*8),ue=ie>>3,ye=0;ye<L;ye++){var Ze=arguments[2+ye];c()[ue+ye]=Ze}var Mt=Ay(I,le,ie,$);return uo(j),Mt}var Yi=[],Qi=[];function Wh(I,$){Qi.length=0;var L;for($>>=2;L=o()[I++];){var j=L<105;j&&$&1&&$++,Qi.push(j?c()[$++>>1]:i()[$]),++$}return Qi}function Uh(I,$,L){Yi.length=$;for(var j=L>>3,le=0;le<$;le++)Yi[le]=c()[j+le];var ie=I<0,ue=ie?Bl[-I-1]:gp[I];return ue.apply(null,Yi)}function Gh(){return o().length}function Hh(I){try{return te.grow(I-ht.byteLength+65535>>>16),qt(te.buffer),1}catch{}}function qh(I){var $=Gh();if(I<=$)return!1;var L=2147483648;if(I>L)return!1;for(var j=1;j<=4;j*=2){var le=$*(1+.2/j);le=Math.min(le,I+100663296);var ie=Math.min(L,st(Math.max(I,le),65536)),ue=Hh(ie);if(ue)return!0}return!1}var Pe={inEventHandler:0,removeAllEventListeners:function(){for(var I=Pe.eventHandlers.length-1;I>=0;--I)Pe._removeHandler(I);Pe.eventHandlers=[],Pe.deferredCalls=[]},registerRemoveEventListeners:function(){Pe.removeEventListenersRegistered||(ji.push(Pe.removeAllEventListeners),Pe.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(I,$,L){function j(ue,ye){if(ue.length!=ye.length)return!1;for(var Ze in ue)if(ue[Ze]!=ye[Ze])return!1;return!0}for(var le in Pe.deferredCalls){var ie=Pe.deferredCalls[le];if(ie.targetFunction==I&&j(ie.argsList,L))return}Pe.deferredCalls.push({targetFunction:I,precedence:$,argsList:L}),Pe.deferredCalls.sort(function(ue,ye){return ue.precedence<ye.precedence})},removeDeferredCalls:function(I){for(var $=0;$<Pe.deferredCalls.length;++$)Pe.deferredCalls[$].targetFunction==I&&(Pe.deferredCalls.splice($,1),--$)},canPerformEventHandlerRequests:function(){return Pe.inEventHandler&&Pe.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Pe.canPerformEventHandlerRequests())for(var I=0;I<Pe.deferredCalls.length;++I){var $=Pe.deferredCalls[I];Pe.deferredCalls.splice(I,1),--I,$.targetFunction.apply(null,$.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(I,$){for(var L=0;L<Pe.eventHandlers.length;++L)Pe.eventHandlers[L].target==I&&(!$||$==Pe.eventHandlers[L].eventTypeString)&&Pe._removeHandler(L--)},_removeHandler:function(I){var $=Pe.eventHandlers[I];$.target.removeEventListener($.eventTypeString,$.eventListenerFunc,$.useCapture),Pe.eventHandlers.splice(I,1)},registerOrRemoveHandler:function(I){var $=function(le){++Pe.inEventHandler,Pe.currentEventHandler=I,Pe.runDeferredCalls(),I.handlerFunc(le),Pe.runDeferredCalls(),--Pe.inEventHandler};if(I.callbackfunc)I.eventListenerFunc=$,I.target.addEventListener(I.eventTypeString,$,I.useCapture),Pe.eventHandlers.push(I),Pe.registerRemoveEventListeners();else for(var L=0;L<Pe.eventHandlers.length;++L)Pe.eventHandlers[L].target==I.target&&Pe.eventHandlers[L].eventTypeString==I.eventTypeString&&Pe._removeHandler(L--)},queueEventHandlerOnThread_iiii:function(I,$,L,j,le){var ie=su(),ue=lo(12);i()[ue>>2]=L,i()[ue+4>>2]=j,i()[ue+8>>2]=le,Pp(0,I,637534208,$,j,ue),uo(ie)},getTargetThreadForEventCallback:function(I){switch(I){case 1:return 0;case 2:return ke.currentProxiedOperationCallerThread;default:return I}},getNodeNameForTarget:function(I){return I?I==window?"#window":I==screen?"#screen":I&&I.nodeName?I.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function jh(I){var $=He(I)+1,L=Nr($);return et(I,L,$),L}function Kh(I,$,L,j){var le=su(),ie=lo(12),ue=0;$&&(ue=jh($)),i()[ie>>2]=ue,i()[ie+4>>2]=L,i()[ie+8>>2]=j,Pp(0,I,657457152,0,ue,ie),uo(le)}function Xh(I,$,L,j){$=$?Be($):"",Kh(I,$,L,j)}function Yh(I){return I>2?Be(I):I}var Qh=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function Zh(I){I=Yh(I);var $=Qh[I]||(typeof document!="undefined"?document.querySelector(I):void 0);return $}function Zi(I){return Zh(I)}function Ul(I,$,L){var j=Zi(I);if(!j)return-4;if(j.canvasSharedPtr&&(i()[j.canvasSharedPtr>>2]=$,i()[j.canvasSharedPtr+4>>2]=L),j.offscreenCanvas||!j.controlTransferredOffscreen){j.offscreenCanvas&&(j=j.offscreenCanvas);var le=!1;if(j.GLctxObject&&j.GLctxObject.GLctx){var ie=j.GLctxObject.GLctx.getParameter(2978);le=ie[0]===0&&ie[1]===0&&ie[2]===j.width&&ie[3]===j.height}j.width=$,j.height=L,le&&j.GLctxObject.GLctx.viewport(0,0,$,L)}else if(j.canvasSharedPtr){var ue=i()[j.canvasSharedPtr+8>>2];return Xh(ue,I,$,L),1}else return-4;return 0}function Gl(I,$,L){return S?Gs(2,1,I,$,L):Ul(I,$,L)}function Jh(I,$,L){var j=Zi(I);return j?Ul(I,$,L):Gl(I,$,L)}function ep(I){}function tp(I,$){}function np(I){var $=I.getExtension("ANGLE_instanced_arrays");if($)return I.vertexAttribDivisor=function(L,j){$.vertexAttribDivisorANGLE(L,j)},I.drawArraysInstanced=function(L,j,le,ie){$.drawArraysInstancedANGLE(L,j,le,ie)},I.drawElementsInstanced=function(L,j,le,ie,ue){$.drawElementsInstancedANGLE(L,j,le,ie,ue)},1}function sp(I){var $=I.getExtension("OES_vertex_array_object");if($)return I.createVertexArray=function(){return $.createVertexArrayOES()},I.deleteVertexArray=function(L){$.deleteVertexArrayOES(L)},I.bindVertexArray=function(L){$.bindVertexArrayOES(L)},I.isVertexArray=function(L){return $.isVertexArrayOES(L)},1}function rp(I){var $=I.getExtension("WEBGL_draw_buffers");if($)return I.drawBuffers=function(L,j){$.drawBuffersWEBGL(L,j)},1}function ap(I){return!!(I.multiDrawWebgl=I.getExtension("WEBGL_multi_draw"))}var Ye={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function($){Ye.lastError||(Ye.lastError=$)},getNewId:function(I){for(var $=Ye.counter++,L=I.length;L<$;L++)I[L]=null;return $},getSource:function(I,$,L,j){for(var le="",ie=0;ie<$;++ie){var ue=j?i()[j+ie*4>>2]:-1;le+=Be(i()[L+ie*4>>2],ue<0?void 0:ue)}return le},createContext:function(I,$){var L=I.getContext("webgl",$);if(!L)return 0;var j=Ye.registerContext(L,$);return j},registerContext:function(I,$){var L=Nr(8);i()[L+4>>2]=js();var j={handle:L,attributes:$,version:$.majorVersion,GLctx:I};return I.canvas&&(I.canvas.GLctxObject=j),Ye.contexts[L]=j,(typeof $.enableExtensionsByDefault=="undefined"||$.enableExtensionsByDefault)&&Ye.initExtensions(j),L},makeContextCurrent:function(I){return Ye.currentContext=Ye.contexts[I],l.ctx=Hs=Ye.currentContext&&Ye.currentContext.GLctx,!(I&&!Hs)},getContext:function(I){return Ye.contexts[I]},deleteContext:function(I){Ye.currentContext===Ye.contexts[I]&&(Ye.currentContext=null),typeof Pe=="object"&&Pe.removeAllHandlersOnTarget(Ye.contexts[I].GLctx.canvas),Ye.contexts[I]&&Ye.contexts[I].GLctx.canvas&&(Ye.contexts[I].GLctx.canvas.GLctxObject=void 0),nu(Ye.contexts[I].handle),Ye.contexts[I]=null},initExtensions:function(I){if(I||(I=Ye.currentContext),!I.initExtensionsDone){I.initExtensionsDone=!0;var $=I.GLctx;np($),sp($),rp($),$.disjointTimerQueryExt=$.getExtension("EXT_disjoint_timer_query"),ap($);var L=$.getSupportedExtensions()||[];L.forEach(function(j){j.indexOf("lose_context")<0&&j.indexOf("debug")<0&&$.getExtension(j)})}},populateUniformTable:function(I){for(var $=Ye.programs[I],L=Ye.programInfos[I]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},j=L.uniforms,le=Hs.getProgramParameter($,35718),ie=0;ie<le;++ie){var ue=Hs.getActiveUniform($,ie),ye=ue.name;L.maxUniformLength=Math.max(L.maxUniformLength,ye.length+1),ye.slice(-1)=="]"&&(ye=ye.slice(0,ye.lastIndexOf("[")));var Ze=Hs.getUniformLocation($,ye);if(Ze){var Mt=Ye.getNewId(Ye.uniforms);j[ye]=[ue.size,Mt],Ye.uniforms[Mt]=Ze;for(var Rt=1;Rt<ue.size;++Rt){var Ks=ye+"["+Rt+"]";Ze=Hs.getUniformLocation($,Ks),Mt=Ye.getNewId(Ye.uniforms),Ye.uniforms[Mt]=Ze}}}}},op=["default","low-power","high-performance"];function ip(I,$){var L=$>>2,j=i()[L+(24>>2)],le={alpha:!!i()[L+(0>>2)],depth:!!i()[L+(4>>2)],stencil:!!i()[L+(8>>2)],antialias:!!i()[L+(12>>2)],premultipliedAlpha:!!i()[L+(16>>2)],preserveDrawingBuffer:!!i()[L+(20>>2)],powerPreference:op[j],failIfMajorPerformanceCaveat:!!i()[L+(28>>2)],majorVersion:i()[L+(32>>2)],minorVersion:i()[L+(36>>2)],enableExtensionsByDefault:i()[L+(40>>2)],explicitSwapControl:i()[L+(44>>2)],proxyContextToMainThread:i()[L+(48>>2)],renderViaOffscreenBackBuffer:i()[L+(52>>2)]},ie=Zi(I);if(!ie||le.explicitSwapControl)return 0;var ue=Ye.createContext(ie,le);return ue}function up(I,$){return ip(I,$)}var oo={mappings:{},buffers:[null,[],[]],printChar:function(I,$){var L=oo.buffers[I];$===0||$===10?((I===1?G:U)(Le(L,0)),L.length=0):L.push($)},varargs:void 0,get:function(){oo.varargs+=4;var I=i()[oo.varargs-4>>2];return I},getStr:function(I){var $=Be(I);return $},get64:function(I,$){return I}};function Hl(I){return S?Gs(3,1,I):0}function ql(I,$,L,j,le){if(S)return Gs(4,1,I,$,L,j,le)}function jl(I,$,L,j){if(S)return Gs(5,1,I,$,L,j);for(var le=0,ie=0;ie<L;ie++){for(var ue=i()[$+ie*8>>2],ye=i()[$+(ie*8+4)>>2],Ze=0;Ze<ye;Ze++)oo.printChar(I,o()[ue+Ze]);le+=ye}return i()[j>>2]=le,0}function lp(I){var $=ke.threadExitHandlers.pop();I&&$()}function cp(I,$){ke.threadExitHandlers.push(function(){Jt.get(I)($)})}function Kl(I){if(S)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var $=ke.getNewWorker();if($.pthread!==void 0)throw"Internal error!";if(!I.pthread_ptr)throw"Internal error, no pthread ptr!";ke.runningWorkers.push($);for(var L=Nr(128*4),j=0;j<128;++j)i()[L+j*4>>2]=0;var le=I.stackBase+I.stackSize,ie=ke.pthreads[I.pthread_ptr]={worker:$,stackBase:I.stackBase,stackSize:I.stackSize,allocatedOwnStack:I.allocatedOwnStack,threadInfoStruct:I.pthread_ptr},ue=ie.threadInfoStruct>>2;Atomics.store(u(),ue+(64>>2),I.detached),Atomics.store(u(),ue+(100>>2),L),Atomics.store(u(),ue+(40>>2),ie.threadInfoStruct),Atomics.store(u(),ue+(80>>2),I.stackSize),Atomics.store(u(),ue+(76>>2),le),Atomics.store(u(),ue+(104>>2),I.stackSize),Atomics.store(u(),ue+(104+8>>2),le),Atomics.store(u(),ue+(104+12>>2),I.detached);var ye=Iy(),Ze=ye+40;Atomics.store(u(),ue+(172>>2),Ze),$.pthread=ie;var Mt={cmd:"run",start_routine:I.startRoutine,arg:I.arg,threadInfoStruct:I.pthread_ptr,stackBase:I.stackBase,stackSize:I.stackSize};$.runPthread=function(){Mt.time=performance.now(),$.postMessage(Mt,I.transferList)},$.loaded&&($.runPthread(),delete $.runPthread)}function dp(I,$,L,j){if(typeof SharedArrayBuffer=="undefined")return U("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!I)return U("pthread_create called with a null thread pointer!"),28;var le=[],ie=0;if(S&&(le.length===0||ie))return $y(687865856,I,$,L,j);if(ie)return ie;var ue=0,ye=0,Ze=0;$&&$!=-1?(ue=i()[$>>2],ue+=81920,ye=i()[$+8>>2],Ze=i()[$+12>>2]!==0):ue=2097152;var Mt=ye==0;Mt?ye=_y(16,ue):(ye-=ue,be(ye>0));for(var Rt=Nr(228),Ks=0;Ks<228>>2;++Ks)u()[(Rt>>2)+Ks]=0;i()[I>>2]=Rt,i()[Rt+12>>2]=Rt;var ho=Rt+152;i()[ho>>2]=ho;var rn={stackBase:ye,stackSize:ue,allocatedOwnStack:Mt,detached:Ze,startRoutine:L,pthread_ptr:Rt,arg:j,transferList:le};return S?(rn.cmd="spawnThread",postMessage(rn,le)):Kl(rn),0}function hp(){if(!!S){var I=js();if(!!I){var $=Atomics.load(u(),I+56>>2);if(!$){var L=Atomics.load(u(),I+0>>2);if(L==2)throw"Canceled!"}}}}function pp(){w||y||q("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function fp(I,$,L){if(!I)return U("pthread_join attempted on a null thread pointer!"),Us.ESRCH;if(S&&js()==I)return U("PThread "+I+" is attempting to join to itself!"),Us.EDEADLK;if(!S&&Ny()==I)return U("Main thread "+I+" is attempting to join to itself!"),Us.EDEADLK;var j=i()[I+12>>2];if(j!==I)return U("pthread_join attempted on thread "+I+", which does not point to a valid thread, or does not exist anymore!"),Us.ESRCH;var le=Atomics.load(u(),I+64>>2);if(le)return U("Attempted to join thread "+I+", which was already detached!"),Us.EINVAL;for(L&&pp();;){var ie=Atomics.load(u(),I+0>>2);if(ie==1){var ue=Atomics.load(u(),I+4>>2);return $&&(i()[$>>2]=ue),Atomics.store(u(),I+64>>2,1),S?postMessage({cmd:"cleanupThread",thread:I}):Vl(I),0}if(!L)return Us.EBUSY;hp(),S||tc(),Wl(I+0,ie,S?100:1)}}function mp(I,$){return fp(I,$,!0)}function Xl(I){if(S)return Gs(6,1,I);switch(I){case 30:return 16384;case 85:var $=2147483648;return $/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return Fh(28),-1}S||ke.initMainThreadBlock();var Hs,gp=[null,Oh,Gl,Hl,ql,jl,Xl],bp={e:Rh,r:Dh,x:Ph,b:Lh,y:zh,j:Mh,d:Wl,c:Xi,f:Cr,p:Bh,A:Vh,u:Uh,q:qh,v:Jh,i:ep,s:tp,w:up,l:Hl,n:ql,g:jl,o:Nh,a:te||l.wasmMemory,z:lp,k:cp,h:dp,m:mp,t:Xl},wy=Ch(),Yl=l.___wasm_call_ctors=function(){return(Yl=l.___wasm_call_ctors=l.asm.B).apply(null,arguments)},yp=l._init=function(){return(yp=l._init=l.asm.C).apply(null,arguments)},vp=l._init_with_threads_count=function(){return(vp=l._init_with_threads_count=l.asm.D).apply(null,arguments)},xp=l._get_threads_count=function(){return(xp=l._get_threads_count=l.asm.E).apply(null,arguments)},wp=l._register_tensor=function(){return(wp=l._register_tensor=l.asm.F).apply(null,arguments)},kp=l._dispose_data=function(){return(kp=l._dispose_data=l.asm.G).apply(null,arguments)},Ip=l._dispose=function(){return(Ip=l._dispose=l.asm.H).apply(null,arguments)},Sp=l._Abs=function(){return(Sp=l._Abs=l.asm.I).apply(null,arguments)},Cp=l._Add=function(){return(Cp=l._Add=l.asm.J).apply(null,arguments)},Np=l._AddN=function(){return(Np=l._AddN=l.asm.K).apply(null,arguments)},Tp=l._All=function(){return(Tp=l._All=l.asm.L).apply(null,arguments)},$p=l._Any=function(){return($p=l._Any=l.asm.M).apply(null,arguments)},Ap=l._ArgMax=function(){return(Ap=l._ArgMax=l.asm.N).apply(null,arguments)},Ep=l._AvgPool=function(){return(Ep=l._AvgPool=l.asm.O).apply(null,arguments)},_p=l._BatchMatMul=function(){return(_p=l._BatchMatMul=l.asm.P).apply(null,arguments)},Rp=l._Ceil=function(){return(Rp=l._Ceil=l.asm.Q).apply(null,arguments)},Dp=l._ClipByValue=function(){return(Dp=l._ClipByValue=l.asm.R).apply(null,arguments)},Fp=l._Conv2D=function(){return(Fp=l._Conv2D=l.asm.S).apply(null,arguments)},Ql=l._Conv2DBackpropInput=function(){return(Ql=l._Conv2DBackpropInput=l.asm.T).apply(null,arguments)},Zl=l._Cos=function(){return(Zl=l._Cos=l.asm.U).apply(null,arguments)},Ji=l._Cosh=function(){return(Ji=l._Cosh=l.asm.V).apply(null,arguments)},io=l._CropAndResize=function(){return(io=l._CropAndResize=l.asm.W).apply(null,arguments)},Op=l._Cumsum=function(){return(Op=l._Cumsum=l.asm.X).apply(null,arguments)},eu=l._DepthToSpace=function(){return(eu=l._DepthToSpace=l.asm.Y).apply(null,arguments)},Q=l._DepthwiseConv2dNative=function(){return(Q=l._DepthwiseConv2dNative=l.asm.Z).apply(null,arguments)},se=l._Elu=function(){return(se=l._Elu=l.asm._).apply(null,arguments)},fe=l._Equal=function(){return(fe=l._Equal=l.asm.$).apply(null,arguments)},qe=l._Exp=function(){return(qe=l._Exp=l.asm.aa).apply(null,arguments)},wt=l._FlipLeftRight=function(){return(wt=l._FlipLeftRight=l.asm.ba).apply(null,arguments)},pt=l._Floor=function(){return(pt=l._Floor=l.asm.ca).apply(null,arguments)},Ve=l._FloorDiv=function(){return(Ve=l._FloorDiv=l.asm.da).apply(null,arguments)},We=l._FusedBatchNorm=function(){return(We=l._FusedBatchNorm=l.asm.ea).apply(null,arguments)},jt=l._FusedConv2D=function(){return(jt=l._FusedConv2D=l.asm.fa).apply(null,arguments)},Es=l._FusedDepthwiseConv2D=function(){return(Es=l._FusedDepthwiseConv2D=l.asm.ga).apply(null,arguments)},_s=l._Gather=function(){return(_s=l._Gather=l.asm.ha).apply(null,arguments)},Jl=l._GatherNd=function(){return(Jl=l._GatherNd=l.asm.ia).apply(null,arguments)},tu=l._Greater=function(){return(tu=l._Greater=l.asm.ja).apply(null,arguments)},Sn=l._GreaterEqual=function(){return(Sn=l._GreaterEqual=l.asm.ka).apply(null,arguments)},qs=l._LeakyRelu=function(){return(qs=l._LeakyRelu=l.asm.la).apply(null,arguments)},ec=l._Less=function(){return(ec=l._Less=l.asm.ma).apply(null,arguments)},$1=l._LessEqual=function(){return($1=l._LessEqual=l.asm.na).apply(null,arguments)},A1=l._Log=function(){return(A1=l._Log=l.asm.oa).apply(null,arguments)},E1=l._LogicalAnd=function(){return(E1=l._LogicalAnd=l.asm.pa).apply(null,arguments)},_1=l._Max=function(){return(_1=l._Max=l.asm.qa).apply(null,arguments)},R1=l._MaxPool=function(){return(R1=l._MaxPool=l.asm.ra).apply(null,arguments)},D1=l._Maximum=function(){return(D1=l._Maximum=l.asm.sa).apply(null,arguments)},F1=l._Mean=function(){return(F1=l._Mean=l.asm.ta).apply(null,arguments)},O1=l._Min=function(){return(O1=l._Min=l.asm.ua).apply(null,arguments)},P1=l._Minimum=function(){return(P1=l._Minimum=l.asm.va).apply(null,arguments)},L1=l._MirrorPad=function(){return(L1=l._MirrorPad=l.asm.wa).apply(null,arguments)},z1=l._Multiply=function(){return(z1=l._Multiply=l.asm.xa).apply(null,arguments)},M1=l._Neg=function(){return(M1=l._Neg=l.asm.ya).apply(null,arguments)},B1=l._NonMaxSuppressionV3=function(){return(B1=l._NonMaxSuppressionV3=l.asm.za).apply(null,arguments)},V1=l._NonMaxSuppressionV4=function(){return(V1=l._NonMaxSuppressionV4=l.asm.Aa).apply(null,arguments)},W1=l._NonMaxSuppressionV5=function(){return(W1=l._NonMaxSuppressionV5=l.asm.Ba).apply(null,arguments)},U1=l._NotEqual=function(){return(U1=l._NotEqual=l.asm.Ca).apply(null,arguments)},G1=l._OneHot=function(){return(G1=l._OneHot=l.asm.Da).apply(null,arguments)},H1=l._PadV2=function(){return(H1=l._PadV2=l.asm.Ea).apply(null,arguments)},q1=l._Pow=function(){return(q1=l._Pow=l.asm.Fa).apply(null,arguments)},j1=l._Prelu=function(){return(j1=l._Prelu=l.asm.Ga).apply(null,arguments)},K1=l._Prod=function(){return(K1=l._Prod=l.asm.Ha).apply(null,arguments)},X1=l._RealDiv=function(){return(X1=l._RealDiv=l.asm.Ia).apply(null,arguments)},Y1=l._Relu=function(){return(Y1=l._Relu=l.asm.Ja).apply(null,arguments)},Q1=l._Relu6=function(){return(Q1=l._Relu6=l.asm.Ka).apply(null,arguments)},Z1=l._ResizeBilinear=function(){return(Z1=l._ResizeBilinear=l.asm.La).apply(null,arguments)},J1=l._Reverse=function(){return(J1=l._Reverse=l.asm.Ma).apply(null,arguments)},e2=l._RotateWithOffset=function(){return(e2=l._RotateWithOffset=l.asm.Na).apply(null,arguments)},t2=l._Round=function(){return(t2=l._Round=l.asm.Oa).apply(null,arguments)},n2=l._Rsqrt=function(){return(n2=l._Rsqrt=l.asm.Pa).apply(null,arguments)},s2=l._ScatterNd=function(){return(s2=l._ScatterNd=l.asm.Qa).apply(null,arguments)},r2=l._SelectV2=function(){return(r2=l._SelectV2=l.asm.Ra).apply(null,arguments)},a2=l._Sigmoid=function(){return(a2=l._Sigmoid=l.asm.Sa).apply(null,arguments)},o2=l._Sin=function(){return(o2=l._Sin=l.asm.Ta).apply(null,arguments)},i2=l._Softmax=function(){return(i2=l._Softmax=l.asm.Ua).apply(null,arguments)},u2=l._Sqrt=function(){return(u2=l._Sqrt=l.asm.Va).apply(null,arguments)},l2=l._Square=function(){return(l2=l._Square=l.asm.Wa).apply(null,arguments)},c2=l._SquaredDifference=function(){return(c2=l._SquaredDifference=l.asm.Xa).apply(null,arguments)},d2=l._Step=function(){return(d2=l._Step=l.asm.Ya).apply(null,arguments)},h2=l._StridedSlice=function(){return(h2=l._StridedSlice=l.asm.Za).apply(null,arguments)},p2=l._Sub=function(){return(p2=l._Sub=l.asm._a).apply(null,arguments)},f2=l._Sum=function(){return(f2=l._Sum=l.asm.$a).apply(null,arguments)},m2=l._Tan=function(){return(m2=l._Tan=l.asm.ab).apply(null,arguments)},g2=l._Tanh=function(){return(g2=l._Tanh=l.asm.bb).apply(null,arguments)},b2=l._Tile=function(){return(b2=l._Tile=l.asm.cb).apply(null,arguments)},y2=l._TopK=function(){return(y2=l._TopK=l.asm.db).apply(null,arguments)},v2=l._Transform=function(){return(v2=l._Transform=l.asm.eb).apply(null,arguments)},x2=l._Transpose=function(){return(x2=l._Transpose=l.asm.fb).apply(null,arguments)},w2=l.__FusedMatMul=function(){return(w2=l.__FusedMatMul=l.asm.gb).apply(null,arguments)},Nr=l._malloc=function(){return(Nr=l._malloc=l.asm.hb).apply(null,arguments)},nu=l._free=function(){return(nu=l._free=l.asm.ib).apply(null,arguments)},ky=l.___errno_location=function(){return(ky=l.___errno_location=l.asm.jb).apply(null,arguments)},Iy=l._emscripten_get_global_libc=function(){return(Iy=l._emscripten_get_global_libc=l.asm.lb).apply(null,arguments)},js=l._pthread_self=function(){return(js=l._pthread_self=l.asm.mb).apply(null,arguments)},Sy=l.___pthread_tsd_run_dtors=function(){return(Sy=l.___pthread_tsd_run_dtors=l.asm.nb).apply(null,arguments)},tc=l._emscripten_main_thread_process_queued_calls=function(){return(tc=l._emscripten_main_thread_process_queued_calls=l.asm.ob).apply(null,arguments)},k2=l._emscripten_current_thread_process_queued_calls=function(){return(k2=l._emscripten_current_thread_process_queued_calls=l.asm.pb).apply(null,arguments)},Cy=l._emscripten_register_main_browser_thread_id=function(){return(Cy=l._emscripten_register_main_browser_thread_id=l.asm.qb).apply(null,arguments)},Ny=l._emscripten_main_browser_thread_id=function(){return(Ny=l._emscripten_main_browser_thread_id=l.asm.rb).apply(null,arguments)},Ty=l.__emscripten_do_dispatch_to_thread=function(){return(Ty=l.__emscripten_do_dispatch_to_thread=l.asm.sb).apply(null,arguments)},$y=l._emscripten_sync_run_in_main_thread_4=function(){return($y=l._emscripten_sync_run_in_main_thread_4=l.asm.tb).apply(null,arguments)},Ay=l._emscripten_run_in_main_runtime_thread_js=function(){return(Ay=l._emscripten_run_in_main_runtime_thread_js=l.asm.ub).apply(null,arguments)},Pp=l.__emscripten_call_on_thread=function(){return(Pp=l.__emscripten_call_on_thread=l.asm.vb).apply(null,arguments)},I2=l._emscripten_tls_init=function(){return(I2=l._emscripten_tls_init=l.asm.wb).apply(null,arguments)},Lp=l.__emscripten_thread_init=function(){return(Lp=l.__emscripten_thread_init=l.asm.xb).apply(null,arguments)},su=l.stackSave=function(){return(su=l.stackSave=l.asm.yb).apply(null,arguments)},uo=l.stackRestore=function(){return(uo=l.stackRestore=l.asm.zb).apply(null,arguments)},lo=l.stackAlloc=function(){return(lo=l.stackAlloc=l.asm.Ab).apply(null,arguments)},Ey=l._emscripten_stack_set_limits=function(){return(Ey=l._emscripten_stack_set_limits=l.asm.Bb).apply(null,arguments)},_y=l._memalign=function(){return(_y=l._memalign=l.asm.Cb).apply(null,arguments)},Ry=l.__emscripten_allow_main_runtime_queued_calls=10064,co=l.__emscripten_main_thread_futex=10268;l.cwrap=Fe,l.PThread=ke,l.PThread=ke,l.wasmMemory=te,l.ExitStatus=ru;var nc;function ru(I){this.name="ExitStatus",this.message="Program terminated with exit("+I+")",this.status=I}Ir=function I(){nc||zp(),nc||(Ir=I)};function zp(I){if(I=I||m,zn>0)return;if(S){d(l),Fl(),postMessage({cmd:"loaded"});return}if(Dl(),zn>0)return;function $(){nc||(nc=!0,l.calledRun=!0,!ce&&(Fl(),Ol(),d(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),Pl()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),$()},1)):$()}l.run=zp;function S2(I,$){if(!($&&ee&&I===0)){if(!$&&S)throw postMessage({cmd:"exitProcess",returnCode:I}),new ru(I);ee||(ke.terminateAllThreads(),pe=I,hn(),l.onExit&&l.onExit(I),ce=!0),b(I,new ru(I))}}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();return S&&(ee=!1,ke.initWorker()),zp(),r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),U2=fn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};var a=typeof r!="undefined"?r:{},o,i;a.ready=new Promise(function(Q,se){o=Q,i=se});var u={},c;for(c in a)a.hasOwnProperty(c)&&(u[c]=a[c]);var l=[],d="./this.program",h=function(Q,se){throw se},p=!1,f=!1,m=!1,g=!1;p=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g=!p&&!m&&!f;var b="";function v(Q){return a.locateFile?a.locateFile(Q,b):b+Q}var y,w,k,S,N,A;m?(f?b=Mn("path").dirname(b)+"/":b=__dirname+"/",y=function(se,fe){return N||(N=Mn("fs")),A||(A=Mn("path")),se=A.normalize(se),N.readFileSync(se,fe?null:"utf8")},k=function(se){var fe=y(se,!0);return fe.buffer||(fe=new Uint8Array(fe)),G(fe.buffer),fe},process.argv.length>1&&(d=process.argv[1].replace(/\\/g,"/")),l=process.argv.slice(2),process.on("uncaughtException",function(Q){if(!(Q instanceof Op))throw Q}),process.on("unhandledRejection",Yn),h=function(Q){process.exit(Q)},a.inspect=function(){return"[Emscripten Module object]"}):g?(typeof read!="undefined"&&(y=function(se){return read(se)}),k=function(se){var fe;return typeof readbuffer=="function"?new Uint8Array(readbuffer(se)):(fe=read(se,"binary"),G(typeof fe=="object"),fe)},typeof scriptArgs!="undefined"?l=scriptArgs:typeof arguments!="undefined"&&(l=arguments),typeof quit=="function"&&(h=function(Q){quit(Q)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(p||f)&&(f?b=self.location.href:typeof document!="undefined"&&document.currentScript&&(b=document.currentScript.src),s&&(b=s),b.indexOf("blob:")!==0?b=b.substr(0,b.lastIndexOf("/")+1):b="",y=function(Q){var se=new XMLHttpRequest;return se.open("GET",Q,!1),se.send(null),se.responseText},f&&(k=function(Q){var se=new XMLHttpRequest;return se.open("GET",Q,!1),se.responseType="arraybuffer",se.send(null),new Uint8Array(se.response)}),w=function(Q,se,fe){var qe=new XMLHttpRequest;qe.open("GET",Q,!0),qe.responseType="arraybuffer",qe.onload=function(){if(qe.status==200||qe.status==0&&qe.response){se(qe.response);return}fe()},qe.onerror=fe,qe.send(null)},S=function(Q){document.title=Q});var _=a.print||console.log.bind(console),O=a.printErr||console.warn.bind(console);for(c in u)u.hasOwnProperty(c)&&(a[c]=u[c]);u=null,a.arguments&&(l=a.arguments),a.thisProgram&&(d=a.thisProgram),a.quit&&(h=a.quit);var R;a.wasmBinary&&(R=a.wasmBinary);var D=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Yn("no native wasm support detected");var C,P=!1,V;function G(Q,se){Q||Yn("Assertion failed: "+se)}function U(Q){var se=a["_"+Q];return G(se,"Cannot call unknown function "+Q+", make sure it is exported"),se}function q(Q,se,fe,qe,wt){var pt={string:function(Sn){var qs=0;if(Sn!=null&&Sn!==0){var ec=(Sn.length<<2)+1;qs=Ji(ec),te(Sn,qs,ec)}return qs},array:function(Sn){var qs=Ji(Sn.length);return re(Sn,qs),qs}};function Ve(Sn){return se==="string"?ne(Sn):se==="boolean"?Boolean(Sn):Sn}var We=U(Q),jt=[],Es=0;if(qe)for(var _s=0;_s<qe.length;_s++){var Jl=pt[fe[_s]];Jl?(Es===0&&(Es=Ql()),jt[_s]=Jl(qe[_s])):jt[_s]=qe[_s]}var tu=We.apply(null,jt);return tu=Ve(tu),Es!==0&&Zl(Es),tu}function Y(Q,se,fe,qe){fe=fe||[];var wt=fe.every(function(Ve){return Ve==="number"}),pt=se!=="string";return pt&&wt&&!qe?U(Q):function(){return q(Q,se,fe,arguments,qe)}}var Z=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function J(Q,se,fe){for(var qe=se+fe,wt=se;Q[wt]&&!(wt>=qe);)++wt;if(wt-se>16&&Q.subarray&&Z)return Z.decode(Q.subarray(se,wt));for(var pt="";se<wt;){var Ve=Q[se++];if(!(Ve&128)){pt+=String.fromCharCode(Ve);continue}var We=Q[se++]&63;if((Ve&224)==192){pt+=String.fromCharCode((Ve&31)<<6|We);continue}var jt=Q[se++]&63;if((Ve&240)==224?Ve=(Ve&15)<<12|We<<6|jt:Ve=(Ve&7)<<18|We<<12|jt<<6|Q[se++]&63,Ve<65536)pt+=String.fromCharCode(Ve);else{var Es=Ve-65536;pt+=String.fromCharCode(55296|Es>>10,56320|Es&1023)}}return pt}function ne(Q,se){return Q?J(we,Q,se):""}function ee(Q,se,fe,qe){if(!(qe>0))return 0;for(var wt=fe,pt=fe+qe-1,Ve=0;Ve<Q.length;++Ve){var We=Q.charCodeAt(Ve);if(We>=55296&&We<=57343){var jt=Q.charCodeAt(++Ve);We=65536+((We&1023)<<10)|jt&1023}if(We<=127){if(fe>=pt)break;se[fe++]=We}else if(We<=2047){if(fe+1>=pt)break;se[fe++]=192|We>>6,se[fe++]=128|We&63}else if(We<=65535){if(fe+2>=pt)break;se[fe++]=224|We>>12,se[fe++]=128|We>>6&63,se[fe++]=128|We&63}else{if(fe+3>=pt)break;se[fe++]=240|We>>18,se[fe++]=128|We>>12&63,se[fe++]=128|We>>6&63,se[fe++]=128|We&63}}return se[fe]=0,fe-wt}function te(Q,se,fe){return ee(Q,we,se,fe)}function re(Q,se){be.set(Q,se)}function ce(Q,se){return Q%se>0&&(Q+=se-Q%se),Q}var pe,be,we,Ae,Fe,Le,Be,Je,et;function He(Q){pe=Q,a.HEAP8=be=new Int8Array(Q),a.HEAP16=Ae=new Int16Array(Q),a.HEAP32=Le=new Int32Array(Q),a.HEAPU8=we=new Uint8Array(Q),a.HEAPU16=Fe=new Uint16Array(Q),a.HEAPU32=Be=new Uint32Array(Q),a.HEAPF32=Je=new Float32Array(Q),a.HEAPF64=et=new Float64Array(Q)}var lt=a.INITIAL_MEMORY||16777216,st,ht=[],bt=[],An=[],Ht=[],Xn=!1;bt.push({func:function(){Ml()}});function sn(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)qt(a.preRun.shift());zn(ht)}function In(){Xn=!0,zn(bt)}function Ln(){zn(An)}function En(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)cs(a.postRun.shift());zn(Ht)}function qt(Q){ht.unshift(Q)}function cs(Q){Ht.unshift(Q)}var Jt=0,ds=null,hs=null;function Ws(Q){Jt++,a.monitorRunDependencies&&a.monitorRunDependencies(Jt)}function ji(Q){if(Jt--,a.monitorRunDependencies&&a.monitorRunDependencies(Jt),Jt==0&&(ds!==null&&(clearInterval(ds),ds=null),hs)){var se=hs;hs=null,se()}}a.preloadedImages={},a.preloadedAudios={};function Yn(Q){a.onAbort&&a.onAbort(Q),Q+="",O(Q),P=!0,V=1,Q="abort("+Q+"). Build with -s ASSERTIONS=1 for more info.";var se=new WebAssembly.RuntimeError(Q);throw i(se),se}function Rl(Q,se){return String.prototype.startsWith?Q.startsWith(se):Q.indexOf(se)===0}var bh="data:application/octet-stream;base64,";function Dl(Q){return Rl(Q,bh)}var Fl="file://";function Ol(Q){return Rl(Q,Fl)}var hn="tfjs-backend-wasm.wasm";Dl(hn)||(hn=v(hn));function Pl(Q){try{if(Q==hn&&R)return new Uint8Array(R);if(k)return k(Q);throw"both async and sync fetching of the wasm failed"}catch(se){Yn(se)}}function yh(){if(!R&&(p||f)){if(typeof fetch=="function"&&!Ol(hn))return fetch(hn,{credentials:"same-origin"}).then(function(Q){if(!Q.ok)throw"failed to load wasm binary file at '"+hn+"'";return Q.arrayBuffer()}).catch(function(){return Pl(hn)});if(w)return new Promise(function(Q,se){w(hn,function(fe){Q(new Uint8Array(fe))},se)})}return Promise.resolve().then(function(){return Pl(hn)})}function vh(){var Q={a:pn};function se(Ve,We){var jt=Ve.exports;a.asm=jt,C=a.asm.h,He(C.buffer),st=a.asm.Sa,ji("wasm-instantiate")}Ws("wasm-instantiate");function fe(Ve){se(Ve.instance)}function qe(Ve){return yh().then(function(We){return WebAssembly.instantiate(We,Q)}).then(Ve,function(We){O("failed to asynchronously prepare wasm: "+We),Yn(We)})}function wt(){return!R&&typeof WebAssembly.instantiateStreaming=="function"&&!Dl(hn)&&!Ol(hn)&&typeof fetch=="function"?fetch(hn,{credentials:"same-origin"}).then(function(Ve){var We=WebAssembly.instantiateStreaming(Ve,Q);return We.then(fe,function(jt){return O("wasm streaming compile failed: "+jt),O("falling back to ArrayBuffer instantiation"),qe(fe)})}):qe(fe)}if(a.instantiateWasm)try{var pt=a.instantiateWasm(Q,se);return pt}catch(Ve){return O("Module.instantiateWasm callback failed with error: "+Ve),!1}return wt().catch(i),{}}function zn(Q){for(;Q.length>0;){var se=Q.shift();if(typeof se=="function"){se(a);continue}var fe=se.func;typeof fe=="number"?se.arg===void 0?st.get(fe)():st.get(fe)(se.arg):fe(se.arg===void 0?null:se.arg)}}function Ki(){Yn()}function Ir(Q,se,fe){we.copyWithin(Q,se,se+fe)}function xh(){return we.length}function wh(Q){try{return C.grow(Q-pe.byteLength+65535>>>16),He(C.buffer),1}catch{}}function As(Q){var se=xh(),fe=2147483648;if(Q>fe)return!1;for(var qe=1;qe<=4;qe*=2){var wt=se*(1+.2/qe);wt=Math.min(wt,Q+100663296);var pt=Math.min(fe,ce(Math.max(Q,wt),65536)),Ve=wh(pt);if(Ve)return!0}return!1}var Sr={mappings:{},buffers:[null,[],[]],printChar:function(Q,se){var fe=Sr.buffers[Q];se===0||se===10?((Q===1?_:O)(J(fe,0)),fe.length=0):fe.push(se)},varargs:void 0,get:function(){Sr.varargs+=4;var Q=Le[Sr.varargs-4>>2];return Q},getStr:function(Q){var se=ne(Q);return se},get64:function(Q,se){return Q}};function kh(Q){return 0}function Ll(Q,se,fe,qe,wt){}function Ih(Q,se,fe,qe){for(var wt=0,pt=0;pt<fe;pt++){for(var Ve=Le[se+pt*8>>2],We=Le[se+(pt*8+4)>>2],jt=0;jt<We;jt++)Sr.printChar(Q,we[Ve+jt]);wt+=We}return Le[qe>>2]=wt,0}function zl(){return 28}var pn={a:Ki,d:Ir,e:As,f:kh,c:Ll,b:Ih,g:zl},Sh=vh(),Ml=a.___wasm_call_ctors=function(){return(Ml=a.___wasm_call_ctors=a.asm.i).apply(null,arguments)},Ch=a._init=function(){return(Ch=a._init=a.asm.j).apply(null,arguments)},Bl=a._init_with_threads_count=function(){return(Bl=a._init_with_threads_count=a.asm.k).apply(null,arguments)},Nh=a._get_threads_count=function(){return(Nh=a._get_threads_count=a.asm.l).apply(null,arguments)},ao=a._register_tensor=function(){return(ao=a._register_tensor=a.asm.m).apply(null,arguments)},Us=a._dispose_data=function(){return(Us=a._dispose_data=a.asm.n).apply(null,arguments)},Xi=a._dispose=function(){return(Xi=a._dispose=a.asm.o).apply(null,arguments)},Th=a._Abs=function(){return(Th=a._Abs=a.asm.p).apply(null,arguments)},$h=a._Add=function(){return($h=a._Add=a.asm.q).apply(null,arguments)},Vl=a._AddN=function(){return(Vl=a._AddN=a.asm.r).apply(null,arguments)},ke=a._All=function(){return(ke=a._All=a.asm.s).apply(null,arguments)},Ah=a._Any=function(){return(Ah=a._Any=a.asm.t).apply(null,arguments)},Eh=a._ArgMax=function(){return(Eh=a._ArgMax=a.asm.u).apply(null,arguments)},_h=a._AvgPool=function(){return(_h=a._AvgPool=a.asm.v).apply(null,arguments)},Rh=a._BatchMatMul=function(){return(Rh=a._BatchMatMul=a.asm.w).apply(null,arguments)},Dh=a._Ceil=function(){return(Dh=a._Ceil=a.asm.x).apply(null,arguments)},Cr=a._ClipByValue=function(){return(Cr=a._ClipByValue=a.asm.y).apply(null,arguments)},Fh=a._Conv2D=function(){return(Fh=a._Conv2D=a.asm.z).apply(null,arguments)},Oh=a._Conv2DBackpropInput=function(){return(Oh=a._Conv2DBackpropInput=a.asm.A).apply(null,arguments)},Ph=a._Cos=function(){return(Ph=a._Cos=a.asm.B).apply(null,arguments)},Lh=a._Cosh=function(){return(Lh=a._Cosh=a.asm.C).apply(null,arguments)},zh=a._CropAndResize=function(){return(zh=a._CropAndResize=a.asm.D).apply(null,arguments)},Mh=a._Cumsum=function(){return(Mh=a._Cumsum=a.asm.E).apply(null,arguments)},Wl=a._DepthToSpace=function(){return(Wl=a._DepthToSpace=a.asm.F).apply(null,arguments)},Bh=a._DepthwiseConv2dNative=function(){return(Bh=a._DepthwiseConv2dNative=a.asm.G).apply(null,arguments)},Vh=a._Elu=function(){return(Vh=a._Elu=a.asm.H).apply(null,arguments)},Gs=a._Equal=function(){return(Gs=a._Equal=a.asm.I).apply(null,arguments)},Yi=a._Exp=function(){return(Yi=a._Exp=a.asm.J).apply(null,arguments)},Qi=a._FlipLeftRight=function(){return(Qi=a._FlipLeftRight=a.asm.K).apply(null,arguments)},Wh=a._Floor=function(){return(Wh=a._Floor=a.asm.L).apply(null,arguments)},Uh=a._FloorDiv=function(){return(Uh=a._FloorDiv=a.asm.M).apply(null,arguments)},Gh=a._FusedBatchNorm=function(){return(Gh=a._FusedBatchNorm=a.asm.N).apply(null,arguments)},Hh=a._FusedConv2D=function(){return(Hh=a._FusedConv2D=a.asm.O).apply(null,arguments)},qh=a._FusedDepthwiseConv2D=function(){return(qh=a._FusedDepthwiseConv2D=a.asm.P).apply(null,arguments)},Pe=a._Gather=function(){return(Pe=a._Gather=a.asm.Q).apply(null,arguments)},jh=a._GatherNd=function(){return(jh=a._GatherNd=a.asm.R).apply(null,arguments)},Kh=a._Greater=function(){return(Kh=a._Greater=a.asm.S).apply(null,arguments)},Xh=a._GreaterEqual=function(){return(Xh=a._GreaterEqual=a.asm.T).apply(null,arguments)},Yh=a._LeakyRelu=function(){return(Yh=a._LeakyRelu=a.asm.U).apply(null,arguments)},Qh=a._Less=function(){return(Qh=a._Less=a.asm.V).apply(null,arguments)},Zh=a._LessEqual=function(){return(Zh=a._LessEqual=a.asm.W).apply(null,arguments)},Zi=a._Log=function(){return(Zi=a._Log=a.asm.X).apply(null,arguments)},Ul=a._LogicalAnd=function(){return(Ul=a._LogicalAnd=a.asm.Y).apply(null,arguments)},Gl=a._Max=function(){return(Gl=a._Max=a.asm.Z).apply(null,arguments)},Jh=a._MaxPool=function(){return(Jh=a._MaxPool=a.asm._).apply(null,arguments)},ep=a._Maximum=function(){return(ep=a._Maximum=a.asm.$).apply(null,arguments)},tp=a._Mean=function(){return(tp=a._Mean=a.asm.aa).apply(null,arguments)},np=a._Min=function(){return(np=a._Min=a.asm.ba).apply(null,arguments)},sp=a._Minimum=function(){return(sp=a._Minimum=a.asm.ca).apply(null,arguments)},rp=a._MirrorPad=function(){return(rp=a._MirrorPad=a.asm.da).apply(null,arguments)},ap=a._Multiply=function(){return(ap=a._Multiply=a.asm.ea).apply(null,arguments)},Ye=a._Neg=function(){return(Ye=a._Neg=a.asm.fa).apply(null,arguments)},op=a._NonMaxSuppressionV3=function(){return(op=a._NonMaxSuppressionV3=a.asm.ga).apply(null,arguments)},ip=a._NonMaxSuppressionV4=function(){return(ip=a._NonMaxSuppressionV4=a.asm.ha).apply(null,arguments)},up=a._NonMaxSuppressionV5=function(){return(up=a._NonMaxSuppressionV5=a.asm.ia).apply(null,arguments)},oo=a._NotEqual=function(){return(oo=a._NotEqual=a.asm.ja).apply(null,arguments)},Hl=a._OneHot=function(){return(Hl=a._OneHot=a.asm.ka).apply(null,arguments)},ql=a._PadV2=function(){return(ql=a._PadV2=a.asm.la).apply(null,arguments)},jl=a._Pow=function(){return(jl=a._Pow=a.asm.ma).apply(null,arguments)},lp=a._Prelu=function(){return(lp=a._Prelu=a.asm.na).apply(null,arguments)},cp=a._Prod=function(){return(cp=a._Prod=a.asm.oa).apply(null,arguments)},Kl=a._RealDiv=function(){return(Kl=a._RealDiv=a.asm.pa).apply(null,arguments)},dp=a._Relu=function(){return(dp=a._Relu=a.asm.qa).apply(null,arguments)},hp=a._Relu6=function(){return(hp=a._Relu6=a.asm.ra).apply(null,arguments)},pp=a._ResizeBilinear=function(){return(pp=a._ResizeBilinear=a.asm.sa).apply(null,arguments)},fp=a._Reverse=function(){return(fp=a._Reverse=a.asm.ta).apply(null,arguments)},mp=a._RotateWithOffset=function(){return(mp=a._RotateWithOffset=a.asm.ua).apply(null,arguments)},Xl=a._Round=function(){return(Xl=a._Round=a.asm.va).apply(null,arguments)},Hs=a._Rsqrt=function(){return(Hs=a._Rsqrt=a.asm.wa).apply(null,arguments)},gp=a._ScatterNd=function(){return(gp=a._ScatterNd=a.asm.xa).apply(null,arguments)},bp=a._SelectV2=function(){return(bp=a._SelectV2=a.asm.ya).apply(null,arguments)},wy=a._Sigmoid=function(){return(wy=a._Sigmoid=a.asm.za).apply(null,arguments)},Yl=a._Sin=function(){return(Yl=a._Sin=a.asm.Aa).apply(null,arguments)},yp=a._Softmax=function(){return(yp=a._Softmax=a.asm.Ba).apply(null,arguments)},vp=a._Sqrt=function(){return(vp=a._Sqrt=a.asm.Ca).apply(null,arguments)},xp=a._Square=function(){return(xp=a._Square=a.asm.Da).apply(null,arguments)},wp=a._SquaredDifference=function(){return(wp=a._SquaredDifference=a.asm.Ea).apply(null,arguments)},kp=a._Step=function(){return(kp=a._Step=a.asm.Fa).apply(null,arguments)},Ip=a._StridedSlice=function(){return(Ip=a._StridedSlice=a.asm.Ga).apply(null,arguments)},Sp=a._Sub=function(){return(Sp=a._Sub=a.asm.Ha).apply(null,arguments)},Cp=a._Sum=function(){return(Cp=a._Sum=a.asm.Ia).apply(null,arguments)},Np=a._Tan=function(){return(Np=a._Tan=a.asm.Ja).apply(null,arguments)},Tp=a._Tanh=function(){return(Tp=a._Tanh=a.asm.Ka).apply(null,arguments)},$p=a._Tile=function(){return($p=a._Tile=a.asm.La).apply(null,arguments)},Ap=a._TopK=function(){return(Ap=a._TopK=a.asm.Ma).apply(null,arguments)},Ep=a._Transform=function(){return(Ep=a._Transform=a.asm.Na).apply(null,arguments)},_p=a._Transpose=function(){return(_p=a._Transpose=a.asm.Oa).apply(null,arguments)},Rp=a.__FusedMatMul=function(){return(Rp=a.__FusedMatMul=a.asm.Pa).apply(null,arguments)},Dp=a._malloc=function(){return(Dp=a._malloc=a.asm.Qa).apply(null,arguments)},Fp=a._free=function(){return(Fp=a._free=a.asm.Ra).apply(null,arguments)},Ql=a.stackSave=function(){return(Ql=a.stackSave=a.asm.Ta).apply(null,arguments)},Zl=a.stackRestore=function(){return(Zl=a.stackRestore=a.asm.Ua).apply(null,arguments)},Ji=a.stackAlloc=function(){return(Ji=a.stackAlloc=a.asm.Va).apply(null,arguments)};a.cwrap=Y;var io;function Op(Q){this.name="ExitStatus",this.message="Program terminated with exit("+Q+")",this.status=Q}hs=function Q(){io||eu(),io||(hs=Q)};function eu(Q){if(Q=Q||l,Jt>0||(sn(),Jt>0))return;function se(){io||(io=!0,a.calledRun=!0,!P&&(In(),Ln(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),En()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),se()},1)):se()}if(a.run=eu,a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();return eu(),r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),G2=1e-7,H2=1e-4,ac=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},au=class{refCount(e){return Bn("refCount")}incRef(e){return Bn("incRef")}timerAvailable(){return!0}time(e){return Bn("time")}read(e){return Bn("read")}readSync(e){return Bn("readSync")}numDataIds(){return Bn("numDataIds")}disposeData(e,t){return Bn("disposeData")}write(e,t,n){return Bn("write")}move(e,t,n,s,r){return Bn("move")}memory(){return Bn("memory")}floatPrecision(){return Bn("floatPrecision")}epsilon(){return this.floatPrecision()===32?G2:H2}dispose(){return Bn("dispose")}};function Bn(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Py(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,oc(e,t,n)}function q2(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,oc(e,n,s),oc(t,n,s)}function ou(e,t,n){return Math.max(e,Math.min(t,n))}function j2(e){return e%2==0?e:e+1}function oc(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function K2(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function X2(e,t){let n=Math.random();return t*n+(1-n)*e}function Y2(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function F(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Qn(e,t,n=""){F(Xs(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function ic(e){F(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Ar(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||en(e)&&!n)for(let s=0;s<e.length;++s)Ar(e[s],t,n);else t.push(e);return t}function Dt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Q2(e){return e.length===0}function Xs(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Bt(e){return e%1==0}function Z2(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function J2(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function eN(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Py(t),t}function iu(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function tN(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,o=()=>{if(e()){s();return}a++;let i=t(a);if(n!=null&&a>=n){r();return}setTimeout(o,i)};o()})}function nN(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function Vn(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),F(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),F(e.every(s=>Bt(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function Ly(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:Vn(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),s.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),s.push(i))}return{newShape:n,keptDims:s}}function sN(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function zy(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function My(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function By(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function rN(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function en(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Mp(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function Vy(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Ys(e){return typeof e=="string"||e instanceof String}function Wy(e){return typeof e=="boolean"}function Uy(e){return typeof e=="number"}function uc(e){return Array.isArray(e)?uc(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Uy(e)?"float32":Ys(e)?"string":Wy(e)?"bool":"float32"}function lc(e){return!!(e&&e.constructor&&e.call&&e.apply)}function cc(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function fo(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function Gy(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((u,c)=>u*c)*(s?2:1);for(let u=0;u<a;u++)r[u]=Gy(e+u*i,o,n,s)}return r}function mo(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Gy(0,e,t,n)}function Bp(e,t){let n=dc(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function dc(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function aN(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return mo(e,new Float32Array(n));if(t==="int32")return mo(e,new Int32Array(n));if(t==="bool")return mo(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Vp(e){e.forEach(t=>{F(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function oN(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function iN(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function Wp(e){return e&&e.then&&typeof e.then=="function"}var Hy="tfjsflags",uN=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=lN,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Wp(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);Hy in e&&e[Hy].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=dN(s,r)})}};function lN(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(cN(t,s[0],s[1]),s.join("="))),t}function cN(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function dN(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function X(){return qy}var qy=null;function hN(e){qy=e}var Up;function jy(){if(Up==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");Up=e}return Up}function pN(){let e=jy();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function Gp(e,t){let n=pN();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var go="Abs",uu="Acos",lu="Acosh",Qs="Add",Er="AddN",cu="All",du="Any",_r="ArgMax",hu="ArgMin",pu="Asin",fu="Asinh",mu="Atan",gu="Atanh",bu="Atan2",Rr="AvgPool",Hp="AvgPoolGrad",hc="AvgPool3D",qp="AvgPool3DGrad",Dr="BatchMatMul",bo="BatchToSpaceND",jp="Bincount",fN="BroadcastTo",Kp="BroadcastArgs",Fr="Cast",Or="Ceil",Zs="ClipByValue",pc="Complex",fc="ComplexAbs",yo="Concat",Pr="Conv2D",Xp="Conv2DBackpropFilter",Lr="Conv2DBackpropInput",mc="Conv3D",Yp="Conv3DBackpropFilterV2",Qp="Conv3DBackpropInputV2",zr="Cos",Mr="Cosh",vo="Cumsum",xo="CropAndResize",Zp="DenseBincount",wo="DepthToSpace",Br="DepthwiseConv2dNative",Jp="DepthwiseConv2dNativeBackpropFilter",ef="DepthwiseConv2dNativeBackpropInput",tf="Diag",gc="Dilation2D",nf="Dilation2DBackpropInput",sf="Dilation2DBackpropFilter",Vr="RealDiv",bc="Einsum",Wr="Elu",rf="EluGrad",yu="Erf",ko="Equal",Ur="Exp",Io="ExpandDims",So="Expm1",af="FFT",vu="Fill",Co="FlipLeftRight",Gr="Floor",Hr="FloorDiv",qr="FusedBatchNorm",No="GatherV2",To="GatherNd",$o="Greater",jr="GreaterEqual",Kr="Identity",of="IFFT",yc="Imag",xu="IsFinite",wu="IsInf",ku="IsNan",Ao="LeakyRelu",Eo="Less",_o="LessEqual",Ky="LinSpace",Xr="Log",Iu="Log1p",Ro="LogicalAnd",Su="LogicalNot",vc="LogicalOr",mN="LogSoftmax",xc="LRN",uf="LRNGrad",Yr="Max",Qr="Maximum",Zr="MaxPool",lf="MaxPoolGrad",wc="MaxPool3D",cf="MaxPool3DGrad",df="MaxPoolWithArgmax",Jr="Mean",ea="Min",ta="Minimum",na="MirrorPad",Cu="Mod",hf="Multinomial",sa="Multiply",Do="Neg",Fo="NotEqual",Oo="NonMaxSuppressionV3",Nu="NonMaxSuppressionV4",Po="NonMaxSuppressionV5",Lo="OnesLike",zo="OneHot",Mo="Pack",ra="PadV2";var aa="Pow",oa="Prelu",Bo="Prod",Tu="Range",kc="Real",$u="Reciprocal",ia="Relu",Vo="Reshape",Au="ResizeNearestNeighbor",pf="ResizeNearestNeighborGrad",ua="ResizeBilinear",ff="ResizeBilinearGrad",la="Relu6",Wo="Reverse",Uo="Round",ca="Rsqrt",Go="ScatterNd",Ho="Select",Eu="Selu",qo="Slice",da="Sin",jo="Sinh",_u="Sign",ha="Sigmoid",Ru="Softplus",pa="Sqrt",fa="Sum",Ko="SpaceToBatchND",Xo="SplitV",ma="Softmax",mf="SparseFillEmptyRows",gf="SparseReshape",bf="SparseSegmentMean",yf="SparseSegmentSum",Ic="SparseToDense",ga="SquaredDifference",Du="Square",Yo="StridedSlice",Sc="StringNGrams",vf="StringSplit",xf="StringToHashBucketFast",ba="Sub",Qo="Tan",ya="Tanh",Js="Tile",Zo="TopK",Jo="Transform",va="Transpose",wf="Unique",ei="Unpack",Cc="UnsortedSegmentSum",ti="ZerosLike",xa="Step",Nc="FromPixels",ni="RotateWithOffset",wa="_FusedMatMul",ka="FusedConv2D",Ia="FusedDepthwiseConv2D";function er(...e){X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(...e)}function gN(...e){X().getBool("IS_TEST")||X().getBool("PROD")||console.log(...e)}var Tc=Gp("kernelRegistry",()=>new Map),kf=Gp("gradRegistry",()=>new Map);function If(e,t){let n=Yy(e,t);return Tc.get(n)}function Xy(e){return kf.get(e)}function $c(e){let t=Tc.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,o]=r,[i]=a.split("_");i===e&&n.push(o)}return n}function Ac(e){let{kernelName:t,backendName:n}=e,s=Yy(t,n);Tc.has(s)&&er(`The kernel '${t}' for backend '${n}' is already registered`),Tc.set(s,e)}function bN(e){let{kernelName:t}=e;kf.has(t)&&X().getBool("DEBUG")&&er(`Overriding the gradient for '${t}'`),kf.set(t,e)}function Yy(e,t){return`${t}_${e}`}var x={};$e(x,{arraysEqual:()=>Xs,assert:()=>F,assertNonNegativeIntegerDimensions:()=>Vp,assertNonNull:()=>ic,assertShapesMatch:()=>Qn,bytesFromStringArray:()=>Vy,bytesPerElement:()=>Mp,checkConversionForErrors:()=>My,clamp:()=>ou,computeStrides:()=>fo,createScalarValue:()=>IN,createShuffledIndices:()=>eN,decodeString:()=>Rc,distSquared:()=>Y2,encodeString:()=>Pu,fetch:()=>CN,fingerPrint64:()=>kN,flatten:()=>Ar,getArrayFromDType:()=>zy,getTypedArrayFromDType:()=>sN,hasEncodingLoss:()=>rN,hexToLong:()=>Fu,indexToLoc:()=>iN,inferDtype:()=>uc,inferFromImplicitShape:()=>nN,isBoolean:()=>Wy,isFunction:()=>lc,isInt:()=>Bt,isNumber:()=>Uy,isPromise:()=>Wp,isScalarShape:()=>Q2,isString:()=>Ys,isTypedArray:()=>en,isValidDtype:()=>By,locToIndex:()=>oN,makeOnesTypedArray:()=>Bp,makeZerosNestedTypedArray:()=>aN,makeZerosTypedArray:()=>dc,nearestDivisor:()=>cc,nearestLargerEven:()=>j2,now:()=>Ou,parseAxisParam:()=>Vn,randUniform:()=>X2,repeatedTry:()=>tN,rightPad:()=>iu,shuffle:()=>Py,shuffleCombo:()=>q2,sizeFromShape:()=>Dt,sizeToSquarishShape:()=>J2,squeezeShape:()=>Ly,sum:()=>K2,swap:()=>oc,tanh:()=>Z2,toNestedArray:()=>mo,toTypedArray:()=>_c});var Qy=$r(_2()),Sa=Qy.default||Qy;function Fu(e){return Sa.fromString(e,!0,16)}var Zy=Fu("c3a5c85c97cb3127"),Ca=Fu("b492b66fbe98f273"),an=Fu("9ae16a3b2f90404f");function Sf(e){return e.xor(e.shru(47))}function Jy(e,t,n){let s=e.slice(t,t+n);return Sa.fromBytes(Array.from(s),!0,!0)}function ut(e,t){return Jy(e,t,8)}function ev(e,t){return Jy(e,t,4)}function Vt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function tr(e,t,n=Fu("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function yN(e,t,n,s,r,a){r=r.add(e),a=Vt(a.add(r).add(s),21);let o=r;return r=r.add(t),r=r.add(n),a=a.add(Vt(r,44)),[r.add(s),a.add(o)]}function Ec(e,t,n,s){return yN(ut(e,t),ut(e,t+8),ut(e,t+16),ut(e,t+24),n,s)}function vN(e,t=e.length){if(t>=8){let n=an.add(t*2),s=ut(e,0).add(an),r=ut(e,t-8),a=Vt(r,37).mul(n).add(s),o=Vt(s,25).add(r).mul(n);return tr(a,o,n)}if(t>=4){let n=an.add(t*2),s=ev(e,0);return tr(s.shl(3).add(t),ev(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),o=t+(r<<2);return Sf(an.mul(a).xor(Zy.mul(o))).mul(an)}return an}function xN(e,t=e.length){let n=an.add(t*2),s=ut(e,0).mul(Ca),r=ut(e,8),a=ut(e,t-8).mul(n),o=ut(e,t-16).mul(an);return tr(Vt(s.add(r),43).add(Vt(a,30)).add(o),s.add(Vt(r.add(an),18)).add(a),n)}function wN(e,t=e.length){let n=an.add(t*2),s=ut(e,0).mul(an),r=ut(e,8),a=ut(e,t-8).mul(n),o=ut(e,t-16).mul(an),i=Vt(s.add(r),43).add(Vt(a,30)).add(o),u=tr(i,s.add(Vt(r.add(an),18)).add(a),n),c=ut(e,16).mul(n),l=ut(e,24),d=i.add(ut(e,t-32)).mul(n),h=u.add(ut(e,t-24)).mul(n);return tr(Vt(c.add(l),43).add(Vt(d,30)).add(h),c.add(Vt(l.add(s),18)).add(d),n)}function kN(e,t=e.length){let n=Sa.fromNumber(81,!0);if(t<=32)return t<=16?vN(e,t):xN(e,t);if(t<=64)return wN(e,t);let s=n,r=n.mul(Ca).add(113),a=Sf(r.mul(an).add(113)).mul(an),o=[Sa.UZERO,Sa.UZERO],i=[Sa.UZERO,Sa.UZERO];s=s.mul(an).add(ut(e,0));let u=0,c=(t-1>>6)*64,l=c+(t-1&63)-63;do s=Vt(s.add(r).add(o[0]).add(ut(e,u+8)),37).mul(Ca),r=Vt(r.add(o[1]).add(ut(e,u+48)),42).mul(Ca),s=s.xor(i[1]),r=r.add(o[0]).add(ut(e,u+40)),a=Vt(a.add(i[0]),33).mul(Ca),o=Ec(e,u,o[1].mul(Ca),s.add(i[0])),i=Ec(e,u+32,a.add(i[1]),r.add(ut(e,u+16))),[a,s]=[s,a],u+=64;while(u!==c);let d=Ca.add(a.and(255).shl(1));return u=l,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=Vt(s.add(r).add(o[0]).add(ut(e,u+8)),37).mul(d),r=Vt(r.add(o[1]).add(ut(e,u+48)),42).mul(d),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(ut(e,u+40))),a=Vt(a.add(i[0]),33).mul(d),o=Ec(e,u,o[1].mul(d),s.add(i[0])),i=Ec(e,u+32,a.add(i[1]),r.add(ut(e,u+16))),[a,s]=[s,a],tr(tr(o[0],i[0],d).add(Sf(r).mul(Zy)).add(a),tr(o[1],i[1],d).add(s),d)}function IN(e,t){return t==="string"?Pu(e):_c([e],t)}function SN(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function _c(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Ar(e)),X().getBool("DEBUG")&&My(e,t),SN(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function Ou(){return X().platform.now()}function CN(e,t){return X().platform.fetch(e,t)}function Pu(e,t="utf-8"){return t=t||"utf-8",X().platform.encode(e,t)}function Rc(e,t="utf-8"){return t=t||"utf-8",X().platform.decode(e,t)}var NN=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new $N)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,o=Ou();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let u of s)u.dataSync();a=Promise.resolve({kernelMs:Ou()-o})}if(X().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<s.length;u++){let c=s[u];c.data().then(l=>{TN(l,c.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),s,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],r,i[2])})})}};function TN(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var $N=class{logKernelProfile(e,t,n,s,r,a){let o=typeof s=="number"?iu(`${s}ms`,9):s.error,i=iu(e,25),u=t.rank,c=t.size,l=iu(t.shape.toString(),14),d="";for(let h in r){let p=r[h];if(p!=null){let f=p.shape||t.shape,m=f.length;d+=`${h}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${u}D ${l}	%c${c}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function AN(e,t,n){let s={},r={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<e.length;u++){let c=e[u],l=c.inputs;for(let d in l){let h=l[d],p=!1;for(let f=0;f<t.length;f++)if(s[h.id]){c.outputs.forEach(m=>s[m.id]=!0),p=!0,r[c.id]=!0;break}if(p)break}}let a={};a[n.id]=!0;let o={};for(let u=e.length-1;u>=0;u--){let c=e[u],l=c.inputs;for(let d=0;d<c.outputs.length;d++)if(a[c.outputs[d].id]){for(let h in l)a[l[h].id]=!0,o[c.id]=!0;break}}let i=[];for(let u=0;u<e.length;u++){let c=e[u];if(r[c.id]&&o[c.id]){let l={};for(let h in c.inputs){let p=c.inputs[h];s[p.id]&&(l[h]=p)}let d=Object.assign({},c);d.inputs=l,d.outputs=c.outputs,i.push(d)}}return i}function EN(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],o=[];if(a.outputs.forEach(u=>{let c=e[u.id];c!=null?o.push(c):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let u in a.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);let c=n(()=>i[u]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${c.dtype}'`);let l=a.inputs[u];if(!Xs(c.shape,l.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${u}' has shape '${c.shape}', which does not match the shape of the input '${l.shape}'`);if(e[l.id]==null)e[l.id]=c;else{let d=e[l.id];e[l.id]=s(d,c),d.dispose()}}}}var tv=20,Lu=3,Cf=7;function _N(e,t,n,s){let r=fo(t),a=RN(e,t,n,r),o=t.length,i=Dc(e,t,n,r,a),u=["Tensor"];return s&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${o}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map(c=>"    "+c).join(`
`)),u.join(`
`)}function RN(e,t,n,s){let r=Dt(t),a=s[s.length-1],o=new Array(a).fill(0),i=t.length,u=n==="complex64"?Mu(e):e;if(i>1)for(let c=0;c<r/a;c++){let l=c*a;for(let d=0;d<a;d++)o[d]=Math.max(o[d],zu(u[l+d],0,n).length)}return o}function zu(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(Cf))} + ${parseFloat(e[1].toFixed(Cf))}j`:Ys(e)?s=`'${e}'`:n==="bool"?s=nv(e):s=parseFloat(e.toFixed(Cf)).toString(),iu(s,t)}function nv(e){return e===0?"false":"true"}function Dc(e,t,n,s,r,a=!0){let o=n==="complex64"?2:1,i=t[0],u=t.length;if(u===0){if(n==="complex64"){let m=Mu(e);return[zu(m[0],0,n)]}return n==="bool"?[nv(e[0])]:[e[0].toString()]}if(u===1){if(i>tv){let g=Lu*o,b=Array.from(e.slice(0,g)),v=Array.from(e.slice((i-Lu)*o,i*o));return n==="complex64"&&(b=Mu(b),v=Mu(v)),["["+b.map((y,w)=>zu(y,r[w],n)).join(", ")+", ..., "+v.map((y,w)=>zu(y,r[i-Lu+w],n)).join(", ")+"]"]}let m=n==="complex64"?Mu(e):Array.from(e);return["["+m.map((g,b)=>zu(g,r[b],n)).join(", ")+"]"]}let c=t.slice(1),l=s.slice(1),d=s[0]*o,h=[];if(i>tv){for(let m=0;m<Lu;m++){let g=m*d,b=g+d;h.push(...Dc(e.slice(g,b),c,n,l,r,!1))}h.push("...");for(let m=i-Lu;m<i;m++){let g=m*d,b=g+d;h.push(...Dc(e.slice(g,b),c,n,l,r,m===i-1))}}else for(let m=0;m<i;m++){let g=m*d,b=g+d;h.push(...Dc(e.slice(g,b),c,n,l,r,m===i-1))}let p=u===2?",":"";h[0]="["+h[0]+p;for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+p;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(a?"":f),h}function Mu(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var tn=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Dt(e),n!=null){let s=n.length;F(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||zy(t,this.size),this.strides=fo(e)}set(e,...t){t.length===0&&(t=[0]),F(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ps().makeTensor(this.values,this.shape,this.dtype)}},ps=null,si=null,DN=null;function FN(e){ps=e}function ON(e){si=e}function PN(e){DN=e}var yt=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Dt(e),this.strides=fo(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return si.buffer(this.shape,this.dtype,e)}bufferSync(){return si.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return mo(this.shape,e,this.dtype==="complex64")}arraySync(){return mo(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=ps().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Rc(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=ps().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Rc(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await ps().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ps().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return si.print(this,e)}clone(){return this.throwIfDisposed(),si.clone(this)}toString(e=!1){let t=this.dataSync();return _N(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),si.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ps().makeVariable(this,e,t,n)}};Object.defineProperty(yt,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function LN(){return Gp("Tensor",()=>yt)}LN();var Fc=class extends yt{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Xs(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ps().disposeTensor(this),this.dataId=e.dataId,ps().incRef(this,null)}dispose(){ps().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Fc,Symbol.hasInstance,{value:e=>e instanceof yt&&e.assign!=null&&e.assign instanceof Function});var fs={};$e(fs,{assertTypesMatch:()=>rv,getTensorsInContainer:()=>Ef,isTensorInList:()=>MN,makeTypesMatch:()=>vt});var sv;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(sv||(sv={}));var Nf;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(Nf||(Nf={}));var Tf;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(Tf||(Tf={}));var $f;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})($f||($f={}));var Af;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(Af||(Af={}));var zN={float32:$f,int32:Nf,bool:Tf,complex64:Af};function mn(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return zN[e][t]}function Oc(e){return mn(e,"int32")}function vt(e,t){if(e.dtype===t.dtype)return[e,t];let n=mn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function rv(e,t){F(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function MN(e,t){return t.some(n=>n.id===e.id)}function Ef(e){let t=[],n=new Set;return av(e,t,n),t}function av(e,t,n){if(e==null)return;if(e instanceof yt){t.push(e);return}if(!BN(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),av(a,t,n))}}function BN(e){return Array.isArray(e)||typeof e=="object"}function _f(e){return e.kernelName!=null}var ov=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Rf=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ov}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(er(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new NN(this.backendInstance),!0}setupRegisteredKernels(){$c(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){$c(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof au)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,er(`Initialization of backend ${e} failed`),er(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return er(`Initialization of backend ${e} failed`),er(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return Rf.nextTensorId++}nextVariableId(){return Rf.nextVariableId++}clone(e){let t=M.runKernel(Kr,{x:e}),n={x:e},s=a=>({x:()=>{let o="float32",i={x:a},u={dtype:o};return M.runKernel(Fr,i,u)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(If(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(i=>{r+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-r-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,u=_f(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(_f(e)){let{kernelName:p,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=If(p,this.backendName);F(g!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),o=()=>{let b=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let v=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,b,v);let y=v.map(w=>{if(w.rank!=null)return w;let{dataId:k,shape:S,dtype:N}=w;return this.makeTensorFromDataId(k,S,N)});if(s){let w=this.getTensorsForGradient(p,f,y);n=this.saveTensorsForBackwardMode(w)}return y}}else{let{forwardFunc:p}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>p(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,m,g),g}}let{inputs:c,attrs:l}=e,d=_f(e)?null:e.backwardsFunc,h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(h=this.profiler.profileKernel(u,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs)}),s&&this.addTapeNode(u,c,t,d,n,l),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(p=>c[p]!=null?c[p].shape:null),outputShapes:t.map(p=>p.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=Xy(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],o;s.saveAllInputs?(F(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(u=>t[u])):o=r.map(u=>t[u]);let i=n.filter((u,c)=>a[c]);return o.concat(i)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&Ys(e[0])&&(r=e.map(i=>Pu(i)));let a=s.write(r,t,n),o=new yt(t,n,a,this.nextTensorId());if(this.trackTensor(o,s),n==="string"){let i=this.state.tensorInfo.get(a),u=Vy(r);this.state.numBytes+=u-i.bytes,i.bytes=u}return o}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r=new yt(t,n,e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new Fc(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Mp(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Fc||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*Mp(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=Xy(e);i!=null&&(s=i.gradFunc),s!=null&&(o.gradient=u=>(u=u.map((c,l)=>{if(c==null){let d=n[l],h=dc(d.size,d.dtype);return this.makeTensor(h,d.shape,d.dtype)}return c}),s(u.length>1?u:u[0],r,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Ef(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(F(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));F(r instanceof yt,()=>"The result y returned by f() must be a tensor.");let a=AN(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[r.id]=n??VN(r.shape),EN(o,a,u=>this.tidy(u),WN);let i=t.map(u=>o[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let c of u.saved)c.dispose()}),this.state.activeTape=null),{value:r,grads:i}})}customGrad(e){return F(lc(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{F(t.every(o=>o instanceof yt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((o,i)=>{s[i]=o});let r=(o,i)=>(n=e(...t,i),F(n.value instanceof yt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),F(lc(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let u=n.gradFunc(o,i),c=Array.isArray(u)?u:[u];F(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),F(c.every(d=>d instanceof yt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let l={};return c.forEach((d,h)=>{l[h]=()=>d}),l};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=Ou(),n=await this.backend.time(e);return n.wallMs=Ou()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ov;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},Df=Rf;Df.nextTensorId=0;Df.nextVariableId=0;function VN(e){let t=Bp(Dt(e),"float32");return M.makeTensor(t,e,"float32")}function iv(){let e=jy();if(e._tfengine==null){let t=new uN(e);e._tfengine=new Df(t)}return hN(e._tfengine.ENV),FN(()=>e._tfengine),e._tfengine}var M=iv();function WN(e,t){let n={a:e,b:t};return M.runKernel(Qs,n)}var Bu={};$e(Bu,{isBrowser:()=>uv,isMobile:()=>HN,mockIsMobile:()=>GN});function UN(){return typeof navigator!="undefined"&&navigator!=null}var Ff;function GN(e){Ff=e}function HN(e){if(Ff!==void 0)return Ff;if(e||UN()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function uv(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Zn=X();Zn.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Zn.registerFlag("IS_BROWSER",()=>uv());Zn.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Zn.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Zn.registerFlag("PROD",()=>!1);Zn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Zn.getBool("DEBUG"));Zn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Zn.registerFlag("IS_TEST",()=>!1);Zn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Zn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Na(e,t){let n=e;if(en(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||en(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&X().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&lv(e,s,[]),s}function lv(e,t,n){if(n=n||[],!Array.isArray(e)&&!en(e)){F(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}F(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),F(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)lv(e[r],s,n.concat(r))}function cv(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function E(e,t,n,s="numeric"){if(e instanceof yt)return cv(s,e.dtype,t,n),e;let r=uc(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),cv(s,r,t,n),e==null||!en(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let u=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${u}'`)}let a=Na(e,r);!en(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?_c(e,r):Ar(e,[],!0);return M.makeTensor(i,a,r)}function Pc(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>E(a,`${t}[${o}]`,n,s))}var qN="__op";function z(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+qN;let r=(...a)=>{M.startScope(n);try{let o=s(...a);return Wp(o)&&console.error("Cannot return a Promise inside of tidy."),M.endScope(o),o}catch(o){throw M.endScope(null),o}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function jN(e,t){let n=E(e,"real","complex"),s=E(t,"imag","complex");Qn(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return M.runKernel(pc,r)}var ri=z({complex_:jN});function Vu(e,t,n,s){if(s==null&&(s=uc(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!en(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Vp(t);let r=Dt(t),a=Dt(n);F(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],u=o===n.length-1?i!==Dt(t.slice(o)):!0;F(n[o]===t[o]||!u,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!en(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?_c(e,s):Ar(e,[],!0),M.makeTensor(e,t,s)}function ai(e,t,n){let s=Na(e,n);return Vu(e,t,s,n)}var Of={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Lc=4;async function KN(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<r.length;++o){let i=r[o],u=Array.isArray(e)?e[o].tensor:e[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);let c={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let l=new Promise(async d=>{let h=await u.bytes(),p=h.reduce((g,b)=>g+b.length,0)+Lc*h.length,f=new Uint8Array(p),m=0;for(let g=0;g<h.length;g++){let b=h[g],v=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(v,m),m+=Lc,f.set(b,m),m+=b.length}d(f)});s.push(l)}else s.push(u.data());t!=null&&(c.group=t),n.push(c)}let a=await Promise.all(s);return{data:XN(a),specs:n}}function dv(e,t){let n={},s,r=0;for(let a of t){let o=a.name,i=a.dtype,u=a.shape,c=Dt(u),l;if("quantization"in a){let d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let h=Of[d.dtype],p=e.slice(r,r+c*h),f=d.dtype==="uint8"?new Uint8Array(p):new Uint16Array(p);if(i==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){l=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];l[m]=g*d.scale+d.min}}else if(d.dtype==="float16")s===void 0&&(s=tT()),l=s(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(i==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);l=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];l[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*h}else if(i==="string"){let d=Dt(a.shape);l=[];for(let h=0;h<d;h++){let p=new Uint32Array(e.slice(r,r+Lc))[0];r+=Lc;let f=new Uint8Array(e.slice(r,r+p));l.push(f),r+=p}}else{let d=Of[i],h=e.slice(r,r+c*d);if(i==="float32")l=new Float32Array(h);else if(i==="int32")l=new Int32Array(h);else if(i==="bool")l=new Uint8Array(h);else if(i==="complex64"){l=new Float32Array(h);let p=new Float32Array(l.length/2),f=new Float32Array(l.length/2);for(let b=0;b<p.length;b++)p[b]=l[b*2],f[b]=l[b*2+1];let m=ai(p,u,"float32"),g=ai(f,u,"float32");n[o]=ri(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*d}i!=="complex64"&&(n[o]=ai(l,u,i))}return n}function XN(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var Pf=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function hv(e){return Pf?Buffer.byteLength(e):new Blob([e]).size}function YN(e){if(Pf)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function QN(e){if(Pf){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function Lf(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function pv(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function fv(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function zf(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Wu(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:hv(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:hv(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function ZN(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)==0;)r-=8388608,s<<=1;return s&=~8388608,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function JN(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function eT(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function tT(){let e=ZN(),t=JN(),n=eT();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){let i=s[o],u=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=u}return new Float32Array(r)}}var kt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return kt.instance==null&&(kt.instance=new kt),kt.instance}static registerSaveRouter(e){kt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){kt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return kt.getHandlers(e,"save")}static getLoadHandlers(e,t){return kt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?kt.getInstance().loadRouters:kt.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&s.push(o)}),s}},nT=e=>kt.registerSaveRouter(e),sT=e=>kt.registerLoadRouter(e),rT=e=>kt.getSaveHandlers(e),aT=(e,t)=>kt.getLoadHandlers(e,t),Mf="tensorflowjs",Bf=1,Ta="models_store",nr="model_info_store";function mv(){if(!X().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Vf(e){let t=e.result;t.createObjectStore(Ta,{keyPath:"modelPath"}),t.createObjectStore(nr,{keyPath:"modelPath"})}var $a=class{constructor(e){if(this.indexedDB=mv(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(Mf,Bf);r.onupgradeneeded=()=>Vf(r),r.onsuccess=()=>{let a=r.result;if(t==null){let o=a.transaction(Ta,"readonly"),u=o.objectStore(Ta).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(u.result.modelArtifacts)},u.onerror=c=>(a.close(),s(u.error)),o.oncomplete=()=>a.close()}else{let o=Wu(t),i=a.transaction(nr,"readwrite"),u=i.objectStore(nr),c=u.put({modelPath:this.modelPath,modelArtifactsInfo:o}),l;c.onsuccess=()=>{l=a.transaction(Ta,"readwrite");let h=l.objectStore(Ta).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});h.onsuccess=()=>n({modelArtifactsInfo:o}),h.onerror=p=>{u=i.objectStore(nr);let f=u.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(h.error)),f.onerror=m=>(a.close(),s(h.error))}},c.onerror=d=>(a.close(),s(c.error)),i.oncomplete=()=>{l==null?a.close():l.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};$a.URL_SCHEME="indexeddb://";var gv=e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith($a.URL_SCHEME)?oT(e.slice($a.URL_SCHEME.length)):null;kt.registerSaveRouter(gv);kt.registerLoadRouter(gv);function oT(e){return new $a(e)}function iT(e){return e.startsWith($a.URL_SCHEME)?e.slice($a.URL_SCHEME.length):e}var uT=class{constructor(){this.indexedDB=mv()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(Mf,Bf);n.onupgradeneeded=()=>Vf(n),n.onsuccess=()=>{let s=n.result,r=s.transaction(nr,"readonly"),o=r.objectStore(nr).getAll();o.onsuccess=()=>{let i={};for(let u of o.result)i[u.modelPath]=u.modelArtifactsInfo;e(i)},o.onerror=i=>(s.close(),t(o.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=iT(e),new Promise((t,n)=>{let s=this.indexedDB.open(Mf,Bf);s.onupgradeneeded=()=>Vf(s),s.onsuccess=()=>{let r=s.result,a=r.transaction(nr,"readwrite"),o=a.objectStore(nr),i=o.get(e),u;i.onsuccess=()=>{if(i.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=o.delete(e),l=()=>{u=r.transaction(Ta,"readwrite");let h=u.objectStore(Ta).delete(e);h.onsuccess=()=>t(i.result.modelArtifactsInfo),h.onerror=p=>n(i.error)};c.onsuccess=l,c.onerror=d=>(l(),r.close(),n(i.error))}},i.onerror=c=>(r.close(),n(i.error)),a.oncomplete=()=>{u==null?r.close():u.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},Rs="/",oi="tensorflowjs_models",bv="info",lT="model_topology",cT="weight_specs",dT="weight_data",hT="model_metadata";function yv(e){return{info:[oi,e,bv].join(Rs),topology:[oi,e,lT].join(Rs),weightSpecs:[oi,e,cT].join(Rs),weightData:[oi,e,dT].join(Rs),modelMetadata:[oi,e,hT].join(Rs)}}function vv(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function pT(e){let t=e.split(Rs);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Rs)}function fT(e){return e.startsWith(Aa.URL_SCHEME)?e.slice(Aa.URL_SCHEME.length):e}var Aa=class{constructor(e){if(!X().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=yv(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Wu(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,YN(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch{throw vv(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let o=JSON.parse(r);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=QN(a),t}};Aa.URL_SCHEME="localstorage://";var xv=e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Aa.URL_SCHEME)?mT(e.slice(Aa.URL_SCHEME.length)):null;kt.registerSaveRouter(xv);kt.registerLoadRouter(xv);function mT(e){return new Aa(e)}var gT=class{constructor(){F(X().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),F(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=oi+Rs,n=Rs+bv;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=pT(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=fT(e);let t=yv(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return vv(t),n}},ii="://",_n=class{constructor(){this.managers={}}static getInstance(){return _n.instance==null&&(_n.instance=new _n),_n.instance}static registerManager(e,t){F(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(ii)&&(e=e.slice(0,e.indexOf(ii))),F(e.length>0,()=>"scheme must not be an empty string.");let n=_n.getInstance();F(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function zc(e){if(e.indexOf(ii)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${_n.getSchemes().join(",")}`);return{scheme:e.split(ii)[0],path:e.split(ii)[1]}}async function wv(e,t,n=!1){F(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=kt.getLoadHandlers(e);F(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),F(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=kt.getSaveHandlers(t);F(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),F(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let o=a[0],i=zc(e).scheme,u=zc(e).path,c=i===zc(e).scheme,l=await r.load();n&&c&&await _n.getManager(i).removeModel(u);let d=await o.save(l);return n&&!c&&await _n.getManager(i).removeModel(u),d.modelArtifactsInfo}async function bT(){let e=_n.getSchemes(),t={};for(let n of e){let s=await _n.getManager(n).listModels();for(let r in s){let a=n+ii+r;t[a]=s[r]}}return t}async function yT(e){let t=zc(e);return _n.getManager(t.scheme).removeModel(t.path)}async function vT(e,t){return wv(e,t,!1)}async function xT(e,t){return wv(e,t,!0)}var wT=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(X().get("IS_BROWSER")){X().setPlatform("browser",new wT);try{_n.registerManager(Aa.URL_SCHEME,new gT)}catch{}try{_n.registerManager($a.URL_SCHEME,new uT)}catch{}}var kT={importFetch:()=>R2()},Wf,IT=class{constructor(){this.util=D2(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return X().global.fetch!=null?X().global.fetch(e,t):(Wf==null&&(Wf=kT.importFetch()),Wf(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};X().get("IS_NODE")&&X().setPlatform("node",new IT);function _e(e,t="float32",n){return t=t||"float32",Vp(e),new tn(e,t,n)}function ST(e,t){let n=E(e,"x","cast");if(!By(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return M.runKernel(Fr,s,r)}var de=z({cast_:ST});function CT(e){let n={x:E(e,"x","clone","string_or_numeric")};return M.runKernel(Kr,n)}var Ea=z({clone_:CT});function NT(e,t=!1){console.log(e.toString(t))}iv();var TT={buffer:_e,cast:de,clone:Ea,print:NT};ON(TT);var ui={};$e(ui,{browserFiles:()=>FT,browserHTTPRequest:()=>MT,concatenateArrayBuffers:()=>Lf,copyModel:()=>vT,decodeWeights:()=>dv,encodeWeights:()=>KN,fromMemory:()=>VT,getLoadHandlers:()=>aT,getModelArtifactsForJSON:()=>zf,getModelArtifactsInfoForJSON:()=>Wu,getSaveHandlers:()=>rT,http:()=>qf,isHTTPScheme:()=>Hf,listModels:()=>bT,loadWeights:()=>OT,moveModel:()=>xT,registerLoadRouter:()=>sT,registerSaveRouter:()=>nT,removeModel:()=>yT,weightsLoaderFactory:()=>Cv,withSaveHandler:()=>WT});var $T="model",AT=".json",ET=".weights.bin";function kv(e){return new Promise(t=>setTimeout(t)).then(e)}var Uf=class{constructor(e){if(!X().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Uf.URL_SCHEME)&&(e=e.slice(Uf.URL_SCHEME.length)),(e==null||e.length===0)&&(e=$T),this.modelJsonFileName=e+AT,this.weightDataFileName=e+ET}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=fv(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await kv(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await kv(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Wu(e)}}}},Mc=Uf;Mc.URL_SCHEME="downloads://";var _T=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=zf(r,u=>this.loadWeights(u));e(i)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,Lf(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let o=a.target.result;n(o)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>pv(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let o=pv(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},RT=e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Mc.URL_SCHEME)?DT(e.slice(Mc.URL_SCHEME.length)):null;kt.registerSaveRouter(RT);function DT(e="model"){return new Mc(e)}function FT(e){return new _T(e)}function Iv(e,t,n,s){o(e),n=n??0,s=s??1,i(n,s);let r=0,a=u=>(u.then(c=>{let l=n+ ++r/e.length*(s-n);return t(l),c}),u);function o(u){F(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,c){F(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),F(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),F(c>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${c}`)}return Promise.all(e.map(a))}async function Sv(e,t){t==null&&(t={});let n=t.fetchFunc==null?X().platform.fetch:t.fetchFunc,s=e.map(d=>n(d,t.requestInit,{isBinary:!0})),r=0,a=.5,i=(t.onProgress==null?await Promise.all(s):await Iv(s,t.onProgress,r,a)).map(d=>d.arrayBuffer()),u=.5,c=1;return t.onProgress==null?await Promise.all(i):await Iv(i,t.onProgress,u,c)}async function OT(e,t="",n,s){return Cv(o=>Sv(o,{requestInit:s}))(e,t,n)}function Cv(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},o=s!=null?s.map(()=>!1):[],i=[];if(t.forEach((p,f)=>{let m=0;p.weights.forEach(g=>{let b="quantization"in g?g.quantization.dtype:g.dtype,v=Of[b]*Dt(g.shape),y=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:v})};s!=null?s.forEach((w,k)=>{w===g.name&&(y(),o[k]=!0)}):y(),i.push(g.name),m+=v})}),!o.every(p=>p)){let p=s.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let u=r.reduce((p,f,m)=>(f&&p.push(m),p),[]),c=[];u.forEach(p=>{t[p].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;c.push(m)})});let l=await e(c),d={},h=0;return u.forEach(p=>{let f=t[p].paths.length,m=0;for(let w=0;w<f;w++)m+=l[h+w].byteLength;let g=new ArrayBuffer(m),b=new Uint8Array(g),v=0;for(let w=0;w<f;w++){let k=new Uint8Array(l[h+w]);b.set(k,v),v+=k.byteLength}a[p].forEach(w=>{let k=g.slice(w.groupOffset,w.groupOffset+w.sizeBytes),S=dv(k,[w.manifestEntry]);for(let N in S)d[N]=S[N]}),h+=f}),d}}var PT="application/octet-stream",LT="application/json",Gf=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(F(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=X().platform.fetch,F(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&F(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=fv(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:LT}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:PT}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Wu(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return zf(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=zT(t),r=this.weightPathPrefix||n,a=[];for(let c of e)a.push(...c.weights);let o=[],i=[];for(let c of e)for(let l of c.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(l)):o.push(r+l+s);this.weightUrlConverter&&o.push(...await Promise.all(i));let u=await Sv(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Lf(u)]}};Gf.URL_SCHEME_REGEX=/^https?:\/\//;function zT(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function Hf(e){return e.match(Gf.URL_SCHEME_REGEX)!=null}var Nv=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>Hf(s)):n=Hf(e),n)return qf(e,t)}return null};kt.registerSaveRouter(Nv);kt.registerLoadRouter(Nv);function qf(e,t){return new Gf(e,t)}function MT(e,t){return qf(e,t)}var jf=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},BT=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function VT(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new jf(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new jf({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new jf({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function WT(e){return new BT(e)}var UT={};$e(UT,{confusionMatrix:()=>KT});function GT(e,t,n=!1,s=!1){let r=E(e,"a","matMul"),a=E(t,"b","matMul");[r,a]=vt(r,a);let o={a:r,b:a},i={transposeA:n,transposeB:s};return M.runKernel(Dr,o,i)}var je=z({matMul_:GT});function HT(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:E(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:s};return M.runKernel(zo,a,o)}var Kf=z({oneHot_:HT});function qT(e,t){let n=E(e,"x","transpose");if(t==null&&(t=n.shape.map((a,o)=>o).reverse()),F(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{F(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let s={x:n},r={perm:t};return M.runKernel(va,s,r)}var Ke=z({transpose_:qT});function jT(e,t,n){let s=E(e,"labels","confusionMatrix"),r=E(t,"predictions","confusionMatrix");F(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),F(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),F(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),F(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),F(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=Kf(de(s,"int32"),n),o=Kf(de(r,"int32"),n),i=Ke(a),u=je(i,o);return de(u,"int32")}var KT=z({confusionMatrix_:jT}),li={};$e(li,{assertAndGetBroadcastShape:()=>rt,getBroadcastDims:()=>Tv,getReductionAxes:()=>Tt});function Tv(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,o=e[a]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(a)}return s}function Tt(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,o=t[a];(r==null||r===1&&o>1)&&n.unshift(a)}return n}function rt(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let o=t[t.length-r-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}var $v={};$e($v,{fromPixels:()=>n$,fromPixelsAsync:()=>e$,toPixels:()=>t$});function XT(e,t,n){if(ic(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=Na(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Vu(e,t,s,n)}var _a;function Av(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r){let f=2;if(r&&e.readyState<f)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(If(Nc,M.backendName)!=null){let f={pixels:e},m={numChannels:t};return M.runKernel(Nc,f,m)}let[c,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(o)d=e.getContext("2d").getImageData(0,0,c,l).data;else if(s||n)d=e.data;else if(a||r||i){if(_a==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")_a=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else _a=document.createElement("canvas").getContext("2d");_a.canvas.width=c,_a.canvas.height=l,_a.drawImage(e,0,0,c,l),d=_a.getImageData(0,0,c,l).data}let h;if(t===4)h=new Int32Array(d);else{let f=c*l;h=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)h[m*t+g]=d[m*4+g]}return XT(h,[l,c,t],"int32")}function YT(e){return e!=null&&e.data instanceof Uint8Array}function QT(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function ZT(e){return e!=null&&e.width!==0&&e.height!==0}function JT(e){return QT()&&!(e instanceof ImageBitmap)&&ZT(e)&&!YT(e)}async function e$(e,t=3){let n=null;if(X().getBool("WRAP_TO_IMAGEBITMAP")&&JT(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return Av(n,t)}async function t$(e,t){let n=E(e,"img","toPixels");if(!(e instanceof yt)){let c=n;n=de(c,"int32"),c.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,u=new Uint8ClampedArray(r*s*4);for(let c=0;c<s*r;++c){let l=[0,0,0,255];for(let h=0;h<a;h++){let p=o[c*a+h];if(n.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(n.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);a===1?(l[0]=p*i,l[1]=p*i,l[2]=p*i):l[h]=p*i}let d=c*4;u[d+0]=Math.round(l[0]),u[d+1]=Math.round(l[1]),u[d+2]=Math.round(l[2]),u[d+3]=Math.round(l[3])}if(t!=null){t.width=r,t.height=s;let c=t.getContext("2d"),l=new ImageData(u,r,s);c.putImageData(l,0,0)}return n!==e&&n.dispose(),u}var n$=z({fromPixels_:Av}),Ev={};$e(Ev,{prepareAndValidate:()=>_v});function _v(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(Dt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],o=1;for(let d=0;d<r.length-1;++d)o*=r[d];let i=e.shape,u=r.slice();u.pop();let c=1;for(let d=a;d<n;++d)c*=i[d],u.push(i[d]);let l=[...fo(e.shape).map(d=>d/c),1].slice(0,a);return[u,o,c,l]}var Rv={};$e(Rv,{calculateShapes:()=>Dv,validateInput:()=>Yf,validateUpdateShape:()=>Xf});function Xf(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+s])throw new Error(a+` updates.shape[${o+r}] (${n.shape[o+r]}) != shape[${o+r}] (${e[o+r]})`)}function Yf(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Xf(n,t,e)}function Dv(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,o=1;for(let d=r;d<a;++d)o*=n[d];let i=r<1?1:r,u=Dt(t.shape)/i,c=[...fo(n.slice(0,r)),1],l=Dt(n);return{sliceRank:r,numUpdates:u,sliceSize:o,strides:c,outputSize:l}}var It={};$e(It,{assertParamsValid:()=>r$,computeFlatOffset:()=>l$,computeOutShape:()=>o$,getNormalizedAxes:()=>i$,isSliceContinous:()=>u$,maskToAxes:()=>a$,parseSliceParams:()=>Wv,sliceInfo:()=>c$,startForAxis:()=>Bv,startIndicesWithElidedDims:()=>Lv,stopForAxis:()=>Vv,stopIndicesWithElidedDims:()=>zv,stridesForAxis:()=>Mv,stridesWithElidedDims:()=>Fv});var Qf=-2,s$=-1;function r$(e,t,n){let s=e.shape.length;F(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),F(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)F(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function a$(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function o$(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function Fv(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Ov(e,t,n){return n<=e?n:n-(t-1)}function Pv(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function i$(e,t,n,s,r,a,o,i,u){let c=e.length,l=new Array(c),d=new Array(c),h=new Array(c);if(t.length&&n>0){let p=t[0],f=n+1;l=Lv(o,p,f,s,e),d=zv(i,p,f,r,e),h=Fv(a,p,f,e)}else for(let p=0;p<c;p++)l[p]=Bv(o,s,a,e,p,u),d[p]=Vv(i,r,a,e,p,u),h[p]=Mv(a,p,u);return{begin:l,end:d,strides:h}}function Lv(e,t,n,s,r){let a=[...r],o=Pv(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let u=Ov(t,n,i),c=s[u];e&1<<u&&(c=0),a[i]=c}return a}function zv(e,t,n,s,r){let a=[...r],o=Pv(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let u=Ov(t,n,i),c=s[u];e&1<<u&&(c=Number.MAX_SAFE_INTEGER),a[i]=c}for(let i=0;i<a.length;i++){let u=r[i];a[i]<0&&(a[i]+=u),a[i]=ou(0,a[i],r[i])}return a}function Mv(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function Bv(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let u=s[r];return o<0&&(o+=u),o=ou(0,o,u-1),o}function Vv(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let u=s[r];return o<0&&(o+=u),i>0?o=ou(0,o,u):o=ou(-1,o,u-1),o}function u$(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function l$(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function Wv(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{F(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(F(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-s[i])),[s,a]}function c$(e,t,n,s,r,a,o,i,u){let c;if(s==null?(c=new Array(t.length),c.fill(1)):c=s,o!=null&&(o&o-1)!=0)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1,d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};for(let y=0;y<d.dims;y++)l&&(1<<y&i)!=0&&d.numAddAxisAfterEllipsis++,1<<y&o&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);let h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};d$(d,h);let p=!0,f=!0,m=!0,g=[],b=[];for(let y=0;y<e.length;++y){if(h.strides[y]===0)throw Error(`strides[${y}] must be non-zero`);let w=!!(h.shrinkAxisMask&1<<y),k=e[y];if(k===-1){g.push(w?1:-1);continue}let S=[h.beginMask&1<<y,h.endMask&1<<y],N=[h.strides[y]>0?0:-1,h.strides[y]>0?k:k-1];if(w&&h.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&h.strides[y]===1;let A=!!(h.beginMask&1<<y&&h.endMask&1<<y);if(h.beginValid&&h.endValid){if(w){let D=h.begin[y]<0?k+h.begin[y]:h.begin[y];if(h.begin[y]=D,h.end[y]=h.begin[y]+1,D<0||D>=k)throw Error(`slice index ${h.begin[y]} of dimension ${y} out of bounds.`)}else h.begin[y]=Uv(h.begin[y],0,h.strides[y],k,S,N),h.end[y]=Uv(h.end[y],1,h.strides[y],k,S,N);let R=h.strides[y]===1&&h.begin[y]===0&&h.end[y]===k;p=p&&R,f=f&&(y===0&&h.strides[y]===1||R)}else p=p&&h.strides[y]===1&&A,f=f&&(y===0&&h.strides[y]===1||A);let _,O=!1;if(h.beginValid&&h.endValid?(_=h.end[y]-h.begin[y],O=!0):w?(_=1,O=!0):A&&k>=0&&(h.strides[y]<0?_=-k:_=k,O=!0),O){let R;_===0||_<0!=h.strides[y]<0?R=0:R=Math.trunc(_/h.strides[y])+(_%h.strides[y]!=0?1:0),g.push(R)}else g.push(-1)}for(let y=0;y<h.finalShapeGatherIndices.length;++y){let w=h.finalShapeGatherIndices[y];w>=0?b.push(g[w]):w===Qf&&b.push(1)}return{finalShapeSparse:b.filter((y,w)=>h.finalShapeGatherIndices[w]!==Qf),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function d$(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(Qf),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(s$),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function Uv(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let o=e<0?s+e:e;return o<a[0]?a[0]:o>a[1]?a[1]:o}}var ae={};$e(ae,{Serializable:()=>Gv,SerializationMap:()=>Ra,registerClass:()=>sr});var Gv=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Ra=class{constructor(){this.classNameMap={}}static getMap(){return Ra.instance==null&&(Ra.instance=new Ra),Ra.instance}static register(e){Ra.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function sr(e){F(e.className!=null,()=>"Class being registered does not have the static className property defined."),F(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),F(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Ra.register(e)}var h$={};$e(h$,{TEST_EPSILON_FLOAT16:()=>Hv,encodeStrings:()=>qv,expectArrayBuffersEqual:()=>v$,expectArraysClose:()=>f$,expectArraysEqual:()=>g$,expectNumbersClose:()=>b$,expectPromiseToFail:()=>m$,expectValuesInRange:()=>y$,testEpsilon:()=>Zf});var p$=.001,Hv=.1;function f$(e,t,n){return n==null&&(n=Zf()),Jf(e,t,(s,r)=>em(s,r,n))}function Zf(){return M.backend.floatPrecision()===32?p$:Hv}function Jf(e,t,n){let s=!0;if((en(e)||en(t))&&(s=!1),en(e)&&en(t)&&(s=!0),s){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=Na(e),i=Na(t);if(!Xs(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let r=en(e)?e:Ar(e),a=en(t)?t:Ar(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=r[o],u=a[o];if(!n(i,u))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${u}.
Actual:   ${r}.
Expected: ${a}.`)}}function m$(e,t){e().then(()=>t.fail(),()=>t())}function g$(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Ys(e)||Ys(e[0])||Ys(t)||Ys(t[0])?Jf(e,n,(s,r)=>s==r):Jf(e,t,(s,r)=>em(s,r,0))}function b$(e,t,n){if(n==null&&(n=Zf()),!em(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function em(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function y$(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function v$(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function qv(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?qv(n):e[t]=Pu(n)}return e}function x$(e){X().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}PN(x$);function Ds(){return M}function tm(){return M.memory()}function K(e,t){return M.tidy(e,t)}function Oe(e){Ef(e).forEach(n=>n.dispose())}function ms(e){return M.keep(e)}function Bc(e,t,n=1){return M.registerBackend(e,t,n)}function w$(){return M.backend}function k$(e,t){let n=E(e,"a","add"),s=E(t,"b","add");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(Qs,r)}var oe=z({add_:k$});function I$(e,t){let n=E(e,"a","floorDiv"),s=E(t,"b","floorDiv");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(Hr,r)}var S$=z({floorDiv_:I$});function C$(e,t){let n=E(e,"a","div"),s=E(t,"b","div");if([n,s]=vt(n,s),n.dtype==="int32"&&s.dtype==="int32")return S$(n,s);let r={a:n,b:s},a={};return M.runKernel(Vr,r,a)}var Ie=z({div_:C$});function N$(e,t){let n=E(e,"a","mul"),s=E(t,"b","mul");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(sa,r)}var B=z({mul_:N$});function T$(e){let t=E(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return M.runKernel(fc,n)}else{let n={x:t};return M.runKernel(go,n)}}var Kt=z({abs_:T$});function $$(e){let n={x:E(e,"x","acos")};return M.runKernel(uu,n)}var Die=z({acos_:$$});function A$(e){let n={x:E(e,"x","acosh")};return M.runKernel(lu,n)}var Fie=z({acosh_:A$});function E$(e){F(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),F(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>E(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!Xs(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return M.runKernel(Er,s)}var Oie=z({addN_:E$});function _$(e,t=null,n=!1){let r={x:E(e,"x","all","bool")},a={axis:t,keepDims:n};return M.runKernel(cu,r,a)}var R$=z({all_:_$});function D$(e,t=null,n=!1){let r={x:E(e,"x","any","bool")},a={axis:t,keepDims:n};return M.runKernel(du,r,a)}var jv=z({any_:D$});function F$(e,t=0){let s={x:E(e,"x","argMax")},r={axis:t};return M.runKernel(_r,s,r)}var Vc=z({argMax_:F$});function O$(e,t=0){let s={x:E(e,"x","argMin")},r={axis:t};return M.runKernel(hu,s,r)}var Pie=z({argMin_:O$});function P$(e){let n={x:E(e,"x","asin")};return M.runKernel(pu,n)}var Lie=z({asin_:P$});function L$(e){let n={x:E(e,"x","asinh")};return M.runKernel(fu,n)}var zie=z({asinh_:L$});function z$(e){let n={x:E(e,"x","atan")};return M.runKernel(mu,n)}var Mie=z({atan_:z$});function M$(e,t){let n=E(e,"a","atan2"),s=E(t,"b","atan2");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(bu,r)}var Bie=z({atan2_:M$});function B$(e){let n={x:E(e,"x","atanh")};return M.runKernel(gu,n)}var Vie=z({atanh_:B$});function V$(e,t,n,s,r="NHWC",a){let o=e[3],i=[...t,o],u=Yv(r);return Uu(e,i,n,a,s,null,null,u)}function Kv(e,t,n,s,r,a,o="channelsLast"){let[i,u]=Wc(t),c;if(o==="channelsLast")c=[i,u,e[3],e[3]];else if(o==="channelsFirst")c=[i,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return Uu(e,c,n,s,r,a,!1,o)}function W$(e,t,n,s,r,a,o="NDHWC"){let[i,u,c]=sm(t),l,d;if(o==="NDHWC")d="channelsLast",l=[i,u,c,e[4],e[4]];else if(o==="NCDHW")d="channelsFirst",l=[i,u,c,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return Xv(e,l,n,s,r,!1,d,a)}function Uu(e,t,n,s,r,a,o=!1,i="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if(i==="channelsLast")[u,c,l,d]=e;else if(i==="channelsFirst")[u,d,c,l]=e;else throw new Error(`Unknown dataFormat ${i}`);let[h,p,,f]=t,[m,g]=Wc(n),[b,v]=Wc(s),y=ci(h,b),w=ci(p,v),{padInfo:k,outHeight:S,outWidth:N}=H$(r,c,l,m,g,y,w,a,i),A=o?f*d:f,_;return i==="channelsFirst"?_=[u,A,S,N]:i==="channelsLast"&&(_=[u,S,N,A]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:d,outHeight:S,outWidth:N,outChannels:A,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:v,inShape:e,outShape:_,filterShape:t}}function Xv(e,t,n,s,r,a=!1,o="channelsLast",i){let[u,c,l,d,h]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[u,c,l,d,h]=e;else if(o==="channelsFirst")[u,h,c,l,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[p,f,m,,g]=t,[b,v,y]=sm(n),[w,k,S]=sm(s),N=ci(p,w),A=ci(f,k),_=ci(m,S),{padInfo:O,outDepth:R,outHeight:D,outWidth:C}=q$(r,c,l,d,b,v,y,N,A,_,i),P=a?g*h:g,V;return o==="channelsFirst"?V=[u,P,R,D,C]:o==="channelsLast"&&(V=[u,R,D,C,P]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:l,inWidth:d,inChannels:h,outDepth:R,outHeight:D,outWidth:C,outChannels:P,padInfo:O,strideDepth:b,strideHeight:v,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:A,effectiveFilterWidth:_,dilationDepth:w,dilationHeight:k,dilationWidth:S,inShape:e,outShape:V,filterShape:t}}function U$(e,t,n,s,r){s==null&&(s=nm(e,t,n));let a=e[0],o=e[1],i=Da((a-t+2*s)/n+1,r),u=Da((o-t+2*s)/n+1,r);return[i,u]}function G$(e,t,n,s,r,a){r==null&&(r=nm(e,t,s));let o=e[0],i=e[1],u=e[2],c=Da((o-t+2*r)/s+1,a),l=Da((i-t+2*r)/s+1,a),d=Da((u-t+2*r)/s+1,a);return[c,l,d,n]}function nm(e,t,n,s=1){let r=ci(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Wc(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function sm(e){return typeof e=="number"?[e,e,e]:e}function ci(e,t){return t<=1?e:e+(e-1)*(t-1)}function H$(e,t,n,s,r,a,o,i,u){let c,l,d;if(typeof e=="number"){c={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let p=U$([t,n],a,s,e,i);l=p[0],d=p[1]}else if(e==="same"){l=Math.ceil(t/s),d=Math.ceil(n/r);let h=Math.max(0,(l-1)*s+a-t),p=Math.max(0,(d-1)*r+o-n),f=Math.floor(h/2),m=h-f,g=Math.floor(p/2),b=p-g;c={top:f,bottom:m,left:g,right:b,type:"SAME"}}else if(e==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-a+1)/s),d=Math.ceil((n-o+1)/r);else if(typeof e=="object"){let h=u==="channelsLast"?e[1][0]:e[2][0],p=u==="channelsLast"?e[1][1]:e[2][1],f=u==="channelsLast"?e[2][0]:e[3][0],m=u==="channelsLast"?e[2][1]:e[3][1];c={top:h,bottom:p,left:f,right:m,type:h===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},l=Da((t-a+h+p)/s+1,i),d=Da((n-o+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outHeight:l,outWidth:d}}function q$(e,t,n,s,r,a,o,i,u,c,l){let d,h,p,f;if(typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=G$([t,n,s,1],i,1,r,e,l);h=g[0],p=g[1],f=g[2]}else if(e==="same"){h=Math.ceil(t/r),p=Math.ceil(n/a),f=Math.ceil(s/o);let m=(h-1)*r+i-t,g=(p-1)*a+u-n,b=(f-1)*o+c-s,v=Math.floor(m/2),y=m-v,w=Math.floor(g/2),k=g-w,S=Math.floor(b/2),N=b-S;d={top:w,bottom:k,left:S,right:N,front:v,back:y,type:"SAME"}}else if(e==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-i+1)/r),p=Math.ceil((n-u+1)/a),f=Math.ceil((s-c+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}function Da(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function rr(e){let[t,n,s]=Wc(e);return t===1&&n===1&&s===1}function gs(e,t){return rr(e)||rr(t)}function Yv(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function j$(e,t){let s={x:E(e,"x","reshape","string_or_numeric")},r={shape:t};return M.runKernel(Vo,s,r)}var H=z({reshape_:j$});function K$(e,t,n,s,r){let a=E(e,"x","avgPool","float32"),o=1;F(gs(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,u=!1;a.rank===3&&(u=!0,i=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),r!=null&&F(Bt(s),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},l={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=M.runKernel(Rr,c,l);return d=de(d,a.dtype),u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Qv=z({avgPool_:K$});function X$(e,t,n,s,r,a="NDHWC"){let o=E(e,"x","avgPool3d","float32"),i=o,u=!1;o.rank===4&&(u=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),F(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),r!=null&&F(Bt(s),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},l={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=M.runKernel(hc,c,l);return d=de(d,i.dtype),u?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Y$=z({avgPool3d_:X$});function Q$(e,t=0){F(e.length>=1,()=>"Pass at least one tensor to concat");let n=Pc(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return Ea(n[0]);let s=n,r={axis:t};return M.runKernel(yo,s,r)}var nn=z({concat_:Q$});function Z$(e){let n={x:E(e,"x","sigmoid","float32")};return M.runKernel(ha,n)}var ar=z({sigmoid_:Z$});function J$(e,t,n){let s=E(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return M.runKernel(qo,r,a)}var Qe=z({slice_:J$});function eA(e){let n={x:E(e,"x","tanh","float32")};return M.runKernel(ya,n)}var Uc=z({tanh_:eA});function tA(e,t,n,s,r,a){let o=E(e,"forgetBias","basicLSTMCell"),i=E(t,"lstmKernel","basicLSTMCell"),u=E(n,"lstmBias","basicLSTMCell"),c=E(s,"data","basicLSTMCell"),l=E(r,"c","basicLSTMCell"),d=E(a,"h","basicLSTMCell"),h=nn([c,d],1),p=je(h,i),f=oe(p,u),m=f.shape[0],g=f.shape[1]/4,b=[m,g],v=Qe(f,[0,0],b),y=Qe(f,[0,g],b),w=Qe(f,[0,g*2],b),k=Qe(f,[0,g*3],b),S=oe(B(ar(v),Uc(y)),B(l,ar(oe(o,w)))),N=B(Uc(S),ar(k));return[S,N]}var Wie=z({basicLSTMCell_:tA});function nA(e,t,n){let s=E(e,"x","batchToSpaceND"),r=t.reduce((i,u)=>i*u);F(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),F(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),F(s.shape[0]%r==0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},o={blockShape:t,crops:n};return M.runKernel(bo,a,o)}var Zv=z({batchToSpaceND_:nA});function sA(e){let t;return e.rank===0||e.rank===1?t=H(e,[1,1,1,e.size]):e.rank===2?t=H(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function rA(e,t,n,s,r,a){a==null&&(a=.001);let o=E(e,"x","batchNorm"),i=E(t,"mean","batchNorm"),u=E(n,"variance","batchNorm"),c;r!=null&&(c=E(r,"scale","batchNorm"));let l;s!=null&&(l=E(s,"offset","batchNorm")),F(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let h={x:sA(o),scale:c,offset:l,mean:i,variance:u},p={varianceEpsilon:a},f=M.runKernel(qr,h,p);return H(f,o.shape)}var rm=z({batchNorm_:rA});function aA(e,t,n,s,r,a){let o=E(e,"x","batchNorm"),i=E(t,"mean","batchNorm"),u=E(n,"variance","batchNorm"),c;r!=null&&(c=E(r,"scale","batchNorm"));let l;return s!=null&&(l=E(s,"offset","batchNorm")),F(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),F(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),F(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&F(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),rm(o,i,u,l,c,a)}var oA=z({batchNorm2d_:aA});function iA(e,t,n,s,r,a){let o=E(e,"x","batchNorm"),i=E(t,"mean","batchNorm"),u=E(n,"variance","batchNorm"),c;r!=null&&(c=E(r,"scale","batchNorm"));let l;return s!=null&&(l=E(s,"offset","batchNorm")),F(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),F(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),F(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&F(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),rm(o,i,u,l,c,a)}var uA=z({batchNorm3d_:iA});function lA(e,t,n,s,r,a){let o=E(e,"x","batchNorm"),i=E(t,"mean","batchNorm"),u=E(n,"variance","batchNorm"),c;r!=null&&(c=E(r,"scale","batchNorm"));let l;return s!=null&&(l=E(s,"offset","batchNorm")),F(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),F(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),F(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&F(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&F(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),rm(o,i,u,l,c,a)}var cA=z({batchNorm4d_:lA});function dA(e,t,n){let s=E(e,"x","bincount"),r=E(t,"weights","bincount");F(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),F(n>=0,()=>`size must be non-negative, but got ${n}.`),F(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},o={size:n};return M.runKernel(jp,a,o)}var hA=z({bincount_:dA});function pA(e,t){let n=E(e,"s0","broadcastArgs","int32"),s=E(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return M.runKernel(Kp,r)}var Uie=z({broadcastArgs_:pA});function fA(e,t){let n=E(e,"broadcastTo","x"),s=n.shape;if(t.some(c=>!(c>0)||c%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let c=n.shape.slice();for(;c.length<t.length;)c.unshift(1);n=H(n,c)}let r=n.shape,a=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])a[c]=1;else if(n.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((c,l)=>c>1?l:-1).filter(c=>c>=0).length===0)return Ea(n);let i={x:n},u={reps:a};return M.runKernel(Js,i,u)}var am=z({broadcastTo_:fA});function mA(e){let n={x:E(e,"x","ceil","float32")};return M.runKernel(Or,n)}var Gie=z({ceil_:mA});function gA(e,t,n){let s=E(e,"x","clipByValue");F(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return M.runKernel(Zs,r,a)}var Wn=z({clipByValue_:gA});function bA(e){return nn(e,0)}var yA=z({concat1d_:bA});function vA(e,t){return nn(e,t)}var xA=z({concat2d_:vA});function wA(e,t){return nn(e,t)}var kA=z({concat3d_:wA});function IA(e,t){return nn(e,t)}var SA=z({concat4d_:IA});function CA(e,t,n,s,r="NHWC",a=[1,1],o){let i=E(e,"x","conv2d","float32"),u=E(t,"filter","conv2d","float32"),c=i,l=!1;i.rank===3&&(l=!0,c=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),F(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),o!=null&&F(Bt(s),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);let d=r==="NHWC"?c.shape[3]:c.shape[1];F(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),F(gs(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let h={x:c,filter:u},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=M.runKernel(Pr,h,p);return l?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var di=z({conv2d_:CA});function NA(e,t,n,s,r="NWC",a=1,o){let i=E(e,"x","conv1d"),u=E(t,"filter","conv1d"),c=i,l=!1;i.rank===2&&(l=!0,c=H(i,[1,i.shape[0],i.shape[1]])),F(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),F(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),o!=null&&F(Bt(s),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`),F(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),F(gs(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),F(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let d=H(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=H(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=di(h,d,[1,n],s,"NHWC",[1,a],o);return l?H(g,[g.shape[2],g.shape[3]]):H(g,[g.shape[0],g.shape[2],g.shape[3]])}var TA=z({conv1d_:NA});function $A(e,t,n,s,r,a="NHWC",o){F(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,u=t,c=!1;t.rank===3&&(c=!0,u=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),F(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),F(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),F(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let l=a==="NHWC"?i[3]:i[1],d=a==="NHWC"?u.shape[3]:u.shape[1];F(l===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[2]}.`),F(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),o!=null&&F(Bt(r),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let h={dy:u,filter:n},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i},f=M.runKernel(Lr,h,p);return c?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var om=z({conv2DBackpropInput_:$A});function AA(e,t,n,s,r,a){let o=E(e,"x","conv2dTranspose"),i=E(t,"filter","conv2dTranspose");return om(n,o,i,s,r,"NHWC",a)}var EA=z({conv2dTranspose_:AA});function _A(e,t,n,s,r="NDHWC",a=[1,1,1]){let o=E(e,"x","conv3d"),i=E(t,"filter","conv3d"),u=o,c=!1;o.rank===4&&(c=!0,u=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),F(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),F(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),F(gs(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),F(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let l={x:u,filter:i},d={strides:n,pad:s,dataFormat:r,dilations:a},h=M.runKernel(mc,l,d);return c?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var RA=z({conv3d_:_A});function DA(e,t,n,s,r){F(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let u=a[4],c=o.shape[4];F(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),F(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),F(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),F(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),F(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);let l={dy:o,filter:n},d={pad:r,strides:s,inputShape:a},h=M.runKernel(Qp,l,d);return i?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var Jv=z({conv3DBackpropInput_:DA});function FA(e,t,n,s,r){let a=E(e,"x","conv3dTranspose"),o=E(t,"filter","conv3dTranspose");return Jv(n,a,o,s,r)}var OA=z({conv3dTranspose_:FA});function PA(e){let n={x:E(e,"x","cos","float32")};return M.runKernel(zr,n)}var ex=z({cos_:PA});function LA(e){let n={x:E(e,"x","cosh","float32")};return M.runKernel(Mr,n)}var zA=z({cosh_:LA});function MA(e,t=0,n=!1,s=!1){let a={x:E(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:s};return M.runKernel(vo,a,o)}var BA=z({cumsum_:MA});function VA(e,t,n,s=!1){let r=E(e,"x","denseBincount"),a=E(t,"weights","denseBincount");F(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),F(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),F(n>=0,()=>`size must be non-negative, but got ${n}.`),F(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let o={x:r,weights:a},i={size:n,binaryOutput:s};return M.runKernel(Zp,o,i)}var Hie=z({denseBincount_:VA});function WA(e,t,n="NHWC"){let s=E(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],o=n==="NHWC"?s.shape[3]:s.shape[1];F(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),F(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),F(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),F(o%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);let i={x:s},u={blockSize:t,dataFormat:n};return M.runKernel(wo,i,u)}var qie=z({depthToSpace_:WA});function UA(e,t,n,s,r="NHWC",a=[1,1],o){let i=E(e,"x","depthwiseConv2d","float32"),u=E(t,"filter","depthwiseConv2d","float32"),c=i,l=!1;i.rank===3&&(l=!0,c=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),F(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`),F(c.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),o!=null&&F(Bt(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);let d={x:c,filter:u},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},p=M.runKernel(Br,d,h);return l?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var im=z({depthwiseConv2d_:UA});function GA(e){let n={x:E(e,"x","diag")};return M.runKernel(tf,n)}var jie=z({diag_:GA});function HA(e,t,n,s,r=[1,1],a="NHWC"){let o=E(e,"x","dilation2d"),i=E(t,"filter","dilation2d");F(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),F(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),F(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let u=o,c=!1;o.rank===3&&(u=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);let l={x:u,filter:i},d={strides:n,pad:s,dilations:r},h=M.runKernel(gc,l,d);return c?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Kie=z({dilation2d_:HA});function qA(e,t){let n=E(e,"a","equal","string_or_numeric"),s=E(t,"b","equal","string_or_numeric");[n,s]=vt(n,s),rt(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(ko,r)}var Jn=z({equal_:qA});function jA(e,t,n){let s=E(t,"a","where"),r=E(n,"b","where"),a=E(e,"condition","where","bool"),o=rt(rt(a.shape,s.shape),r.shape),i=am(a,o),u=am(s,o),c=am(r,o),l={condition:i,t:u,e:c};return M.runKernel(Ho,l)}var Cn=z({where_:jA});function KA(e){let n={x:E(e,"x","zerosLike")};return M.runKernel(ti,n)}var Xe=z({zerosLike_:KA});function XA(e,t){let n=E(e,"a","div"),s=E(t,"b","div");[n,s]=vt(n,s);let r=Ie(n,s),a=Xe(r),o=Jn(s,a);return Cn(o,a,r)}var Xie=z({divNoNan_:XA});function YA(e,t){let n=E(e,"t1","dot"),s=E(t,"t2","dot");F((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(F(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let o=H(n,[1,-1]),i=H(s,[-1,1]),u=je(o,i);return H(u,[])}else if(n.rank===1&&s.rank===2){let o=H(n,[1,-1]),i=H(s,[s.shape[0],s.shape[1]]),u=je(o,i);return H(u,[u.size])}else if(n.rank===2&&s.rank===1){let o=H(s,[-1,1]),i=je(n,o);return H(i,[i.size])}else{let o=H(s,[s.shape[0],s.shape[1]]);return je(n,o)}}var Yie=z({dot_:YA});function QA(e,...t){let n=t.map((r,a)=>E(r,`tensors${a}`,"einsum")),s={equation:e};return M.runKernel(bc,n,s)}var Qie=z({einsum_:QA});function ZA(e){let n={x:E(e,"x","elu","float32")};return M.runKernel(Wr,n)}var um=z({elu_:ZA});function JA(e){let t=E(e,"x","erf");F(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=de(t,"float32"));let n={x:t};return M.runKernel(yu,n)}var Zie=z({erf_:JA});function eE(e){let n={x:E(e,"x","exp")};return M.runKernel(Ur,n)}var es=z({exp_:eE});function tE(e,t=0){let n=E(e,"x","expandDims","string_or_numeric");F(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return M.runKernel(Io,s,r)}var Un=z({expandDims_:tE});function nE(e){let n={x:E(e,"x","expm1")};return M.runKernel(So,n)}var Jie=z({expm1_:nE});function sE(e,t){let n=E(e,"x","tile","string_or_numeric");F(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return M.runKernel(Js,s,r)}var bs=z({tile_:sE});function rE(e,t,n,s="float32"){t==null&&(t=e);let r=_e([e,t],s),a=e<=t?e:t;for(let i=0;i<a;++i)r.set(1,i,i);let o=H(r.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return bs(Un(o,0),[n[0],1,1]);if(n.length===2)return bs(Un(Un(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return bs(Un(Un(Un(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var tx=z({eye_:rE});function Gc(e,t,n){let s={shape:e,value:t,dtype:n};return M.runKernel(vu,{},s)}function aE(e){let n={x:E(e,"x","floor","float32")};return M.runKernel(Gr,n)}var lm=z({floor_:aE});function oE(e,t,n=0,s=0){let r=E(e,"x","gather"),a=E(t,"indices","gather","int32"),o={x:r,indices:a},i={axis:n,batchDims:s};return M.runKernel(No,o,i)}var nx=z({gather_:oE});function iE(e,t){let n=E(e,"a","greater","string_or_numeric"),s=E(t,"b","greater","string_or_numeric");[n,s]=vt(n,s),rt(n.shape,s.shape);let r={a:n,b:s};return M.runKernel($o,r)}var Gn=z({greater_:iE});function uE(e,t){let n=E(e,"a","greaterEqual","string_or_numeric"),s=E(t,"b","greaterEqual","string_or_numeric");[n,s]=vt(n,s),rt(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(jr,r)}var Gu=z({greaterEqual_:uE});function lE(e){let n={input:E(e,"input","imag")};return M.runKernel(yc,n)}var sx=z({imag_:lE});function cE(e){let n={x:E(e,"x","isFinite")};return M.runKernel(xu,n)}var eue=z({isFinite_:cE});function dE(e){let n={x:E(e,"x","isInf")};return M.runKernel(wu,n)}var tue=z({isInf_:dE});function hE(e){let n={x:E(e,"x","isNaN")};return M.runKernel(ku,n)}var nue=z({isNaN_:hE});function pE(e,t=.2){let s={x:E(e,"x","leakyRelu")},r={alpha:t};return M.runKernel(Ao,s,r)}var rx=z({leakyRelu_:pE});function fE(e,t){let n=E(e,"a","less","string_or_numeric"),s=E(t,"b","less","string_or_numeric");[n,s]=vt(n,s),rt(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Eo,r)}var mE=z({less_:fE});function gE(e,t){let n=E(e,"a","lessEqual","string_or_numeric"),s=E(t,"b","lessEqual","string_or_numeric");[n,s]=vt(n,s),rt(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(_o,r)}var Hu=z({lessEqual_:gE});function bE(e,t=5,n=1,s=1,r=.5){let a=E(e,"x","localResponseNormalization");F(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),F(Bt(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=H(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let u={x:o},c={depthRadius:t,bias:n,alpha:s,beta:r},l=M.runKernel(xc,u,c);return i?H(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var sue=z({localResponseNormalization_:bE});function yE(e){let n={x:E(e,"x","log","float32")};return M.runKernel(Xr,n)}var ts=z({log_:yE});function vE(e){let n={x:E(e,"x","log1p")};return M.runKernel(Iu,n)}var ax=z({log1p_:vE});function xE(e,t){F(lc(e),()=>"The f passed in variableGrads(f) must be a function"),F(t==null||Array.isArray(t)&&t.every(c=>c instanceof Fc),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let c in M.registeredVariables)t.push(M.registeredVariables[c])}let s=n?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),F(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:o,grads:i}=M.gradients(e,t,null,a);F(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),F(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let u={};return t.forEach((c,l)=>{i[l]!=null&&(u[c.name]=i[l])}),s!=null&&s.forEach(c=>u[c.name]=null),{value:o,grads:u}}function Fs(e){return M.customGrad(e)}function wE(e){let n={x:E(e,"x","neg")};return M.runKernel(Do,n)}var Ct=z({neg_:wE});function kE(e){let n={x:E(e,"x","softplus")};return M.runKernel(Ru,n)}var Hc=z({softplus_:kE});function IE(e){let t=E(e,"x","logSigmoid");return Fs(s=>({value:Ct(Hc(Ct(s))),gradFunc:o=>B(o,ar(Ct(s)))}))(t)}var rue=z({logSigmoid_:IE});function SE(e,t=null,n=!1){let r={x:E(e,"x","max")},a={reductionIndices:t,keepDims:n};return M.runKernel(Yr,r,a)}var Os=z({max_:SE});function CE(e,t){let n=E(e,"a","sub"),s=E(t,"b","sub");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(ba,r)}var ge=z({sub_:CE});function NE(e,t=null,n=!1){let s=E(e,"x","sum");s.dtype==="bool"&&(s=de(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return M.runKernel(fa,r,a)}var xe=z({sum_:NE});function TE(e,t=-1){let n=E(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Fs((r,a)=>{let o=!0,i=Os(r,t,!0),u=ge(r,i),c=ge(de(u,"float32"),ts(xe(es(u),t,o)));return a([c]),{value:c,gradFunc:(d,h)=>{let[p]=h,f=!0,m=es(p);return ge(d,B(xe(d,t,f),m))}}})(n)}var $E=z({logSoftmax_:TE});function cm(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function ox(e,t,n){let s=e.length+t.length,r=[],a=0,o=0;for(let i=0;i<s;i++)n.indexOf(i)===-1?r.push(e[a++]):r.push(t[o++]);return r}function ix(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function Fa(e,t){let n=t.map(s=>1);return ox(e,n,t)}function AE(e,t,n){F(cm(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function ux(e,t){if(cm(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function dm(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function EE(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function _E(e,t=null,n=!1){let s=E(e,"x","logSumExp"),r=Vn(t,s.shape),a=Os(s,r,!0),o=ge(s,a),i=es(o),u=xe(i,r),c=ts(u),l=oe(H(a,c.shape),c);if(n){let d=Fa(l.shape,r);return H(l,d)}return l}var RE=z({logSumExp_:_E});function DE(e,t){let n=E(e,"a","logicalAnd","bool"),s=E(t,"b","logicalAnd","bool");rt(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Ro,r)}var Ps=z({logicalAnd_:DE});function FE(e){let n={x:E(e,"x","logicalNot","bool")};return M.runKernel(Su,n)}var lx=z({logicalNot_:FE});function OE(e,t){let n=E(e,"a","logicalOr","bool"),s=E(t,"b","logicalOr","bool");rt(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(vc,r)}var PE=z({logicalOr_:OE});function LE(e,t){let n=E(e,"a","logicalXor","bool"),s=E(t,"b","logicalXor","bool");return rt(n.shape,s.shape),Ps(PE(e,t),lx(Ps(e,t)))}var aue=z({logicalXor_:LE});function zE(e,t,n,s,r){let a=E(e,"x","maxPool"),o=1,i=a,u=!1;a.rank===3&&(u=!0,i=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),F(gs(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),r!=null&&F(Bt(s),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},l={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=M.runKernel(Zr,c,l);return u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var cx=z({maxPool_:zE});function ME(e,t=[1,1,1],n,s,r,a="NDHWC"){let o=E(e,"x","maxPool3d"),i=o,u=!1;o.rank===4&&(u=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),F(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),r!=null&&F(Bt(s),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},l={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=M.runKernel(wc,c,l);return u?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var BE=z({maxPool3d_:ME});function VE(e,t,n,s,r=!1){let o={x:E(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},u=M.runKernel(df,o,i);return{result:u[0],indexes:u[1]}}var oue=z({maxPoolWithArgmax_:VE});function WE(e,t){let n=E(e,"a","maximum"),s=E(t,"b","maximum");[n,s]=vt(n,s),n.dtype==="bool"&&(n=de(n,"int32"),s=de(s,"int32")),rt(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Qr,r)}var Oa=z({maximum_:WE});function UE(e,t=null,n=!1){let r={x:E(e,"x","mean")},a={axis:t,keepDims:n};return M.runKernel(Jr,r,a)}var $t=z({mean_:UE});function Ft(e,t="float32"){if(t==="complex64"){let s=Ft(e,"float32"),r=Ft(e,"float32");return ri(s,r)}let n=dc(Dt(e),t);return M.makeTensor(n,e,t)}function or(e,t="float32"){if(t==="complex64"){let s=or(e,"float32"),r=Ft(e,"float32");return ri(s,r)}let n=Bp(Dt(e),t);return M.makeTensor(n,e,t)}function GE(e,t=null,n=!1){let r={x:E(e,"x","min")},a={axis:t,keepDims:n};return M.runKernel(ea,r,a)}var dx=z({min_:GE});function HE(e,t){let n=E(e,"a","minimum"),s=E(t,"b","minimum");[n,s]=vt(n,s),n.dtype==="bool"&&(n=de(n,"int32"),s=de(s,"int32")),rt(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(ta,r)}var hm=z({minimum_:HE});function qE(e,t,n){F(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=E(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let i=0;i<s.rank;i++)F(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),F(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},o={x:s};return M.runKernel(na,o,a)}var iue=z({mirrorPad_:qE});function jE(e,t){let n=E(e,"a","mod"),s=E(t,"b","mod");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(Cu,r)}var uue=z({mod_:jE});function KE(e){let t=E(e,"x","square"),n={};return M.runKernel("Square",{x:t},n)}var ct=z({square_:KE});function XE(e,t=null,n=!1){e=E(e,"x","moments");let s=Vn(t,e.shape),r=$t(e,s,n),a=r.shape;n||(a=Fa(r.shape,s));let o=ct(ge(de(e,"float32"),H(r,a))),i=$t(o,s,n);return{mean:r,variance:i}}var pm=z({moments_:XE});function YE(e,t,n,s){let r=E(t,"data","multiRNNCell"),a=Pc(n,"c","multiRNNCell"),o=Pc(s,"h","multiRNNCell"),i=r,u=[];for(let d=0;d<e.length;d++){let h=e[d](i,a[d],o[d]);u.push(h[0]),u.push(h[1]),i=h[1]}let c=[],l=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),l.push(u[d+1]);return[c,l]}var lue=z({multiRNNCell_:YE});function QE(e,t,n,s=!1){let r=E(e,"logits","multinomial"),a=r.size,o=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let u={logits:o===1?H(r,[1,-1]):r},c={numSamples:t,seed:n,normalized:s},l=M.runKernel(hf,u,c);return o===1?H(l,[l.size]):l}var cue=z({multinomial_:QE});function ZE(e,t){let n=E(e,"a","notEqual","string_or_numeric"),s=E(t,"b","notEqual","string_or_numeric");[n,s]=vt(n,s),rt(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Fo,r)}var qc=z({notEqual_:ZE});function JE(e){let n={x:E(e,"x","onesLike")};return M.runKernel(Lo,n)}var ns=z({onesLike_:JE});function e_(e,t){let n=E(e,"v1","outerProduct"),s=E(t,"v2","outerProduct");F(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=H(n,[-1,1]),a=H(s,[1,-1]);return je(r,a)}var due=z({outerProduct_:e_});function t_(e,t,n=0){let s=E(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return M.runKernel(ra,a,r)}var hi=z({pad_:t_});function n_(e,t,n=0){return F(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),hi(e,[t],n)}var hue=z({pad1d_:n_});function s_(e,t,n=0){return F(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),hi(e,t,n)}var pue=z({pad2d_:s_});function r_(e,t,n=0){return F(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),hi(e,t,n)}var fue=z({pad3d_:r_});function a_(e,t,n=0){return F(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),hi(e,t,n)}var mue=z({pad4d_:a_});function o_(e,t,n){let s=E(e,"x","spaceToBatchND");F(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),F(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),F(s.shape.reduce((o,i,u)=>u>0&&u<=t.length?o&&(i+n[u-1][0]+n[u-1][1])%t[u-1]==0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return M.runKernel(Ko,r,a)}var hx=z({spaceToBatchND_:o_});function i_(e,t,n,s,r,a){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let o=E(e,"x","maxPool"),i=o,u=!1;o.rank===3&&(u=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(gs(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let c=Kv(i.shape,t,a,r,s),l=[c.dilationHeight,c.dilationWidth],d;s==="same"?d=l_([c.filterHeight,c.filterWidth],l):d=[[0,0],[0,0]];let h=l[0]===1&&l[1]===1,[p,f]=u_([c.inHeight,c.inWidth],l,d),m=h?s:"valid",g=h?i:hx(i,l,p),v=(n==="avg"?()=>Qv(g,t,a,m):()=>cx(g,t,a,m))(),y=h?v:Zv(v,l,f);return u?H(y,[y.shape[1],y.shape[2],y.shape[3]]):y}function u_(e,t,n){let s=n.map(l=>l[0]),r=n.map(l=>l[1]),a=e.concat(s,r),o=t.map((l,d)=>(l-a[d]%l)%l),i=r.map((l,d)=>l+o[d]),u=t.map((l,d)=>[s[d],i[d]]),c=t.map((l,d)=>[0,o[d]]);return[u,c]}function l_(e,t){let s=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}var gue=z({pool_:i_});function c_(e,t){let n=E(e,"base","pow"),s=E(t,"exp","pow");[n,s]=vt(n,s);let r={a:n,b:s};return M.runKernel(aa,r)}var pi=z({pow_:c_});function d_(e,t){let n=E(e,"x","prelu"),s=E(t,"alpha","prelu"),r={x:n,alpha:s};return M.runKernel(oa,r)}var px=z({prelu_:d_});function h_(e,t=null,n=!1){let s=E(e,"x","prod");s.dtype==="bool"&&(s=de(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return M.runKernel(Bo,r,a)}var bue=z({prod_:h_});function p_(e,t,n){let s=Dt(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return M.makeTensor(r,e,n)}var yue=z({rand_:p_}),fm=$r(rc()),mm=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=fm.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},f_=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=fm.alea(r.toString()),this.randn=new mm(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},m_=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=fm.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function g_(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new f_(t,n,s,r),o=_e(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var vue=z({randomGamma_:g_});function b_(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new mm(t,n,s,!1,r),o=_e(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var y_=z({randomNormal_:b_});function v_(e,t=0,n=1,s="float32",r){let a=_e(e,s),o=new m_(t,n,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var jc=z({randomUniform_:v_});function Kc(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return M.runKernel(Tu,{},r)}function x_(e){let n={input:E(e,"input","real")};return M.runKernel(kc,n)}var gm=z({real_:x_});function w_(e){let n={x:E(e,"x","reciprocal")};return M.runKernel($u,n)}var xue=z({reciprocal_:w_});function k_(e){let n={x:E(e,"x","relu")};return M.runKernel(ia,n)}var ir=z({relu_:k_});function I_(e){let n={x:E(e,"x","relu6")};return M.runKernel(la,n)}var S_=z({relu6_:I_});function C_(e,t){let s={x:E(e,"x","reverse")},r={dims:t};return M.runKernel(Wo,s,r)}var ys=z({reverse_:C_});function N_(e){let t=E(e,"x","reverse");return F(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),ys(t,0)}var wue=z({reverse1d_:N_});function T_(e,t){let n=E(e,"x","reverse");return F(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),ys(n,t)}var kue=z({reverse2d_:T_});function $_(e,t){let n=E(e,"x","reverse");return F(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),ys(n,t)}var Iue=z({reverse3d_:$_});function A_(e,t){let n=E(e,"x","reverse");return F(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),ys(n,t)}var Sue=z({reverse4d_:A_});function E_(e){let n={x:E(e,"x","round")};return M.runKernel(Uo,n)}var __=z({round_:E_});function R_(e){let n={x:E(e,"x","rsqrt","float32")};return M.runKernel(ca,n)}var D_=z({rsqrt_:R_});function Te(e,t){if((en(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&en(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Vu(e,[],[],t)}function F_(e){let n={x:E(e,"x","selu")};return M.runKernel(Eu,n)}var O_=z({selu_:F_});function P_(e,t,n,s,r,a=[1,1],o="NHWC"){let i=E(e,"x","separableConv2d"),u=E(t,"depthwiseFilter","separableConv2d"),c=E(n,"pointwiseFilter","separableConv2d"),l=i,d=!1;if(i.rank===3&&(d=!0,l=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),F(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),F(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),F(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),F(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let h=u.shape[2],p=u.shape[3];F(c.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${c.shape[2]}.`);let f=im(l,u,s,r,o,a),g=di(f,c,1,"valid",o);return d?H(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var L_=z({separableConv2d_:P_});function z_(e){let n={x:E(e,"x","sign")};return M.runKernel(_u,n)}var Cue=z({sign_:z_});function M_(e){let n={x:E(e,"x","sin","float32")};return M.runKernel(da,n)}var B_=z({sin_:M_});function V_(e){let n={x:E(e,"x","sinh")};return M.runKernel(jo,n)}var W_=z({sinh_:V_});function U_(e,t,n){let s=E(e,"x","slice1d");return F(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Qe(s,[t],[n])}var bm=z({slice1d_:U_});function G_(e,t,n){let s=E(e,"x","slice2d");return F(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Qe(s,t,n)}var fx=z({slice2d_:G_});function H_(e,t,n){let s=E(e,"x","slice3d");return F(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Qe(s,t,n)}var ym=z({slice3d_:H_});function q_(e,t,n){let s=E(e,"x","slice4d");return F(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Qe(s,t,n)}var Xc=z({slice4d_:q_});function j_(e,t=-1){let n=E(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return M.runKernel(ma,s,r)}var mx=z({softmax_:j_});function K_(e){F(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return M.runKernel(af,t)}var X_=z({fft_:K_});function Y_(e){F(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return M.runKernel(of,t)}var gx=z({ifft_:Y_});function Q_(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=H(e,[n,t]);s=gx(r)}else{let r=[n,2*(t-1)],a=H(gm(e),[n,t]),o=H(sx(e),[n,t]),i=ys(Qe(a,[0,1],[n,t-2]),1),u=B(ys(Qe(o,[0,1],[n,t-2]),1),Te(-1)),c=nn([a,i],1),l=nn([o,u],1),d=H(ri(c,l),[r[0],r[1]]);s=gx(d)}if(s=gm(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=H(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var Nue=z({irfft_:Q_});function Z_(e,t,n=0){let r={x:E(e,"x","split")},a={numOrSizeSplits:t,axis:n};return M.runKernel(Xo,r,a)}var Hn=z({split_:Z_});function J_(e,t){F(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=Qe(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=nn([e,Ft(f)],e.shape.length-1),n=t}else r=e;let a=Xe(r),o=H(ri(r,a),[s,n]),i=X_(o),u=Math.floor(n/2)+1,c=gm(i),l=sx(i),d=Hn(c,[u,n-u],c.shape.length-1),h=Hn(l,[u,n-u],l.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=u,H(ri(d[0],h[0]),p)}var eR=z({rfft_:J_});function tR(e){let n={x:E(e,"x","sqrt","float32")};return M.runKernel(pa,n)}var gn=z({sqrt_:tR});function nR(e,t){let n=E(e,"a","squaredDifference"),s=E(t,"b","squaredDifference");[n,s]=vt(n,s),rt(n.shape,s.shape);let r={a:n,b:s},a={};return M.runKernel(ga,r,a)}var sR=z({squaredDifference_:nR});function rR(e,t){let n=E(e,"x","squeeze");return H(n,Ly(n.shape,t).newShape)}var Yc=z({squeeze_:rR});function aR(e,t=0){let n=Pc(e,"tensors","stack","string_or_numeric");F(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&F(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return M.runKernel(Mo,s,r)}var Pa=z({stack_:aR});function oR(e,t=0){let s={x:E(e,"x","step")},r={alpha:t};return M.runKernel(xa,s,r)}var Qc=z({step_:oR});function iR(e,t,n,s,r=0,a=0,o=0,i=0,u=0){let l={x:E(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return M.runKernel(Yo,l,d)}var Tue=z({stridedSlice_:iR});function uR(e){let n={x:E(e,"x","tan","float32")};return M.runKernel(Qo,n)}var $ue=z({tan_:uR});function bn(e,t){ic(e);let n=Na(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Vu(e,null,n,t)}function fi(e,t,n){if(ic(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=Na(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Vu(e,t,s,n)}function lR(e,t=1,n=!0){let s=E(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},o={k:t,sorted:n},[i,u]=M.runKernel(Zo,a,o);return{values:i,indices:u}}var Aue=z({topk_:lR});function cR(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new mm(t,n,s,!0,r),o=_e(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var bx=z({truncatedNormal_:cR});function dR(e,t=0){let n=E(e,"x","unique","string_or_numeric");F(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,o]=M.runKernel(wf,s,r);return{values:a,indices:o}}var Eue=z({unique_:dR});function hR(e,t,n){let s=E(e,"x","unsortedSegmentSum"),r=E(t,"segmentIds","unsortedSegmentSum","int32");F(Bt(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},o={numSegments:n};return M.runKernel(Cc,a,o)}var pR=z({unsortedSegmentSum_:hR});function fR(e,t=0){let n=E(e,"x","unstack","string_or_numeric");F(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return M.runKernel(ei,s,r)}var qu=z({unstack_:fR});function mR(e,t=!0,n,s){return M.makeVariable(e,t,n,s)}function gR(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=_e(e,"int32"),r=_e([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=s.indexToLoc(n[a]),i=a*e.length;r.values.set(o,i)}return r.toTensor()}function bR(e,t="euclidean",n=null,s=!1){e=E(e,"x","norm");let r=yx(e,t,n),a=r.shape;if(s){let o=Vn(n,e.shape);a=Fa(r.shape,o)}return H(r,a)}function yx(e,t,n=null){if(e.rank===0)return Kt(e);if(e.rank!==1&&n===null)return yx(H(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return xe(Kt(e),n);if(t===1/0)return Os(Kt(e),n);if(t===-1/0)return dx(Kt(e),n);if(t==="euclidean"||t===2)return gn(xe(pi(Kt(e),Te(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return Os(xe(Kt(e),n[0]),n[1]-1);if(t===1/0)return Os(xe(Kt(e),n[1]),n[0]);if(t===-1/0)return dx(xe(Kt(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return gn(xe(ct(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var vx=z({norm_:bR});function yR(e,t,n,s,r=!0){let a=E(e,"v","movingAverage"),o=E(t,"x","movingAverage"),i=E(n,"decay","movingAverage");rv(a,o),F(Xs(a.shape,o.shape),()=>"Shape mismatch in v and x");let u=Te(1),c=ge(u,i),l=B(ge(o,a),c);if(r){F(s!=null,()=>"When using zeroDebias: true, step is required.");let d=E(s,"step","movingAverage");l=Ie(l,ge(u,pi(i,d)))}return oe(a,l)}var _ue=z({movingAverage_:yR});function vR(e,t,n){let s=E(e,"indices","scatterND","int32"),r=E(t,"updates","scatterND");Yf(r,s,n);let a={indices:s,updates:r},o={shape:n};return M.runKernel(Go,a,o)}var Rue=z({scatterND_:vR});function xR(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function wR(e,t,n,s=0){let r=E(e,"sparseIndices","sparseToDense","int32"),a=E(t,"sparseValues","sparseToDense"),o=E(s,"defaultValue","sparseToDense",a.dtype);xR(r,a,n,o);let i={sparseIndices:r,sparseValues:a,defaultValue:o},u={outputShape:n};return M.runKernel(Ic,i,u)}var Due=z({sparseToDense_:wR});function kR(e,t){let n=E(t,"indices","gatherND","int32"),r={params:E(e,"x","gatherND","string_or_numeric"),indices:n};return M.runKernel(To,r)}var Fue=z({gatherND_:kR});function IR(e,t){if(t==null)return e.shape.slice();if(Xs(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function SR(e,t,n,s){let r=E(e,"x","dropout");if(F(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),F(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof yt?r.clone():r;let a=IR(r,n),o=1-t,i=Ie(lm(oe(jc(a,0,1,"float32",s),o)),o);return B(r,i)}var CR=z({dropout_:SR});function NR(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function xx(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(o)}return bn(r,"float32")}var Zc={};$e(Zc,{conv2d:()=>AR,depthwiseConv2d:()=>DR,matMul:()=>OR});function TR(e,t,n,s,r,a="NHWC",o){let i=e;e.rank===3&&(i=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=H(t,[1,t.shape[0],t.shape[1],t.shape[2]])),F(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),F(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),F(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let c=a==="NHWC"?i.shape[3]:i.shape[1],l=a==="NHWC"?u.shape[3]:u.shape[1];F(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),F(l===n[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${n[3]}).`),o!=null&&F(Bt(r),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let d={x:i,dy:u},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:n};return M.runKernel(Xp,d,h)}var vm=z({conv2DBackpropFilter_:TR});function Jc(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return B(e,Qc(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ed(e,t){let n=t,s=Tt(e.shape,t.shape);return s.length>0&&(n=xe(n,s)),H(n,e.shape)}function td(e,t,n,s){if(t==="linear")return e;if(t==="relu")return ir(e);if(t==="elu")return um(e);if(t==="relu6")return S_(e);if(t==="prelu")return px(e,n);if(t==="leakyrelu")return rx(e,s);if(t==="sigmoid")return ar(e);throw new Error(`Unknown fused activation ${t}.`)}var nd=(e,t)=>!(e>0)||t==="linear";function $R({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",nd(M.state.gradientDepth,u)===!1){let k=di(e,t,n,s,r,a,o);return i!=null&&(k=oe(k,i)),td(k,u,c,l)}let d=E(e,"x","conv2d","float32"),h=E(t,"filter","conv2d","float32"),p=d,f=!1;d.rank===3&&(f=!0,p=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),F(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),F(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),o!=null&&F(Bt(s),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`),F(p.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${h.shape[2]}.`),F(gs(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),F(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let m=Uu(p.shape,h.shape,n,a,s,o),g;i!=null&&(g=E(i,"bias","fused conv2d"),[g]=vt(g,d),rt(m.outShape,g.shape));let b;c!=null&&(b=E(c,"prelu weights","fused conv2d"));let v=(k,S)=>{let[N,A,_,O]=S,R=Jc(k,_,u);F(rr(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let D=om(A.shape,R,N,n,s),C=vm(A,R,N.shape,n,s),P=[D,C];if(O!=null){let V=ed(O,R);P.push(V)}return P},y={x:p,filter:h,bias:g,preluActivationWeights:b},w={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:u,leakyreluAlpha:l};return i==null?Fs((S,N,A)=>{let _=M.runKernel(ka,y,w);return A([N,S,_]),f&&(_=H(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:v}})(p,h):Fs((S,N,A,_)=>{let O=M.runKernel(ka,y,w);return _([N,S,O,A]),f&&(O=H(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:v}})(p,h,g)}var AR=z({fusedConv2d_:$R});function ER(e,t,n,s,r,a=[1,1],o){let i=e;e.rank===3&&(i=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:i,dy:u},l={strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:n};return M.runKernel(Jp,c,l)}var wx=z({depthwiseConv2dNativeBackpropFilter_:ER});function _R(e,t,n,s,r,a=[1,1],o){let i=t,u=!1;t.rank===3&&(u=!0,i=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:i,filter:n},l={strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:e},d=M.runKernel(ef,c,l);return u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var kx=z({depthwiseConv2dNativeBackpropInput_:_R});function RR({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(nd(M.state.gradientDepth,u)===!1){let k=im(e,t,n,s,r,a,o);return i!=null&&(k=oe(k,i)),td(k,u,c,l)}let d=E(e,"x","depthwiseConv2d","float32"),h=E(t,"filter","depthwiseConv2d","float32"),p=d,f=!1;d.rank===3&&(f=!0,p=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),F(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),F(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),F(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),a==null&&(a=[1,1]),F(gs(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),o!=null&&F(Bt(s),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${s}.`);let m=Uu(p.shape,h.shape,n,a,s,o,!0),g;i!=null&&(g=E(i,"bias","fused conv2d"),[g]=vt(g,d),rt(m.outShape,g.shape));let b;c!=null&&(b=E(c,"prelu weights","fused depthwiseConv2d"));let v=(k,S)=>{F(rr(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[N,A,_,O]=S,R=Jc(k,_,u),D=kx(A.shape,R,N,n,s,a,o),C=wx(A,R,N.shape,n,s,a,o);if(O!=null){let P=ed(g,R);return[D,C,P]}return[D,C]},y={x:p,filter:h,bias:g,preluActivationWeights:b},w={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:u,leakyreluAlpha:l};return i==null?Fs((S,N,A)=>{let _=M.runKernel(Ia,y,w);return A([N,S,_]),f&&(_=H(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:v}})(p,h):Fs((S,N,A,_)=>{let O=M.runKernel(Ia,y,w);return _([N,S,O,A]),f&&(O=H(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:v}})(p,h,g)}var DR=z({fusedDepthwiseConv2d_:RR});function FR({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(nd(M.state.gradientDepth,a)===!1){let R=je(e,t,n,s);return r!=null&&(R=oe(R,r)),td(R,a,o,i)}let u=E(e,"a","fused matMul"),c=E(t,"b","fused matMul");[u,c]=vt(u,c);let l=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),g=Dt(f),b=Dt(m);F(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${s} must match.`);let y=rt(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([h,p]),w=n?H(u,[g,l,h]):H(u,[g,h,l]),k=s?H(c,[b,p,d]):H(c,[b,d,p]),S;r!=null&&(S=E(r,"bias","fused matMul"),[S]=vt(S,u),rt(y,S.shape));let N;o!=null&&(N=E(o,"prelu weights","fused matMul"));let A=(R,D)=>{let[C,P,V,G]=D,U=Jc(H(R,V.shape),V,a),q,Y;if(!n&&!s?(q=je(U,P,!1,!0),Y=je(C,U,!0,!1)):!n&&s?(q=je(U,P,!1,!1),Y=je(U,C,!0,!1)):n&&!s?(q=je(P,U,!1,!0),Y=je(C,U,!1,!1)):(q=je(P,U,!0,!0),Y=je(U,C,!0,!0)),r!=null){let Z=ed(G,U);return[q,Y,Z]}else return[q,Y]},_={a:w,b:k,bias:S,preluActivationWeights:N},O={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:i};return r==null?Fs((D,C,P)=>{let V=M.runKernel(wa,_,O);return P([D,C,V]),{value:H(V,y),gradFunc:A}})(w,k):Fs((D,C,P,V)=>{let G=M.runKernel(wa,_,O);return V([D,C,G,P]),{value:H(G,y),gradFunc:A}})(w,k,S)}var OR=z({fusedMatMul_:FR});function PR(e){return xx(e,.54,.46)}var Oue=z({hammingWindow_:PR});function LR(e){return xx(e,.5,.5)}var zR=z({hannWindow_:LR});function MR(e,t,n,s=!1,r=0){let a=0,o=[];for(;a+t<=e.size;)o.push(Qe(e,a,t)),a+=n;if(s)for(;a<e.size;){let i=a+t-e.size,u=nn([Qe(e,a,t-i),Gc([i],r)]);o.push(u),a+=n}return o.length===0?fi([],[0,t]):H(nn(o),[o.length,t])}var BR=z({frame_:MR});function VR(e,t,n,s,r=zR){s==null&&(s=NR(t));let a=BR(e,t,n),o=B(a,r(t));return eR(o,s)}var Pue=z({stft_:VR});function WR(e,t,n,s,r="bilinear",a=0){let o=E(e,"image","cropAndResize"),i=E(t,"boxes","cropAndResize","float32"),u=E(n,"boxInd","cropAndResize","int32"),c=i.shape[0];F(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),F(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),F(u.rank===1&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),F(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),F(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),F(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let l={image:o,boxes:i,boxInd:u},d={method:r,extrapolationValue:a,cropSize:s};return M.runKernel(xo,l,d)}var UR=z({cropAndResize_:WR});function GR(e){let t=E(e,"image","flipLeftRight","float32");F(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return M.runKernel(Co,n,{})}var HR=z({flipLeftRight_:GR});function qR(e){let t=E(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];F(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),F(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,bs(t,r)}var jR=z({grayscaleToRGB_:qR});function KR(e,t,n=0,s=.5){let r=E(e,"image","rotateWithOffset","float32");F(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},o={radians:t,fillValue:n,center:s};return M.runKernel(ni,a,o)}var XR=z({rotateWithOffset_:KR});function mi(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),F(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),F(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),F(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),F(t.rank===1,()=>"scores must be a 1D tensor"),F(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),F(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function YR(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=E(e,"boxes","nonMaxSuppression","float32"),o=E(t,"scores","nonMaxSuppression","float32"),i=mi(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return M.runKernel(Oo,{boxes:a,scores:o},u)}var QR=z({nonMaxSuppression_:YR});function ZR(e,t,n){let s=JR(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function JR(e,t,n){return tD(e,t,n||eD)}function eD(e,t){return e>t?1:e<t?-1:0}function tD(e,t,n){let s=0,r=e.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);let i=n(t,e[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}function Ix(e,t,n,s,r){return xm(e,t,n,s,r,0)}function Sx(e,t,n,s,r,a){return xm(e,t,n,s,r,0,!1,a,!0)}function Cx(e,t,n,s,r,a){return xm(e,t,n,s,r,a,!0)}function xm(e,t,n,s,r,a,o=!1,i=!1,u=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(Nx);let l=a>0?-.5/a:0,d=[],h=[];for(;d.length<n&&c.length>0;){let g=c.pop(),{score:b,boxIndex:v,suppressBeginIndex:y}=g;if(b<r)break;let w=!1;for(let k=d.length-1;k>=y;--k){let S=nD(e,v,d[k]);if(S>=s){w=!0;break}if(g.score=g.score*sD(s,l,S),g.score<=r)break}g.suppressBeginIndex=d.length,w||(g.score===b?(d.push(v),h.push(g.score)):g.score>r&&ZR(c,g,Nx))}let p=d.length,f=n-p;i&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));let m={selectedIndices:d};return o&&(m.selectedScores=h),u&&(m.validOutputs=p),m}function nD(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),l=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(i-a)*(u-o),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;let m=Math.max(a,c),g=Math.max(o,l),b=Math.min(i,d),v=Math.min(u,h),y=Math.max(b-m,0)*Math.max(v-g,0);return y/(p+f-y)}function sD(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function Nx(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function rD(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=E(e,"boxes","nonMaxSuppressionAsync"),o=E(t,"scores","nonMaxSuppressionAsync"),i=mi(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let u=await Promise.all([a.data(),o.data()]),c=u[0],l=u[1],{selectedIndices:d}=Ix(c,l,n,s,r);return a!==e&&a.dispose(),o!==t&&o.dispose(),bn(d,"int32")}var aD=rD;function oD(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=E(e,"boxes","nonMaxSuppression"),i=E(t,"scores","nonMaxSuppression"),u=mi(o,i,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;let c={boxes:o,scores:i},l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},d=M.runKernel(Po,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}var iD=z({nonMaxSuppressionWithScore_:oD});async function uD(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=E(e,"boxes","nonMaxSuppressionAsync"),i=E(t,"scores","nonMaxSuppressionAsync"),u=mi(o,i,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;let c=await Promise.all([o.data(),i.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=Cx(l,d,n,s,r,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:bn(h,"int32"),selectedScores:bn(p)}}var lD=uD;function cD(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=E(e,"boxes","nonMaxSuppression"),i=E(t,"scores","nonMaxSuppression"),u=mi(o,i,n,s,r,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,h={boxes:o,scores:i},p={maxOutputSize:c,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:a},f=M.runKernel(Nu,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}var dD=z({nonMaxSuppressionPadded_:cD});async function hD(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=E(e,"boxes","nonMaxSuppressionAsync"),i=E(t,"scores","nonMaxSuppressionAsync"),u=mi(o,i,n,s,r,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Sx(h,p,c,l,d,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:bn(f,"int32"),validOutputs:Te(m,"int32")}}var pD=hD;function fD(e,t,n=!1,s=!1){let r=E(e,"images","resizeBilinear");F(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),F(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),F(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},u={alignCorners:n,halfPixelCenters:s,size:t},c=M.runKernel(ua,i,u);return o?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var mD=z({resizeBilinear_:fD});function gD(e,t,n=!1,s=!1){let r=E(e,"images","resizeNearestNeighbor");F(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),F(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),F(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),F(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},u={alignCorners:n,halfPixelCenters:s,size:t},c=M.runKernel(Au,i,u);return o?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var bD=z({resizeNearestNeighbor_:gD});function yD(e,t="binary",n=!1,s=.5){let r=E(e,"image","threshold"),a=.2989,o=.587,i=.114,u=r.shape[0]*r.shape[1],c=B(bn([s]),255),l,d,h,p;if(F(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),F(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),F(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),F(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[l,d,h]=Hn(r,[1,1,1],-1);let g=B(l,a),b=B(d,o),v=B(h,i);p=oe(oe(g,b),v)}else p=e;if(t==="otsu"){let g=hA(de(__(p),"int32"),ai([]),256);c=vD(g,u)}let f=n?Hu(p,c):Gn(p,c);return de(B(f,255),"int32")}function vD(e,t){let n=bn([-1]),s=bn([0]),r=bn([0]),a,o,i,u,c,l;for(let d=0;d<e.size-1;d++){a=Qe(e,0,d+1),o=Qe(e,d+1),c=Ie(xe(a),t),l=Ie(xe(o),t);let h=xe(B(a,Kc(0,a.size)));i=Ie(h,xe(a));let p=Gc(o.shape,a.size),f=oe(Kc(0,o.size),p),m=B(o,f);u=Ie(xe(m),xe(o));let g=ge(i,u),b=ge(i,u),v=B(c,l);r=B(B(v,g),b);let y=Gn(r,s);s=Cn(y,r,s),n=Cn(y,bn([d]),n)}return n}var xD=z({threshold_:yD});function wD(e,t,n="nearest",s="constant",r=0,a){let o=E(e,"image","transform","float32"),i=E(t,"transforms","transform","float32");F(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),F(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),F(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let u={image:o,transforms:i},c={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return M.runKernel(Jo,u,c)}var kD=z({transform_:wD});function ID(e,t,n){F(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),F(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=E(e,"a","bandPart");F(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,o]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=H(Kc(0,a,1,"int32"),[-1,1]),u=Kc(0,o,1,"int32"),c=ge(i,u),l=Ps(Hu(c,Te(+t,"int32")),Gu(c,Te(-n,"int32"))),d=Ft([a,o],s.dtype);return H(Pa(qu(H(s,[-1,a,o])).map(h=>Cn(l,h,d))),r)}var SD=z({bandPart_:ID});function CD(e){let t;if(Array.isArray(e)){t=!1,F(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)F(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=Hn(e,e.shape[0],0).map(r=>Yc(r,[0]));F(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(M.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){let i=B(xe(B(n[o],a)),n[o]);a=ge(a,i)}return Ie(a,vx(a,"euclidean"))}));return t?Pa(n,0):n}var ND=z({gramSchmidt_:CD});function TD(e,t=!1){if(F(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return Tx(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((u,c)=>u*c),s=qu(H(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(u=>{let[c,l]=Tx(u,t);r.push(c),a.push(l)});let o=H(Pa(r,0),e.shape),i=H(Pa(a,0),e.shape);return[o,i]}}function Tx(e,t=!1){return M.tidy(()=>{F(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=tx(n),a=Ea(e),o=fi([[1]],[1,1]),i=Ea(o),u=n>=s?s:n;for(let c=0;c<u;++c){let l=a,d=i,h=r;[i,a,r]=M.tidy(()=>{let p=Qe(a,[c,c],[n-c,1]),f=vx(p),m=Qe(a,[c,c],[1,1]),g=Cn(Gn(m,0),fi([[-1]]),fi([[1]])),b=ge(m,B(g,f)),v=Ie(p,b);v.shape[0]===1?i=Ea(o):i=nn([o,Qe(v,[1,0],[v.shape[0]-1,v.shape[1]])],0);let y=Ct(Ie(je(g,b),f)),w=Qe(a,[c,0],[n-c,s]),k=B(y,i),S=Ke(i);if(c===0)a=ge(w,je(k,je(S,w)));else{let _=ge(w,je(k,je(S,w)));a=nn([Qe(a,[0,0],[c,s]),_],0)}let N=Ke(k),A=Qe(r,[0,c],[n,r.shape[1]-c]);if(c===0)r=ge(A,je(je(A,i),N));else{let _=ge(A,je(je(A,i),N));r=nn([Qe(r,[0,0],[n,c]),_],1)}return[i,a,r]}),Oe([l,d,h])}return!t&&n>s&&(r=Qe(r,[0,0],[n,s]),a=Qe(a,[0,0],[s,s])),[r,a]})}var $D=z({qr_:TD}),yn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(yn||(yn={}));function AD(e,t,n=yn.SUM_BY_NONZERO_WEIGHTS){let s=E(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=E(t,"weights","computeWeightedLoss"));let a=r==null?s:B(s,r);if(n===yn.NONE)return a;if(n===yn.SUM)return xe(a);if(n===yn.MEAN){if(r==null)return $t(a);{let o=s.size/r.size,i=Ie(xe(a),xe(r));return o>1?Ie(i,Te(o)):i}}if(n===yn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return Ie(xe(a),Te(s.size));{let o=B(r,or(s.shape)),i=de(xe(qc(o,Te(0))),"float32");return Ie(xe(a),i)}}throw Error(`Unknown reduction: ${n}`)}var ur=z({computeWeightedLoss_:AD});function ED(e,t,n,s=yn.SUM_BY_NONZERO_WEIGHTS){let r=E(e,"labels","absoluteDifference"),a=E(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=E(n,"weights","absoluteDifference")),Qn(r.shape,a.shape,"Error in absoluteDifference: ");let i=Kt(ge(r,a));return ur(i,o,s)}var Lue=z({absoluteDifference_:ED});function _D(e,t,n,s,r=yn.SUM_BY_NONZERO_WEIGHTS){let a=E(e,"labels","cosineDistance"),o=E(t,"predictions","cosineDistance"),i=null;s!=null&&(i=E(s,"weights","cosineDistance")),Qn(a.shape,o.shape,"Error in cosineDistance: ");let u=Te(1),c=ge(u,xe(B(a,o),n,!0));return ur(c,i,r)}var zue=z({cosineDistance_:_D});function RD(e,t,n,s=yn.SUM_BY_NONZERO_WEIGHTS){let r=E(e,"labels","hingeLoss"),a=E(t,"predictions","hingeLoss"),o=null;n!=null&&(o=E(n,"weights","hingeLoss")),Qn(r.shape,a.shape,"Error in hingeLoss: ");let i=Te(1);r=ge(B(Te(2),r),i);let u=ir(ge(i,B(r,a)));return ur(u,o,s)}var Mue=z({hingeLoss_:RD});function DD(e,t,n,s=1,r=yn.SUM_BY_NONZERO_WEIGHTS){let a=E(e,"labels","huberLoss"),o=E(t,"predictions","huberLoss"),i=null;n!=null&&(i=E(n,"weights","huberLoss")),Qn(a.shape,o.shape,"Error in huberLoss: ");let u=Te(s),c=Kt(ge(o,a)),l=hm(c,u),d=ge(c,l),h=oe(B(Te(.5),ct(l)),B(u,d));return ur(h,i,r)}var Bue=z({huberLoss_:DD});function FD(e,t,n,s=1e-7,r=yn.SUM_BY_NONZERO_WEIGHTS){let a=E(e,"labels","logLoss"),o=E(t,"predictions","logLoss"),i=null;n!=null&&(i=E(n,"weights","logLoss")),Qn(a.shape,o.shape,"Error in logLoss: ");let u=Te(1),c=Te(s),l=Ct(B(a,ts(oe(o,c)))),d=B(ge(u,a),ts(oe(ge(u,o),c))),h=ge(l,d);return ur(h,i,r)}var Vue=z({logLoss_:FD});function OD(e,t,n,s=yn.SUM_BY_NONZERO_WEIGHTS){let r=E(e,"labels","meanSquaredError"),a=E(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=E(n,"weights","meanSquaredError")),Qn(r.shape,a.shape,"Error in meanSquaredError: ");let i=sR(r,a);return ur(i,o,s)}var Wue=z({meanSquaredError_:OD});function PD(e,t){let n=E(e,"labels","sigmoidCrossEntropyWithLogits"),s=E(t,"logits","sigmoidCrossEntropyWithLogits");Qn(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=ir(s),a=B(s,n),o=ax(es(Ct(Kt(s))));return oe(ge(r,a),o)}function LD(e,t,n,s=0,r=yn.SUM_BY_NONZERO_WEIGHTS){let a=E(e,"multiClassLabels","sigmoidCrossEntropy"),o=E(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=E(n,"weights","sigmoidCrossEntropy")),Qn(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){let c=Te(s),l=Te(1),d=Te(.5);a=oe(B(a,ge(l,c)),B(d,c))}let u=PD(a,o);return ur(u,i,r)}var Uue=z({sigmoidCrossEntropy_:LD});function zD(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Fs((r,a,o)=>{let u=RE(a,[n],!0),c=ge(de(a,"float32"),u);o([r,c]);let l=Ct(B(c,r));return{value:xe(l,[n]),gradFunc:(p,f)=>{let[m,g]=f,b=Fa(p.shape,[n]);return[B(H(p,b),ge(de(m,"float32"),es(g))),B(H(p,b),ge(es(g),de(m,"float32")))]}}})(e,t)}function MD(e,t,n,s=0,r=yn.SUM_BY_NONZERO_WEIGHTS){let a=E(e,"onehotLabels","softmaxCrossEntropy"),o=E(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=E(n,"weights","softmaxCrossEntropy")),Qn(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){let c=Te(s),l=Te(1),d=Te(a.shape[1]);a=oe(B(a,ge(l,c)),Ie(c,d))}let u=zD(a,o);return ur(u,i,r)}var Gue=z({softmaxCrossEntropy_:MD});function BD(e,t,n,s){let r=E(e,"indices","sparseFillEmptyRows"),a=E(t,"values","sparseFillEmptyRows"),o=E(n,"denseShape","sparseFillEmptyRows"),i=E(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let u={indices:r,values:a,denseShape:o,defaultValue:i},c=M.runKernel(mf,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}var Hue=z({sparseFillEmptyRows_:BD});function VD(e,t,n){let s=E(e,"inputIndices","sparseReshape"),r=E(t,"inputShape","sparseReshape"),a=E(n,"newShape","sparseReshape");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:s,inputShape:r,newShape:a},i=M.runKernel(gf,o);return{outputIndices:i[0],outputShape:i[1]}}var que=z({sparseReshape_:VD});function WD(e,t,n){let s=E(e,"data","sparseSegmentMean"),r=E(t,"indices","sparseSegmentMean"),a=E(n,"segmentIds","sparseSegmentMean");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return M.runKernel(bf,o)}var jue=z({sparseSegmentMean_:WD});function UD(e,t,n){let s=E(e,"data","sparseSegmentSum"),r=E(t,"indices","sparseSegmentSum"),a=E(n,"segmentIds","sparseSegmentSum");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return M.runKernel(yf,o)}var Kue=z({sparseSegmentSum_:UD});function GD(e,t,n,s,r,a,o,i){let u=E(e,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let c=E(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let l={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:o,preserveShortSequences:i},d={data:u,dataSplits:c},h=M.runKernel(Sc,d,l);return{nGrams:h[0],nGramsSplits:h[1]}}var Xue=z({stringNGrams_:GD});function HD(e,t,n=!0){let s=E(e,"input","stringSplit","string"),r=E(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},o={input:s,delimiter:r},i=M.runKernel(vf,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var Yue=z({stringSplit_:HD});function qD(e,t){let n=E(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return M.runKernel(xf,r,s)}var Que=z({stringToHashBucketFast_:qD});var ju={flipLeftRight:HR,grayscaleToRGB:jR,resizeNearestNeighbor:bD,resizeBilinear:mD,rotateWithOffset:XR,cropAndResize:UR,nonMaxSuppression:QR,nonMaxSuppressionAsync:aD,nonMaxSuppressionWithScore:iD,nonMaxSuppressionWithScoreAsync:lD,nonMaxSuppressionPadded:dD,nonMaxSuppressionPaddedAsync:pD,threshold:xD,transform:kD},jD={bandPart:SD,gramSchmidt:ND,qr:$D};var lr=class extends Gv{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(a)}else this.applyGradients(r);return Oe(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return xE(e,t)}dispose(){this.iterations_!=null&&Oe(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Te(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(lr,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var wm=class extends lr{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:K(()=>Xe(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:K(()=>Xe(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[s].variable,u=this.accumulatedUpdates[s].variable;K(()=>{let c=oe(B(i,this.rho),B(ct(o),1-this.rho)),l=B(Ie(gn(oe(u,this.epsilon)),gn(oe(i,this.epsilon))),o),d=oe(B(u,this.rho),B(ct(l),1-this.rho));i.assign(c),u.assign(d);let h=oe(B(l,-this.learningRate),r);r.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Oe(this.accumulatedGrads.map(e=>e.variable)),Oe(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};wm.className="Adadelta";sr(wm);var km=class extends lr{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n];if(this.accumulatedGrads[s]==null){let i=!1;this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:K(()=>Gc(r.shape,this.initialAccumulatorValue).variable(i))}}let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[s].variable;K(()=>{let i=oe(o,ct(a));o.assign(i);let u=oe(B(Ie(a,gn(oe(i,M.backend.epsilon()))),-this.learningRate),r);r.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Oe(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};km.className="Adagrad";sr(km);var Im=class extends lr{constructor(e,t,n,s=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],K(()=>{this.accBeta1=Te(t).variable(),this.accBeta2=Te(n).variable()}),s==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);K(()=>{let n=ge(1,this.accBeta1),s=ge(1,this.accBeta2);t.forEach((r,a)=>{let o=M.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:K(()=>Xe(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:K(()=>Xe(o).variable(i))});let u=Array.isArray(e)?e[a].tensor:e[r];if(u==null)return;let c=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,d=oe(B(c,this.beta1),B(u,1-this.beta1)),h=oe(B(l,this.beta2),B(ct(u),1-this.beta2)),p=Ie(d,n),f=Ie(h,s);c.assign(d),l.assign(h);let m=oe(B(Ie(p,oe(gn(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(B(this.accBeta1,this.beta1)),this.accBeta2.assign(B(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Oe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Oe(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),K(()=>{this.accBeta1.assign(pi(this.beta1,this.iterations_+1)),this.accBeta2.assign(pi(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Im.className="Adam";sr(Im);var Sm=class extends lr{constructor(e,t,n,s=null,r=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],K(()=>{this.iteration=Te(0).variable(),this.accBeta1=Te(t).variable()}),s==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);K(()=>{let n=ge(1,this.accBeta1),s=Ie(-this.learningRate,oe(B(this.iteration,this.decay),1));t.forEach((r,a)=>{let o=M.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:Xe(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:Xe(o).variable(i)});let u=Array.isArray(e)?e[a].tensor:e[r];if(u==null)return;let c=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,d=oe(B(c,this.beta1),B(u,1-this.beta1)),h=B(l,this.beta2),p=Kt(u),f=Oa(h,p);c.assign(d),l.assign(f);let m=oe(B(Ie(s,n),Ie(d,oe(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(oe(this.iteration,1)),this.accBeta1.assign(B(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Oe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Oe(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Sm.className="Adamax";sr(Sm);var sd=class extends lr{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=M.registeredVariables[n];K(()=>{let o=oe(B(this.c,r),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=ms(Te(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};sd.className="SGD";sr(sd);var Cm=class extends sd{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Te(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n];if(this.accumulations[s]==null){let i=!1;this.accumulations[s]={originalName:`${n}/momentum`,variable:K(()=>Xe(r).variable(i))}}let a=this.accumulations[s].variable,o=Array.isArray(e)?e[s].tensor:e[n];o!=null&&K(()=>{let i,u=oe(B(this.m,a),o);this.useNesterov?i=oe(B(this.c,oe(o,B(u,this.m))),r):i=oe(B(this.c,u),r),a.assign(u),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Oe(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Cm.className="Momentum";sr(Cm);var Nm=class extends lr{constructor(e,t=.9,n=0,s=null,r=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=M.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:K(()=>Xe(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:K(()=>Xe(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:K(()=>Xe(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[s].variable,u=this.accumulatedMoments[s].variable;K(()=>{let c=oe(B(i,this.decay),B(ct(o),1-this.decay));if(this.centered){let l=this.accumulatedMeanGrads[s].variable,d=oe(B(l,this.decay),B(o,1-this.decay)),h=Ie(B(o,this.learningRate),gn(ge(c,oe(ct(d),this.epsilon)))),p=oe(B(u,this.momentum),h);i.assign(c),l.assign(d),u.assign(p);let f=ge(r,p);r.assign(f)}else{let l=oe(B(i,this.decay),B(ct(o),1-this.decay)),d=oe(B(u,this.momentum),Ie(B(o,this.learningRate),gn(oe(l,this.epsilon))));i.assign(l),u.assign(d);let h=ge(r,d);r.assign(h)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Oe(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Oe(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Oe(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Nm.className="RMSProp";sr(Nm);var La=class{static sgd(e){return new sd(e)}static momentum(e,t,n=!1){return new Cm(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Nm(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Im(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new wm(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Sm(e,t,n,s,r)}static adagrad(e,t=.1){return new km(e,t)}},gi={sgd:La.sgd,momentum:La.momentum,adadelta:La.adadelta,adagrad:La.adagrad,rmsprop:La.rmsprop,adamax:La.adamax,adam:La.adam},KD=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function XD(){return new Promise(e=>KD(()=>e()))}var T={};$e(T,{ERF_A1:()=>o3,ERF_A2:()=>i3,ERF_A3:()=>u3,ERF_A4:()=>l3,ERF_A5:()=>c3,ERF_P:()=>a3,PARALLELIZE_THRESHOLD:()=>Tm,SELU_SCALE:()=>Ax,SELU_SCALEALPHA:()=>$x,applyActivation:()=>td,assertAndGetBroadcastShape:()=>rt,assertAxesAreInnerMostDims:()=>AE,assertParamsConsistent:()=>YD,assignToTypedArray:()=>g3,axesAreInnerMostDims:()=>cm,calculateShapes:()=>Dv,checkEinsumDimSizes:()=>k3,combineLocations:()=>ox,complexWithEvenIndex:()=>p3,complexWithOddIndex:()=>f3,computeConv2DInfo:()=>Uu,computeConv3DInfo:()=>Xv,computeDefaultPad:()=>nm,computeDilation2DInfo:()=>V$,computeOptimalWindowSize:()=>ZD,computeOutAndReduceShapes:()=>ix,computeOutShape:()=>QD,computePool2DInfo:()=>Kv,computePool3DInfo:()=>W$,convertConv2DDataFormat:()=>Yv,decodeEinsumEquation:()=>x3,eitherStridesOrDilationsAreOne:()=>gs,expandShapeToKeepDim:()=>Fa,exponent:()=>y3,exponents:()=>b3,fromStringArrayToUint8:()=>_3,fromUint8ToStringArray:()=>E3,getAxesPermutation:()=>ux,getBroadcastDims:()=>Tv,getComplexWithIndex:()=>m3,getEinsumComputePath:()=>I3,getEinsumPermutation:()=>w3,getFusedBiasGradient:()=>ed,getFusedDyActivation:()=>Jc,getImageCenter:()=>JD,getInnerMostAxes:()=>EE,getPermuted:()=>t3,getReductionAxes:()=>Tt,getReshaped:()=>e3,getReshapedPermuted:()=>n3,getSliceBeginCoords:()=>s3,getSliceSize:()=>r3,getUndoAxesPermutation:()=>dm,isIdentityPermutation:()=>S3,log:()=>gN,mergeRealAndImagArrays:()=>d3,prepareAndValidate:()=>_v,prepareSplitSize:()=>N3,segment_util:()=>Rx,shouldFuse:()=>nd,slice_util:()=>It,splitRealAndImagArrays:()=>h3,tupleValuesAreOne:()=>rr,upcastType:()=>mn,validateInput:()=>Yf,validateUpdateShape:()=>Xf,warn:()=>er});function YD(e,t){let n=e[0].length;e.forEach((r,a)=>{F(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),F(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let o=0;o<n;o++)F(o===t||r[o]===s[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function QD(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var Tm=30;function ZD(e){return e<=Tm?e:cc(e,Math.floor(Math.sqrt(e)))}function JD(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function e3(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)r=r.concat([e[o+1]/t[o],t[o]]);r=r.concat(e.slice(a+1))}return r}function t3(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2==1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function n3(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function s3(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function r3(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var $x=1.7580993408473768,Ax=1.0507009873554805,a3=.3275911,o3=.254829592,i3=-.284496736,u3=1.421413741,l3=-1.453152027,c3=1.061405429;function d3(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function h3(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function p3(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function f3(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function m3(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function g3(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function b3(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function y3(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var $m="->",v3=/->/g,Ex=",",_x="...";function x3(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(v3,"").length)/$m.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${$m}").`);let[s,r]=e.split($m);F(s.indexOf(_x)===-1,()=>`The ellipsis notation ("${_x}") is not supported yet.`);let a=s.split(Ex),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let h=0;h<r.length;++h){let p=r[h];if(!a.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);i.indexOf(p)===-1&&i.push(p)}for(let h=0;h<s.length;++h){let p=s[h];i.indexOf(p)===-1&&p!==Ex&&i.push(p)}let u=new Array(a.length);for(let h=0;h<o;++h){if(new Set(a[h].split("")).size!==a[h].length)throw new Error(`Found duplicate axes in input component ${a[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let p=0;p<a[h].length;++p)u[h].push(i.indexOf(a[h][p]))}let c=i.length,l=r.length,d=[];for(let h=l;h<c;++h)d.push(h);return{allDims:i,summedDims:d,idDims:u}}function w3(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function k3(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=a[o]:F(s[t[r][o]]===a[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function I3(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)s.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],u=C3(t,i);for(let c of u)a.indexOf(c)===-1&&(s[o].push(c),a.push(c))}return{path:n,steps:s}}function S3(e){return e.every((t,n)=>t===n)}function C3(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function N3(e,t,n=0){let s=[];if(typeof t=="number")F(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);F(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,u)=>u>0?i+u:i);t[a]=e.shape[n]-o}F(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}var Rx={};$e(Rx,{collectGatherOpShapeInfo:()=>A3,computeOutShape:()=>$3,segOpComputeOptimalWindowSize:()=>T3});function T3(e,t){let n=!1,s;for(e<=Tm?(s=e,n=!0):s=cc(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=cc(e,s+1);return s}function $3(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function A3(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let d=0;d<s;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let o=e.shape[n],i=[],u=1,c=1,l=1;for(let d=0;d<s;++d)i.push(e.shape[d]),u*=e.shape[d];for(let d=s;d<n;d++)i.push(e.shape[d]),c*=e.shape[d];for(let d=s;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<a;d++)i.push(e.shape[d]),l*=e.shape[d];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:o,outputShape:i}}function E3(e){try{return e.map(t=>Rc(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function _3(e){return e.map(t=>Pu(t))}var ss={};$e(ss,{nonMaxSuppressionV3Impl:()=>Ix,nonMaxSuppressionV4Impl:()=>Sx,nonMaxSuppressionV5Impl:()=>Cx,whereImpl:()=>gR});var Dx={kernelName:go,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,Qc(de(n,"float32"),-1))}}},R3={kernelName:uu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=ct(de(n,"float32")),r=gn(ge(Te(1),s));return Ct(Ie(e,r))}}}},D3={kernelName:lu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=gn(ge(ct(de(n,"float32")),1));return Ie(e,s)}}}},F3={kernelName:Qs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=rt(n.shape,s.shape);return{a:()=>{let i=e,u=Tt(n.shape,r);return u.length>0&&(i=xe(i,u)),H(i,n.shape)},b:()=>{let i=e,u=Tt(s.shape,r);return u.length>0&&(i=xe(i,u)),H(i,s.shape)}}}},O3={kernelName:Er,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},P3={kernelName:_r,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Xe(n)}}},L3={kernelName:hu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Xe(n)}}},z3={kernelName:pu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ie(e,gn(ge(Te(1),ct(de(n,"float32")))))}}},M3={kernelName:fu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=gn(oe(Te(1),ct(de(n,"float32"))));return Ie(e,s)}}}},B3={kernelName:bu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=rt(n.shape,s.shape);return{a:()=>{let i=oe(ct(n),ct(s)),u=B(e,Ie(s,i)),c=Tt(n.shape,r);return c.length>0&&(u=xe(u,c)),H(u,n.shape)},b:()=>{let i=oe(ct(n),ct(s)),u=Ct(B(e,Ie(n,i))),c=Tt(s.shape,r);return c.length>0&&(u=xe(u,c)),H(u,s.shape)}}}},V3={kernelName:mu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ie(e,oe(ct(de(n,"float32")),1))}}},W3={kernelName:gu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ie(e,ge(Te(1),ct(de(n,"float32"))))}}};function U3(e,t,n,s,r,a){let o=E(e,"dy","avgPool3dGrad"),i=E(t,"input","avgPool3dGrad"),u=o,c=i,l=!1;i.rank===4&&(l=!0,u=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),F(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),a!=null&&F(Bt(r),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);let d={dy:u,input:c},h={filterSize:n,strides:s,pad:r,dimRoundingMode:a},p=M.runKernel(qp,d,h);return l?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var G3=z({avgPool3dGrad_:U3}),H3={kernelName:hc,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>G3(e,s,r,a,o,i)}}};function q3(e,t,n,s,r){let a=E(e,"dy","avgPoolGrad"),o=E(t,"input","avgPoolGrad");F(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,u=a,c=!1;o.rank===3&&(c=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),F(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let l={dy:u,input:i},d={filterSize:n,strides:s,pad:r},h=M.runKernel(Hp,l,d);return c?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var j3=z({avgPoolGrad_:q3}),K3={kernelName:Rr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o}=n;return{x:()=>j3(e,s,r,a,o)}}},X3={kernelName:Dr,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>je(e,r,!1,!0),b:()=>je(s,e,!0,!1)}:!a&&o?{a:()=>je(e,r,!1,!1),b:()=>je(e,s,!0,!1)}:a&&!o?{a:()=>je(r,e,!1,!0),b:()=>je(s,e,!1,!1)}:{a:()=>je(r,e,!0,!0),b:()=>je(e,s,!0,!0)}}},Y3={kernelName:bo,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>hx(e,s,r)}}},Q3={kernelName:fN,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,o=Array.from(a);for(let u=r.length-1;u>=0;u--)if(r[u]===a[u])o[u]=1;else if(r[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let i=[];for(let u=0;u<o.length;u++)o[u]>1&&i.push(u);return{x:()=>xe(e,i,!0)}}},Z3={kernelName:Fr,gradFunc:e=>({x:()=>e.clone()})},J3={kernelName:Or,gradFunc:e=>({x:()=>Xe(e)})},eF={kernelName:Zs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>Cn(Ps(Gu(s,r),Hu(s,a)),e,Xe(e))}}},tF={kernelName:fc,inputsToSave:["x"],gradFunc:Dx.gradFunc},nF={kernelName:yo,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(u=>u.shape),{axis:r}=n,a=Vn(r,t[0].shape)[0],o=s.map(u=>u[a]);return Hn(e,o,a).map(u=>()=>u)}},sF={kernelName:Pr,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:o,pad:i,dataFormat:u}=n;return F(rr(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>om(s.shape,e,r,o,i,u),filter:()=>vm(s,e,r.shape,o,i,u)}}},rF={kernelName:Lr,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>di(e,r,a,o,i,1,u),filter:()=>vm(e,s,r.shape,a,o,i,u)}}};function aF(e,t,n,s,r){let a=e;e.rank===4&&(a=H(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),F(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),F(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),F(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),F(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),F(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},u={strides:s,pad:r,filterShape:n};return M.runKernel(Yp,i,u)}var oF=z({conv3DBackpropFilter_:aF}),iF={kernelName:mc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;F(rr(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[o,i]=t;return{x:()=>Jv(o.shape,e,i,r,a),filter:()=>oF(o,e,i.shape,r,a)}}},uF={kernelName:zr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(Ct(B_(de(n,"float32"))),e)}}},lF={kernelName:Mr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(W_(de(n,"float32")),e)}}},cF={kernelName:vo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:o}=n;return{x:()=>{let i=ux([r],s.rank),u=BA(e,r,a,!o);return i!=null&&(u=Ke(u,i)),u}}}},dF={kernelName:Br,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:o}=n,i=s??[1,1];F(rr(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[u,c]=t;return F(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),F(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),F(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),F(gs(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),o!=null&&F(Bt(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`),{x:()=>kx(u.shape,e,c,r,a,i,o),filter:()=>wx(u,e,c.shape,r,a,i,o)}}},hF={kernelName:gc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>M.runKernel(nf,a,n),filter:()=>M.runKernel(sf,o,n)}}},pF={kernelName:Wr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>M.runKernel(rf,s)}}},fF={kernelName:yu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=B(es(Ct(ct(n))),2/Math.sqrt(Math.PI));return{x:()=>B(e,s)}}},mF={kernelName:Ur,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,n)}}},gF={kernelName:Io,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>H(e,n.shape)}}},bF={kernelName:So,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,es(n))}}},yF={kernelName:Gr,gradFunc:e=>({x:()=>Xe(e)})},vF={kernelName:Hr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=rt(n.shape,s.shape);return{a:()=>{let i=Ie(e,de(s,"float32")),u=Tt(n.shape,r);return u.length>0?H(xe(i,u),n.shape):i},b:()=>{let i=B(e,de(n,"float32")),u=Tt(s.shape,r);u.length>0&&(i=H(xe(i,u),s.shape));let c=ct(s);return Ct(Ie(i,de(c,"float32")))}}}},xF={kernelName:qr,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,o,i]=t,u=i??Te(1),c=Tt(a.shape,r.shape),l=[];if(a.rank===1){for(let w=0;w<r.shape.length-1;++w)l.push(r.shape[w]);l.push(1)}let d=ge(r,a),h=B(e,u),p=D_(oe(o,Te(s))),f=B(B(B(p,p),p),Te(-.5));return{x:()=>a.rank===1?H(B(B(e,bs(H(p,[1,1,1,a.shape[0]]),l)),u),r.shape):H(B(B(e,p),u),r.shape),mean:()=>{let w=B(B(p,Te(-1)),h);return a.rank===1&&(w=xe(w,c)),H(w,a.shape)},variance:()=>{let w=B(B(f,d),h);return a.rank===1&&(w=xe(w,c)),H(w,a.shape)},scale:()=>{let w=B(d,p),k=B(e,w);return a.rank===1&&(k=xe(k,c)),H(k,a.shape)},offset:()=>{let w=e;return a.rank===1&&(w=xe(w,c)),H(w,a.shape)}}}},wF={kernelName:No,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,o=Vn(a,s.shape)[0];return{x:()=>{let u=s.shape,c=r.size,l=u.slice(0,o),d=l.length,h=u.slice(a,u.length).slice(1),p=h.length,f=Fx(0,d),m=Fx(d+1,d+1+p),g=Ox([l,[c],h]),b=H(e,g),v=H(r,[c]),y=Ox([[d],f,m]),w=Ke(b,y),k=pR(w,v,s.shape[o]),S=dm(y);return k=Ke(k,S),k},indices:()=>r}}};function Fx(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function Ox(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var kF={kernelName:jr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>Xe(n),b:()=>Xe(s)}}},IF={kernelName:Kr,gradFunc:e=>({x:()=>de(e,"float32")})},SF={kernelName:xu,gradFunc:e=>({x:()=>Xe(e)})},CF={kernelName:wu,gradFunc:e=>({x:()=>Xe(e)})},NF={kernelName:ku,gradFunc:e=>({x:()=>Xe(e)})},TF={kernelName:Ao,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=Gn(s,0);return{x:()=>Cn(a,e,B(e,r))}}},$F={kernelName:Iu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ie(e,oe(n,1))}}},AF={kernelName:Xr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ie(e,de(n,"float32"))}}},EF={kernelName:mN,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let a=!0,o=es(s);return ge(e,B(xe(e,r,a),o))}}}};function _F(e,t,n,s=5,r=1,a=1,o=.5){let i={x:e,y:t,dy:n},u={depthRadius:s,bias:r,alpha:a,beta:o};return M.runKernel(uf,i,u)}var RF=z({localResponseNormalizationBackprop_:_F}),DF={kernelName:xc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:o,alpha:i,beta:u}=n;return{x:()=>RF(s,r,e,a,o,i,u)}}};function Px(e,t,n,s){return t.rank<n.rank&&(t=H(t,Fa(t.shape,s))),e.rank<n.rank&&(e=H(e,Fa(e.shape,s))),{x:()=>B(e,de(Jn(n,t),e.dtype))}}var Lx={kernelName:Yr,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],o=t[1],i=Vn(r,a.shape),u=Px(e,o,a,i);return{x:()=>u.x()}}},FF={kernelName:Qr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>B(e,de(Gu(n,s),"float32")),b:()=>B(e,de(mE(n,s),"float32"))}}};function OF(e,t,n,s,r,a,o){let i=E(e,"dy","maxPool3dGrad"),u=E(t,"input","maxPool3dGrad"),c=E(n,"output","maxPool3dGrad"),l=i,d=u,h=c,p=!1;u.rank===4&&(p=!0,l=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=H(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=H(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),F(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),F(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),F(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),o!=null&&F(Bt(a),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);let f={dy:l,input:d,output:h},m={filterSize:s,strides:r,pad:a,dimRoundingMode:o},g=M.runKernel(cf,f,m);return p?H(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var PF=z({maxPool3dGrad_:OF}),LF={kernelName:wc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=n;return{x:()=>PF(e,s,r,a,o,i,u)}}};function zF(e,t,n,s,r,a,o){let i=E(e,"dy","maxPoolGrad"),u=E(t,"input","maxPoolGrad"),c=E(n,"output","maxPoolGrad");F(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),F(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),F(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),o!=null&&F(Bt(a),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);let l={dy:i,input:u,output:c},d={filterSize:s,strides:r,pad:a,dimRoundingMode:o};return M.runKernel(lf,l,d)}var MF=z({maxPoolGrad_:zF}),BF={kernelName:Zr,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>MF(e,s,r,a,o,i)}}},VF={kernelName:Jr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=Vn(r,s.shape),i=ix(s.shape,a)[1],u=Dt(i);return{x:()=>{let l=s.shape.slice();a.forEach(p=>{l[p]=1});let d=H(e,l);return Ie(B(d,or(s.shape,"float32")),u)}}}},WF={kernelName:ea,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,o]=t,i=Vn(r,a.shape),u=Px(e,o,a,i);return{x:()=>u.x()}}},UF={kernelName:ta,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>B(e,de(Hu(n,s),"float32")),b:()=>B(e,de(Gn(n,s),"float32"))}}},GF={kernelName:na,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>Qe(e,a,s.shape)}}},HF={kernelName:Cu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=rt(n.shape,s.shape);return{a:()=>{let i=Tt(n.shape,r);return i.length>0?H(xe(e,i),n.shape):e},b:()=>{let i=B(e,Ct(lm(Ie(n,s)))),u=Tt(s.shape,r);return u.length>0?H(xe(i,u),s.shape):i}}}},qF={kernelName:sa,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=rt(n.shape,s.shape);return{a:()=>{let i=B(e,de(s,"float32")),u=Tt(n.shape,r);return u.length>0?H(xe(i,u),n.shape):i},b:()=>{let i=B(e,de(n,"float32")),u=Tt(s.shape,r);return u.length>0?H(xe(i,u),s.shape):i}}}},jF={kernelName:Do,gradFunc:e=>({x:()=>Ct(e)})},KF={kernelName:zo,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Ft(n.shape,"float32")}}},XF={kernelName:Lo,gradFunc:e=>({x:()=>Xe(e)})},YF={kernelName:Mo,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return qu(e,s).map(a=>()=>a)}},zx={kernelName:ra,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>Qe(e,a,s.shape)}}},QF={kernelName:aa,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,o=s,i=rt(a.shape,o.shape);return{a:()=>{let l=de(o,"float32"),d=B(e,B(l,pi(a,ge(l,Te(1))))),h=Tt(a.shape,i);return h.length>0&&(d=xe(d,h)),H(d,a.shape)},b:()=>{let l=Gn(a,0),d=Cn(l,ts(a),Xe(a)),h=B(e,B(r,d)),p=Tt(o.shape,i);return p.length>0&&(h=xe(h,p)),H(h,o.shape)}}}},ZF={kernelName:oa,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=Gn(n,0);return{x:()=>Cn(r,e,B(e,s)),alpha:()=>{let a=Cn(r,Xe(e),B(e,n)),o=Tt(s.shape,e.shape);return o.length>0&&(a=xe(a,o)),H(a,s.shape)}}}},JF={kernelName:Vr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=rt(n.shape,s.shape);return{a:()=>{let i=Ie(e,de(s,"float32")),u=Tt(n.shape,r);return u.length>0?H(xe(i,u),n.shape):i},b:()=>{let i=B(e,de(n,"float32")),u=Tt(s.shape,r);u.length>0&&(i=H(xe(i,u),s.shape));let c=ct(s);return Ct(Ie(i,de(c,"float32")))}}}},eO={kernelName:$u,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ie(e,Ct(ct(n)))}}},tO={kernelName:la,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=B(Hu(n,6),Qc(n));return{x:()=>B(e,de(s,"float32"))}}},nO={kernelName:ia,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,de(Qc(n),"float32"))}}},sO={kernelName:Vo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>H(e,n.shape)}}},rO={kernelName:ua,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>M.runKernel(ff,r,n)}}},aO={kernelName:Au,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>M.runKernel(pf,r,n)}}},oO={kernelName:Wo,gradFunc:(e,t,n)=>{let{dims:s}=n,r=Vn(s,e.shape);return{x:()=>ys(e,r)}}},iO={kernelName:Uo,gradFunc:e=>({x:()=>Xe(e)})},uO={kernelName:ca,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ct(Ie(e,B(pi(n,1.5),2)))}}},lO={kernelName:Ho,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>de(Xe(n),"float32"),t:()=>B(e,de(n,e.dtype)),e:()=>B(e,de(lx(n),e.dtype))}}},cO={kernelName:Eu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Gn(n,Te(0)),r=Te($x),a=Te(Ax),o=B(e,a),i=B(B(e,r),es(de(n,"float32")));return Cn(s,o,i)}}}},dO={kernelName:ha,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,B(n,ge(Te(1),n)))}}},hO={kernelName:_u,gradFunc:e=>({x:()=>Xe(e)})},pO={kernelName:da,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(ex(de(n,"float32")),e)}}},fO={kernelName:jo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(zA(de(n,"float32")),e)}}},mO={kernelName:qo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,o=s.shape,[i,u]=Wv(s,r,a),c=[];for(let l=0;l<e.rank;l++)c.push([i[l],o[l]-i[l]-u[l]]);return{x:()=>hi(e,c)}}},gO={kernelName:ma,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,o=B(e,s);return{logits:()=>ge(o,B(xe(o,[r],a),s))}}},bO={kernelName:Ru,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,ar(n))}}},Mx={kernelName:Ko,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>Zv(e,s,r)}}},Bx={kernelName:Xo,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>nn(e,s)}}},yO={kernelName:pa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ie(e,B(gn(de(n,"float32")),2))}}},vO={kernelName:Du,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,B(de(n,"float32"),2))}}},xO={kernelName:ga,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Te(2);return{a:()=>B(e,B(r,ge(n,s))),b:()=>B(e,B(r,ge(s,n)))}}},wO={kernelName:xa,gradFunc:e=>({x:()=>Xe(e)})},kO={kernelName:ba,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=rt(n.shape,s.shape);return{a:()=>{let i=e,u=Tt(n.shape,r);return u.length>0&&(i=xe(i,u)),H(i,n.shape)},b:()=>{let i=e,u=Tt(s.shape,r);return u.length>0&&(i=xe(i,u)),H(Ct(i),s.shape)}}}},IO={kernelName:fa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;Vn(a,s.shape).forEach(c=>{r[c]=1});let i=H(e,r),u=B(i,or(s.shape,"float32"));return{x:()=>u}}},SO={kernelName:Qo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ie(e,ct(ex(n)))}}},CO={kernelName:ya,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(ge(Te(1),ct(n)),e)}}},NO={kernelName:Js,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let o=Xe(s);if(s.rank===1)for(let i=0;i<r[0];++i)o=oe(o,Qe(e,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let u=0;u<r[1];++u)o=oe(o,Qe(e,[i*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let u=0;u<r[1];++u)for(let c=0;c<r[2];++c)o=oe(o,Qe(e,[i*s.shape[0],u*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let u=0;u<r[1];++u)for(let c=0;c<r[2];++c)for(let l=0;l<r[3];++l)o=oe(o,Qe(e,[i*s.shape[0],u*s.shape[1],c*s.shape[2],l*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}},TO={kernelName:va,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=dm(r);return{x:()=>Ke(e,a)}}},$O={kernelName:ei,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>Pa(e,r)}}},AO={kernelName:Cc,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>EO(e,n)}}};function EO(e,t){let n=Oa(t,Xe(t)),s=nx(e,n),r=Gu(t,Te(0,"int32")),a=s.rank-r.rank;for(let i=0;i<a;++i)r=Un(r,i+1);r=Ps(r,or(s.shape,"bool"));let o=Xe(s);return Cn(r,s,o)}var _O={kernelName:ti,gradFunc:e=>({x:()=>Xe(e)})},RO=[Dx,R3,D3,F3,O3,P3,L3,z3,M3,B3,V3,W3,H3,K3,X3,Y3,Q3,Z3,J3,eF,tF,nF,rF,sF,iF,uF,lF,cF,dF,hF,JF,pF,fF,mF,gF,bF,vF,yF,xF,wF,kF,IF,SF,CF,NF,TF,$F,AF,EF,DF,Lx,Lx,FF,LF,BF,VF,WF,UF,GF,HF,qF,jF,KF,XF,YF,zx,zx,QF,ZF,eO,tO,nO,sO,rO,aO,oO,iO,uO,lO,cO,dO,hO,pO,fO,mO,gO,bO,Mx,Mx,Bx,Bx,yO,xO,vO,wO,kO,IO,SO,CO,NO,TO,$O,AO,_O];for(let e of RO)bN(e);var DO={};$e(DO,{maxNorm:()=>LO,minMaxNorm:()=>BO,nonNeg:()=>MO,unitNorm:()=>zO});var Am;function Ot(){return Am==null&&(Am=w$().epsilon()),Am}function rs(){return"channelsLast"}var Ls=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Ls.prototype)}},as=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,as.prototype)}},W=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,W.prototype)}},Re=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Re.prototype)}},Vx=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Vx.prototype)}};function za(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function vs(e,t){if(!e)throw new Vx(t)}function Wx(e,t){let n=0;for(let s of e)s===t&&n++;return n}function vn(e){return e.length===1?e[0]:e}function dt(e){return Array.isArray(e)?e:[e]}function zs(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function Ma(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var qn={};function Em(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function _m(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>_m(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:_m(s))}}}function Ku(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in qn)o=qn[a];else if(o=t[a],o==null)throw new W(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new W(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,u;if(o in n?[i,u]=n[o]:o in qn?[i,u]=qn.className:o in t&&([i,u]=t[o]),i==null)throw new W(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let c={};for(let p of Object.keys(qn))c[p]=qn[p];for(let p of Object.keys(n))c[p]=n[p];let l=a.config;l.customObjects=c;let d={...qn};for(let p of Object.keys(n))qn[p]=n[p];_m(a.config);let h=u(i,a.config,n,r);return qn={...d},h}else{let c={...qn};for(let d of Object.keys(n))qn[d]=n[d];let l=new i(a.config);return qn={...c},l}}}function FO(e,t){return e<t?-1:e>t?1:0}function rd(e,t){return-1*FO(e,t)}function cr(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function OO(e){if(e==null)throw new W(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ba(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new W(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Rm(e,t,n=0,s=1/0){return vs(n>=0),vs(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function Wt(e,t){Array.isArray(e)?(x.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>Wt(n,`element ${s+1} of ${t}`))):x.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${Ux(e)}.`)}function Ux(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>Ux(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function PO(e,t,n){let s=n!=null?n():x.now(),r;return(...o)=>{let i=n!=null?n():x.now();return i-s<t||(s=i,r=e(...o)),r}}function Gx(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function Dm(e,t){return K(()=>gn(xe(B(e,e),t,!0)))}var Xu=class extends ae.Serializable{getConfig(){return{}}},Fm=class extends Xu{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return K(()=>{let t=Dm(e,this.axis),n=Wn(t,0,this.maxValue);return B(e,Ie(n,oe(Ot(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Fm.className="MaxNorm";ae.registerClass(Fm);var Om=class extends Xu{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return K(()=>Ie(e,oe(Ot(),Dm(e,this.axis))))}getConfig(){return{axis:this.axis}}};Om.className="UnitNorm";ae.registerClass(Om);var Pm=class extends Xu{apply(e){return ir(e)}};Pm.className="NonNeg";ae.registerClass(Pm);var Lm=class extends Xu{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return K(()=>{let t=Dm(e,this.axis),n=oe(B(this.rate,Wn(t,this.minValue,this.maxValue)),B(1-this.rate,t));return B(e,Ie(n,oe(Ot(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Lm.className="MinMaxNorm";ae.registerClass(Lm);var Hx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Pt(e){return Em(e)}function qx(e,t={}){return Ku(e,ae.SerializationMap.getMap().classNameMap,t,"constraint")}function Lt(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Hx?Hx[e]:e,config:{}};return qx(n)}else return e instanceof Xu?e:qx(e)}function LO(e){return new Fm(e)}function zO(e){return new Om(e)}function MO(){return new Pm}function BO(e){return new Lm(e)}var VO={};$e(VO,{constant:()=>cP,glorotNormal:()=>bP,glorotUniform:()=>gP,heNormal:()=>yP,heUniform:()=>vP,identity:()=>fP,leCunNormal:()=>xP,leCunUniform:()=>wP,ones:()=>lP,orthogonal:()=>kP,randomNormal:()=>hP,randomUniform:()=>dP,truncatedNormal:()=>pP,varianceScaling:()=>mP,zeros:()=>uP});var WO=["channelsFirst","channelsLast"],UO=["nearest","bilinear"],GO=["valid","same","causal"],HO=["max","avg"],qO=["sum","mul","concat","ave"],bi=new Map;function Nt(e){Ba(WO,"DataFormat",e)}function jO(e){Ba(UO,"InterpolationFormat",e)}function Rn(e){Ba(GO,"PaddingMode",e)}function jx(e){Ba(HO,"PoolMode",e)}var Yu=[],Kx="/";function Va(e,t){Yu.push(e);try{let n=t();return Yu.pop(),n}catch(n){throw Yu.pop(),n}}function KO(){return Yu.length===0?"":Yu.join(Kx)+Kx}function Xx(e){if(!Qx(e))throw new Error("Not a valid tensor name: '"+e+"'");return KO()+e}function Yx(e){if(!Qx(e))throw new Error("Not a valid tensor name: '"+e+"'");bi.has(e)||bi.set(e,0);let t=bi.get(e);if(bi.set(e,bi.get(e)+1),t>0){let n=`${e}_${t}`;return bi.set(n,1),n}else return e}var XO=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Qx(e){return!!e.match(XO)}function YO(e){return e===parseInt(e.toString(),10)}function dr(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function yi(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function hr(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function os(e,t){if(t<e)throw new W(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}function ad(e,t){return de(e,t)}function Qu(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),H(e,n)}function QO(e,t){return K(()=>{if(e.shape.length!==2)throw new W(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=Qu(e,1);return Bm(n,[1,t,1])})}function ZO(e){let t=[dr(e.shape)];return H(e,t)}function JO(e){if(e.rank<=1)throw new W(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],dr(e.shape,1)];return H(e,t)}function Wa(e,t,n){return K(()=>{switch(e.rank){case 1:return bm(e,t,n);case 2:return fx(e,[t,0],[n,e.shape[1]]);case 3:return ym(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Xc(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Qe(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Qe(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new W(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function zm(e,t,n){return K(()=>{switch(e.rank){case 1:return bm(e,t,n);case 2:return fx(e,[0,t],[e.shape[0],n]);case 3:return ym(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Xc(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new W(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function od(e,t,n,s){return K(()=>{switch(e.rank){case 1:return bm(e,t,n);case 2:switch(s){case 1:return Wa(e,t,n);case 2:return zm(e,t,n);default:throw new W(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Wa(e,t,n);case 2:return ym(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return zm(e,t,n);default:throw new W(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Wa(e,t,n);case 2:return Xc(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Xc(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return zm(e,t,n);default:throw new W(`The axis is not within the rank of the tensor ${s}`)}default:throw new W(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Mm(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),nn(e,t)}function Zx(e,t){switch(e.rank){case 1:return yA([e,t]);case 2:return xA([e,t],0);case 3:return kA([e,t],0);case 4:return SA([e,t],0);default:throw new W(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Bm(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new W(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return bs(e,t)}function id(e,t=0,n=1,s,r){return y_(e,t,n,s,r)}function xs(e,t,n,s){if(e.rank<2||t.rank<2)throw new Re(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new Re(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2){let r=!1,a=!1;return Zc.matMul({a:e,b:t,transposeA:r,transposeB:a,bias:s?Vm(e.rank,s,rs()):null,activation:n})}else{let r=e.shape.slice(),a=r.pop();e=H(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),u=o.pop(),c=[...o,i],l=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=H(Ke(t,l),[u,-1]);let d=[...r,...c],h=!1,p=!1;return H(Zc.matMul({a:e,b:t,transposeA:h,transposeB:p,bias:s?Vm(e.rank,s,rs()):null,activation:n}),d)}}function Jx(e,t,n){return K(()=>(Array.isArray(t)?t=bn(t,"int32"):t=de(t,"int32"),nx(e,t,n)))}function Zu(e){return B(e,e)}function Vm(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new W(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1,1,1]):H(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,1,1,s[0]]):H(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1,1]):H(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,1,s[0]]):H(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1]):H(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,s[0]]):H(t,[1].concat(s))}else if(e<3)return t;throw new W(`Unsupported input rank by biasAdd: ${t.rank}`)}function is(e,t,n){return K(()=>(n==null&&(n=rs()),Nt(n),oe(e,Vm(e.rank,t,n))))}function eP(e,t=1){if(t!==1)throw new Re(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return um(e)}function tP(e){return K(()=>Ie(e,oe(Kt(e),1)))}function ew(e,t,n,s){return K(()=>CR(e,t,n,s))}function nP(e){return K(()=>{let t=oe(.5,B(.2,e));return Wn(t,0,1)})}function Ju(e,t,n=!1){return n?e():t()}var sP=["fanIn","fanOut","fanAvg"],rP=["normal","uniform","truncatedNormal"];function aP(e){Ba(sP,"FanMode",e)}function oP(e){Ba(rP,"Distribution",e)}var jn=class extends ae.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Wm=class extends jn{apply(e,t){return Ft(e,t)}};Wm.className="Zeros";ae.registerClass(Wm);var ud=class extends jn{apply(e,t){return or(e,t)}};ud.className="Ones";ae.registerClass(ud);var Um=class extends jn{constructor(e){super();if(typeof e!="object")throw new W(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new W(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return K(()=>B(Te(this.value),or(e,t)))}getConfig(){return{value:this.value}}};Um.className="Constant";ae.registerClass(Um);var Gm=class extends jn{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return jc(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Gm.className="RandomUniform";ae.registerClass(Gm);var Hm=class extends jn{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Re(`randomNormal does not support dType ${t}.`);return id(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Hm.className="RandomNormal";ae.registerClass(Hm);var qm=class extends jn{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Re(`truncatedNormal does not support dType ${t}.`);return bx(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};qm.className="TruncatedNormal";ae.registerClass(qm);var jm=class extends jn{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return K(()=>{if(e.length!==2||e[0]!==e[1])throw new W("Identity matrix initializer can only be used for 2D square matrices.");return B(this.gain,tx(e[0]))})}getConfig(){return{gain:this.gain}}};jm.className="Identity";ae.registerClass(jm);function iP(e,t="channelsLast"){let n,s;if(Nt(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=dr(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=dr(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=dr(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var xn=class extends jn{constructor(e){super();if(e.scale<0)throw new W(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,aP(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,oP(this.distribution),this.seed=e.seed}apply(e,t){let n=iP(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Re(`${this.getClassName()} does not support dType ${t}.`);return bx(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return jc(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};xn.className="VarianceScaling";ae.registerClass(xn);var ld=class extends xn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return xn.className}};ld.className="GlorotUniform";ae.registerClass(ld);var cd=class extends xn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return xn.className}};cd.className="GlorotNormal";ae.registerClass(cd);var dd=class extends xn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return xn.className}};dd.className="HeNormal";ae.registerClass(dd);var hd=class extends xn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return xn.className}};hd.className="HeUniform";ae.registerClass(hd);var pd=class extends xn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return xn.className}};pd.className="LeCunNormal";ae.registerClass(pd);var fd=class extends xn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return xn.className}};fd.className="LeCunNormal";ae.registerClass(fd);var Km=class extends jn{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Re("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return K(()=>{if(e.length<2)throw new Re("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=id(n,0,1,"float32"),r=jD.gramSchmidt(s);return e[0]>e[1]&&(r=Ke(r)),B(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Km.className="Orthogonal";ae.registerClass(Km);var tw={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function nw(e,t={}){return Ku(e,ae.SerializationMap.getMap().classNameMap,t,"initializer")}function xt(e){return Em(e)}function ft(e){if(typeof e=="string"){let t=e in tw?tw[e]:e;if(t==="GlorotNormal")return new cd;if(t==="GlorotUniform")return new ld;if(t==="HeNormal")return new dd;if(t==="HeUniform")return new hd;if(t==="LeCunNormal")return new pd;if(t==="LeCunUniform")return new fd;{let n={};return n.className=t,n.config={},nw(n)}}else return e instanceof jn?e:nw(e)}function uP(){return new Wm}function lP(){return new ud}function cP(e){return new Um(e)}function dP(e){return new Gm(e)}function hP(e){return new Hm(e)}function pP(e){return new qm(e)}function fP(e){return new jm(e)}function mP(e){return new xn(e)}function gP(e){return new ld(e)}function bP(e){return new cd(e)}function yP(e){return new dd(e)}function vP(e){return new hd(e)}function xP(e){return new pd(e)}function wP(e){return new fd(e)}function kP(e){return new Km(e)}var IP={};$e(IP,{Layer:()=>Ue,RNN:()=>mr,RNNCell:()=>ol,activation:()=>nz,add:()=>dz,alphaDropout:()=>Kz,average:()=>hz,averagePooling1d:()=>pb,averagePooling2d:()=>fb,averagePooling3d:()=>mb,avgPool1d:()=>wz,avgPool2d:()=>Iz,avgPool3d:()=>Cz,avgPooling1d:()=>kz,avgPooling2d:()=>Sz,avgPooling3d:()=>Nz,batchNormalization:()=>yz,bidirectional:()=>Bz,concatenate:()=>pz,conv1d:()=>jL,conv2d:()=>KL,conv2dTranspose:()=>XL,conv3d:()=>YL,conv3dTranspose:()=>QL,convLstm2d:()=>Pz,convLstm2dCell:()=>Lz,cropping2D:()=>JL,dense:()=>sz,depthwiseConv2d:()=>tz,dot:()=>bz,dropout:()=>rz,elu:()=>VL,embedding:()=>cz,flatten:()=>oz,gaussianDropout:()=>jz,gaussianNoise:()=>qz,globalAveragePooling1d:()=>Tz,globalAveragePooling2d:()=>$z,globalMaxPool1d:()=>Wz,globalMaxPool2d:()=>Uz,globalMaxPooling1d:()=>pk,globalMaxPooling2d:()=>fk,gru:()=>Ez,gruCell:()=>_z,input:()=>TL,inputLayer:()=>BL,layerNormalization:()=>vz,leakyReLU:()=>UL,lstm:()=>Rz,lstmCell:()=>Dz,masking:()=>Xz,maxPool1d:()=>Gz,maxPool2d:()=>Hz,maxPooling1d:()=>mk,maxPooling2d:()=>gk,maxPooling3d:()=>Az,maximum:()=>fz,minimum:()=>mz,multiply:()=>gz,permute:()=>lz,prelu:()=>GL,reLU:()=>WL,repeatVector:()=>iz,reshape:()=>uz,rnn:()=>zz,separableConv2d:()=>ZL,simpleRNN:()=>Fz,simpleRNNCell:()=>Oz,softmax:()=>HL,spatialDropout1d:()=>az,stackedRNNCells:()=>Mz,thresholdedReLU:()=>qL,timeDistributed:()=>Vz,upSampling2d:()=>ez,zeroPadding2d:()=>xz});var SP=0;function sw(){return SP++}var md={};function gd(e=""){return e in md||(md[e]=0),md[e]+=1,e+md[e].toString()}function Xm(e){return Array.isArray(e)&&Array.isArray(e[0])}function bd(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function De(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new W(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function tt(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new W(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function yd(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var rw="Variable",CP=class{constructor(e,t="float32",n=rw,s=!0,r=null){this.dtype=t??"float32",this.shape=e.shape,this.id=sw(),n=n??rw,this.originalName=Xx(n),this.name=Yx(this.originalName),this.trainable_=s,this.constraint=r,this.val=mR(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),NP(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function NP(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Ym(e){return e.map(t=>t.read())}function Qm(e){e.forEach(t=>{t[0].write(t[1])})}var zt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},ws=class{constructor(e,t,n,s,r,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=o,this.id=sw(),a!=null&&(this.originalName=Xx(a),this.name=Yx(this.originalName)),this.rank=t.length}},TP=0,vd=class{constructor(e,t){this.callArgs=t,this.id=TP++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},$P=0,Ue=class extends ae.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=$P++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=zs(n)+"_"+gd(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new as(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new W(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return vn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return vn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ls(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ls(`Layer ${this.name} is not connected, no input to return.`);return vn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ls(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ls(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return vn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=dt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=dt(this.inputSpec);if(e.length!==t.length)throw new W(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new W(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new W(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new W(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new W(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let o=s.shape;for(let i in r.axes){let u=Number(i),c=r.axes[i],l=u>=0?o[u]:o[o.length+u];if(c!=null&&[c,null].indexOf(l)===-1)throw new W(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${c} but got shape ${o}.`)}}if(r.shape!=null)for(let o=0;o<r.shape.length;++o){let i=r.shape[o],u=s.shape[o];if(i!=null&&u!=null&&i!==u)throw new W(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=dt(e),s=!0;for(let a of n)if(!(a instanceof ws)){s=!1;break}let r=!0;for(let a of n)if(a instanceof ws){r=!1;break}if(s===r)throw new W("Arguments to apply() must be all SymbolicTensors or all Tensors");return Va(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of dt(e))a.push(o.shape);this.build(vn(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),o=dt(a),i=[];for(let u of o)n.indexOf(u)!==-1&&(u=u.clone()),i.push(u);if(a=vn(i),this.activityRegularizer!=null)throw new Re("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=AP(e),o=this.computeOutputShape(a),i,u=EP(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((c,l)=>new ws(u,c,this,dt(e),t,this.name,l)):i=new ws(u,o,this,dt(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new Re("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ls(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Ls(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new as(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return yd(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ym(e?this.trainableWeights:this.weights)}setWeights(e){K(()=>{let t=this.weights;if(t.length!==e.length)throw new W(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=Ym(t);for(let r=0;r<s.length;++r){let a=s[r],o=t[r],i=e[r];if(!x.arraysEqual(a.shape,i.shape))throw new W(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}Qm(n)})}addWeight(e,t,n,s,r,a,o,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new W(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=i!=null?i():ft("zeros"));let u=s.apply(t,n),c=new CP(u,n,e,a,o);return u.dispose(),r!=null&&this.addLoss(()=>r.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=dt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,o=null){let i=dt(e);t=dt(t),n=dt(n),s=dt(s),r=bd(r),a=bd(a);let u=[],c=[],l=[];for(let d of i)u.push(d.sourceLayer),c.push(d.nodeIndex),l.push(d.tensorIndex);new vd({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function AP(e){e=dt(e);let t=[];for(let n of e)t.push(n.shape);return vn(t)}function EP(e){return"float32"}function aw(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let o=s.inputTensors[a],i=s.inboundLayers[a],u=s.nodeIndices[a],c=aw(o,i,u);for(let l of c)r.indexOf(l)===-1&&r.push(l)}return r}}}var vi=class extends Ue{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:gd("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new W("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new W("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new W("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new ws(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new vd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new W(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};vi.className="InputLayer";ae.registerClass(vi);function ow(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new W("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new vi({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function Ua(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(r),s.push(o)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];Oe(s)}}function iw(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var uw;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(uw||(uw={}));var _P=125,el=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},RP=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},DP=class extends el{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let o=K(()=>oe(this.totals[s],B(r,n)));this.totals[s]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:K(()=>{let s=B(Ie(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),ms(t[n])}))}},FP=class extends el{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(r),n.push(o)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},OP=class extends el{constructor(e,t){super();if(this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||XD,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=_P),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");x.isNumber(this.yieldEvery)&&(this.maybeWait=PO(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await Ua(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ua(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Ua(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ua(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Ua(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):x.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Ua(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ua(e),await this.trainEnd(e))}};function lw(e,t){return e==null&&(e={}),e instanceof el?[e]:Array.isArray(e)&&e[0]instanceof el?e:dt(e).map(s=>new OP(s,t))}var ks=class{constructor(){}static registerCallbackConstructor(e,t){x.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),ks.checkForDuplicate(t),ks.constructors[e]==null&&(ks.constructors[e]=[]),ks.constructors[e].push(t)}static checkForDuplicate(e){for(let t in ks.constructors)ks.constructors[+t].forEach(s=>{if(s===e)throw new W("Duplicate callback constructor.")})}static clear(){ks.constructors={}}static createCallbacks(e){let t=[];for(let n in ks.constructors){let s=+n;e>=s&&t.push(...ks.constructors[s])}return t.map(n=>new n)}},cw=ks;cw.constructors={};function dw(e,t,n,s,r,a,o,i,u){let c=new FP,l=[new DP,...cw.createCallbacks(t)];e!=null&&l.push(...e),l.push(c);let d=new RP(l);return d.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:u}),{callbackList:d,history:c}}function Is(e,t={},n=!1){return Ku(e,ae.SerializationMap.getMap().classNameMap,t,"layer",n)}function xd(e,t){return K(()=>{e.dtype!=="float32"&&(e=de(e,"float32"));let n=xe(Zu(e),t,!0),s=Gc(n.shape,Ot()),r=gn(Oa(n,s));return Ie(e,r)})}function Ga(e,t){return K(()=>$t(Zu(ge(t,e)),-1))}function wd(e,t){return K(()=>$t(Kt(ge(t,e)),-1))}function xi(e,t){return K(()=>{let n=ge(e,t),s=Wn(Kt(e),Ot(),Number.MAX_VALUE),r=Kt(Ie(n,s));return B(100,$t(r,-1))})}function PP(e,t){return K(()=>{let n=Wn(t,Ot(),Number.MAX_VALUE),s=ts(oe(1,n)),r=Wn(e,Ot(),Number.MAX_VALUE),a=ts(oe(1,r));return $t(Zu(ge(s,a)),-1)})}function LP(e,t){return K(()=>{let n=Oa(0,ge(1,B(e,t)));return $t(Zu(n),-1)})}function zP(e,t){return K(()=>{let n=Oa(0,ge(1,B(e,t)));return $t(n,-1)})}function MP(e,t){return K(()=>{let n=xe(B(e,t),-1),s=Os(B(ge(1,e),t),-1);return Oa(0,oe(1,ge(s,n)))})}function BP(e,t){return K(()=>{let n=Math.log(2),s=ge(t,e),r=ge(oe(s,Hc(B(-2,s))),n);return $t(r,-1)})}function tl(e,t,n=!1){return K(()=>{if(n)t=mx(t);else{let s=xe(t,t.shape.length-1,!0);t=Ie(t,s)}return t=Wn(t,Ot(),1-Ot()),Ct(xe(B(de(e,"float32"),ts(t)),t.shape.length-1))})}function kd(e,t,n=!1){return K(()=>{let s=de(lm(ZO(e)),"int32");t=Wn(t,Ot(),1-Ot());let r=t.shape,a=H(Kf(s,r[r.length-1]),r);return tl(a,t,n)})}function VP(e,t){if(!x.arraysEqual(e.shape,t.shape))throw new W(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return K(()=>{let n=ir(t),s=Ct(Kt(t));return oe(ge(n,B(t,e)),ax(es(s)))})}function Id(e,t){return K(()=>{let n;return n=Wn(t,Ot(),1-Ot()),n=ts(Ie(n,ge(1,n))),$t(VP(e,n),-1)})}function WP(e,t){return K(()=>{let n=Wn(e,Ot(),1),s=Wn(t,Ot(),1);return xe(B(e,ts(Ie(n,s))),-1)})}function UP(e,t){return K(()=>{let n=ts(oe(Ot(),t));return $t(ge(t,B(e,n)),-1)})}function Zm(e,t){return K(()=>{let n=xd(e,-1),s=xd(t,-1),r=B(n,s);return Ct(xe(r,-1))})}var Sd={meanSquaredError:Ga,meanAbsoluteError:wd,meanAbsolutePercentageError:xi,meanSquaredLogarithmicError:PP,squaredHinge:LP,hinge:zP,categoricalHinge:MP,logcosh:BP,categoricalCrossentropy:tl,sparseCategoricalCrossentropy:kd,binaryCrossentropy:Id,kullbackLeiblerDivergence:WP,poisson:UP,cosineProximity:Zm};function Jm(e){if(typeof e=="string"){if(e in Sd)return Sd[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new W(t)}else return e}function eg(e,t){return K(()=>{let n=B(.5,ns(t)),s=ad(Gn(t,n),e.dtype);return $t(Jn(e,s),-1)})}function tg(e,t){return K(()=>ad(Jn(Vc(e,-1),Vc(t,-1)),"float32"))}function hw(e,t){return K(()=>de(xe(Ps(Jn(e,1),Jn(t,1))),"float32"))}function GP(e,t){return K(()=>de(xe(Ps(Jn(e,1),Jn(t,0))),"float32"))}function HP(e,t){return K(()=>de(xe(Ps(Jn(e,0),Jn(t,1))),"float32"))}function pw(e,t){return K(()=>{let n=hw(e,t),s=HP(e,t),r=oe(n,s);return de(Cn(Gn(r,0),Ie(n,r),0),"float32")})}function qP(e,t){return K(()=>{let n=hw(e,t),s=GP(e,t),r=oe(n,s);return de(Cn(Gn(r,0),Ie(n,r),0),"float32")})}function fw(e,t){return Id(e,t)}function mw(e,t){return e.rank===t.rank&&(e=Yc(e,[e.rank-1])),t=Vc(t,-1),t.dtype!==e.dtype&&(t=de(t,e.dtype)),de(Jn(e,t),"float32")}var jP=Ga,KP=Ga,XP=wd,YP=wd,QP=xi,ZP=xi,ng=tl,JP=Zm,gw=kd,Cd={binaryAccuracy:eg,categoricalAccuracy:tg,precision:pw,categoricalCrossentropy:ng,sparseCategoricalCrossentropy:gw,mse:jP,MSE:KP,mae:XP,MAE:YP,mape:QP,MAPE:ZP,cosine:JP};function eL(e){if(typeof e=="string"&&e in Cd)return Cd[e];if(typeof e!="string"&&e!=null)return e;throw new W(`Unknown metric ${e}`)}function Nd(e){if(vs(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(Sd))if(Sd[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(Cd))if(Cd[n]===e){t=n;break}return t!==void 0?t:e.name}}function tL(e){let t={Adagrad:()=>gi.adagrad(.01),Adadelta:()=>gi.adadelta(1,.95,Ot()),Adam:()=>gi.adam(.001,.9,.999,Ot()),Adamax:()=>gi.adamax(.002,.9,.999,Ot(),0),RMSProp:()=>gi.rmsprop(.001,.9,0,Ot()),SGD:()=>gi.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new W(`Unknown Optimizer ${e}`)}var bw=1*1024*1024;function yw(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!sg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>bw&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${bw}.`)}}function sg(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!sg(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!sg(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function nL(e,t,n,s=console.log){let r=rL(e),a=["Layer (type)","Output shape","Param #"];r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(l=>Math.floor(t*l)));let o;if(!r){a.push("Receives inputs"),o=[];for(let l in e.nodesByDepth)o.push(...e.nodesByDepth[l])}s("_".repeat(t)),Td(a,n,s),s("=".repeat(t));let i=e.layers;for(let l=0;l<i.length;++l)r?aL(i[l],n,s):oL(i[l],n,o,s),s((l===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let u=sL(e),c=yd(e.nonTrainableWeights);s(`Total params: ${u+c}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function sL(e){let t;return e.collectedTrainableWeights!=null?t=yd(e.collectedTrainableWeights):t=yd(e.trainableWeights),t}function rL(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let o of r.inboundNodes)if(s.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function Td(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function aL(e,t,n){let s;try{s=JSON.stringify(e.outputShape)}catch{s="multiple"}let r=e.name,a=e.getClassName(),o=[`${r} (${a})`,s,e.countParams().toString()];Td(o,t,n)}function oL(e,t,n,s){let r;try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}let a=[];for(let l of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(l)===-1))for(let d=0;d<l.inboundLayers.length;++d){let h=l.inboundLayers[d].name,p=l.nodeIndices[d],f=l.tensorIndices[d];a.push(`${h}[${p}][${f}]`)}let o=e.name,i=e.getClassName(),u=a.length===0?"":a[0],c=[`${o} (${i})`,r,e.countParams().toString(),u];Td(c,t,s);for(let l=1;l<a.length;++l)Td(["","","",a[l]],t,s)}function vw(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function $d(e,t){if(e===null)return null;if(typeof e=="string")return Ma(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];vw(t,r,a)?n.push(a):n.push($d(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=Ma(s);n[a]=$d(r,a)}}return n}}function rg(e,t){if(e==null)return null;if(typeof e=="string")return zs(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];vw(t,r,a)?n.push(a):n.push(rg(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=zs(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=rg(r,s)}return n}}var xw="0.0.0";function iL(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return de(t,e.dtype)}catch{throw new W(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var Ha=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Ha)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=iL(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new W(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ws){if(this.id2Value[e.id]==null)throw new W(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new W(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ws){if(this.id2Value[e.id]==null)throw new W(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new W(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Oe(this.id2Mask)}},ag={},ww={};function nl(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),u=[],c=t.names();for(let f of i)c.indexOf(f)!==-1?u.push(t.getValue(f)):u.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let l=i.join(",")+"|"+t.names().join(","),d,h;if(ag[l]==null){let f=uL(o,t);d=f.sorted,h=f.recipientCounts,ag[l]=d,ww[l]=h}d=ag[l],h={},r||Object.assign(h,ww[l]);let p=new Ha(t);for(let f=0;f<d.length;++f){if(s!=null){let _=tm().numTensors;_>s.maxNumTensors&&(s.maxNumTensors=_),_<s.minNumTensors&&(s.minNumTensors=_)}let m=d[f],g=m.sourceLayer;if(g instanceof vi)continue;let b=[],v=[],y=[],w=!1;for(let _ of m.inputs){let O=p.getValue(_),R=p.getMask(_);b.push(O),v.push(R),R!=null&&(w=!0),r||(h[_.name]--,h[_.name]===0&&!t.hasKey(_)&&i.indexOf(_.name)===-1&&!O.isDisposed&&_.sourceLayer.stateful!==!0&&y.push(O))}w&&(n=n||{},n.mask=v[0]);let k=dt(g.apply(b,n)),S=null;g.supportsMasking&&(S=g.computeMask(b,v));let N=cL(m),A=Array.isArray(N)?N:[N];for(let _=0;_<A.length;++_){p.hasKey(A[_])||p.add(A[_],k[_],Array.isArray(S)?S[0]:S);let O=i.indexOf(A[_].name);O!==-1&&(u[O]=k[_])}r||Oe(y)}return p.disposeMasks(),a?u:u[0]}function uL(e,t){x.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=kw(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:o,recipientMap:i}=kw(a,t);for(let u of o)r.has(u.name)||(n.push(u),r.add(u.name));for(let u in i)s[u]==null&&(s[u]=new Set),i[u].forEach(c=>s[u].add(c))}}return{sorted:n,recipientCounts:lL(s)}}function lL(e){let t={};for(let n in e)t[n]=e[n].size;return t}function kw(e,t){let n=new Set,s=[],r={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let u=o[o.length-1]===a.length-1;if(i.inputs.length===0||u)a.pop(),s.push(i),n.add(i.name),u&&o.pop();else{o.push(a.length-1);for(let c of i.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(i.name),!n.has(c.name)&&a.push(c)}}return{sorted:s,recipientMap:r}}function cL(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var Ss=class extends Ue{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=gd(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],cr(this.inputs).length!==this.inputs.length)throw new W(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);cr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let v=b.sourceLayer,y=b.nodeIndex,w=b.tensorIndex;this.outputLayers.push(v),this.outputLayersNodeIndices.push(y),this.outputLayersTensorIndices.push(w)}for(let b of this.inputs){let v=b.sourceLayer,y=b.nodeIndex,w=b.tensorIndex;vs(y===0,"input layer has >1 nodes"),vs(w===0,"input layer has >1 tensors"),this.inputLayers.push(v),this.inputLayersNodeIndices.push(y),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let v=this.inputLayers[b];if(!(v instanceof vi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${v.getClassName()}.`);this.inputNames.push(v.name),this.feedInputShapes.push(v.batchInputShape),this.feedInputNames.push(v.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let t={},n={},s={},r={},a={},o=[],i=(b,v,y,w,k,S)=>{(w==null||k==null||S==null)&&(w=b.sourceLayer,k=b.nodeIndex,S=b.tensorIndex);let N=w.inboundNodes[k];if(y.indexOf(N)!==-1)throw new as(`The tensor ${b.name} at layer "${w.name}" is part of a cycle.`);if(v.indexOf(N)!==-1)return;this.containerNodes.add(Ss.nodeKey(w,k)),w.id in a||(a[w.id]=Object.keys(a).length),y.indexOf(N)===-1&&y.push(N);let A=N.inboundLayers.length;for(let _=0;_<A;_++){let O=N.inputTensors[_],R=N.inboundLayers[_],D=N.nodeIndices[_],C=N.tensorIndices[_];i(O,v,y,R,D,C)}for(v.push(N);y.indexOf(N)>=0;)y.splice(y.indexOf(N),1);o.push(N)},u=[],c=[];for(let b of this.outputs)i(b,u,c);let l=o.slice().reverse();for(let b of l){n[b.id]=b,b.id in t||(t[b.id]=0);let v=t[b.id],y=s[b.outboundLayer.id]==null?0:s[b.outboundLayer.id];v=Math.max(v,y),s[b.outboundLayer.id]=v,r[b.outboundLayer.id]=b.outboundLayer,t[b.id]=v;for(let w=0;w<b.inboundLayers.length;w++){let k=b.inboundLayers[w],S=b.nodeIndices[w],N=k.inboundNodes[S],A=t[N.id]==null?0:t[N.id];t[N.id]=Math.max(v+1,A),n[N.id]=N}}let d={};for(let b in t){let v=t[b];v in d||(d[v]=[]),d[v].push(n[b])}let h={};for(let b in s){let v=s[b];v in h||(h[v]=[]),h[v].push(r[b])}let p=Object.keys(h).map(b=>parseInt(b,10)).sort(rd);this.layers=[];for(let b of p){let v=h[b];v.sort((y,w)=>{let k=a[y.id],S=a[w.id];return k<S?-1:k>S?1:0});for(let y of v)y instanceof Ss&&this.internalContainerRefs.push(y),this.layers.push(y)}this.layersByDepth=h,p=Object.keys(d).map(b=>parseInt(b,10)).sort(rd);let f=this.inputs.slice(),m=[];for(let b of p)for(let v of d[b]){let y=v.outboundLayer;if(y!=null){for(let w of v.inputTensors)if(f.indexOf(w)===-1)throw new as(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${y.name}". The following previous layers were accessed without issue: ${m}`);for(let w of v.outputTensors)f.push(w);m.push(y.name)}}this.nodesByDepth=d;let g=this.layers.map(b=>b.name);for(let b of g){let v=g.filter(y=>y===b).length;if(v!==1)throw new as(`The name "${b}" is used ${v} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new vd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new W("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new W(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,s++}let r=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)r.push([n[o],e[a]]);else if(t)throw new W(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new W(`${a.length} of ${s} weights are not set: ${a}`)}Qm(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${xw}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=rg(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return K(()=>{e=dt(e);let n=new Ha;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return nl(this.outputs,n,t)})}computeMask(e,t){return K(()=>{e=dt(e);let n;return t==null?n=za(null,e.length):n=dt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=bd(e);if(t.length!==this.inputLayers.length)throw new W(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],u=t[o],c=i.name+"_0_0";n[c]=u}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(rd);if(s.length>1)for(let o of s){let i=this.nodesByDepth[o];for(let u of i){let c=u.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(c.id)!==-1)continue;let l=[];for(let f=0;f<u.inboundLayers.length;f++){let m=u.inboundLayers[f],g=u.nodeIndices[f],b=u.tensorIndices[f],v=`${m.name}_${g}_${b}`,y=n[v];l.push(y)}let d=c.computeOutputShape(vn(l)),h=bd(d),p=c.inboundNodes.indexOf(u);for(let f=0;f<h.length;f++){let m=`${c.name}_${p}_${f}`;n[m]=h[f]}}}let r=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],u=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],l=`${i.name}_${u}_${c}`;a.push(l)}for(let o=0;o<a.length;o++){let i=a[o];vs(i in n),r.push(n[i])}return vn(r)}runInternalGraph(e,t){t==null&&(t=za(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let u=this.inputs[i],c=e[i],l=t[i];n[u.id]=[c,l]}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(rd);for(let i of s){let u=this.nodesByDepth[i];for(let c of u){let l=c.outboundLayer,d=c.inputTensors,h=c.outputTensors,p=new Array;for(let f of d)f.id in n&&p.push(n[f.id]);if(p.length===d.length){let f={},m,g,b,v;if(c.callArgs!=null&&(f=c.callArgs),p.length===1){let[y,w]=p[0];f.mask==null&&(f.mask=w),b=dt(l.call(y,f)),v=dt(l.computeMask(y,w)),m=[y],g=[w]}else m=p.map(y=>y[0]),g=p.map(y=>y[1]),f.mask==null&&(f.mask=g),b=dt(l.call(m,f)),v=dt(l.computeMask(m,g));if(l.activityRegularizer)throw new Re("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let y=0;y<h.length;++y){let w=h[y],k=b[y],S=v[y];n[w.id]=[k,S]}}}}let r=[],a=[],o=[];for(let i of this.outputs){vs(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[u,c]=n[i.id];o.push(u.shape),r.push(u),a.push(c)}return[r,a,o]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof Ss?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=Ss.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new W(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new W("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new W(`No such layer: ${e}`)}calculateLosses(){return K(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=Ss.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),u=[];for(let l=0;l<a.inboundNodes.length;l++){let d=a.inboundNodes[l],h=Ss.nodeKey(a,l),p={};if(this.containerNodes.has(h)){if(d.callArgs)try{JSON.stringify(d.callArgs),p=d.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),p={}}if(d.inboundLayers.length>0){let f=[];for(let m=0;m<d.inboundLayers.length;m++){let g=d.inboundLayers[m],b=d.nodeIndices[m],v=d.tensorIndices[m],y=Ss.nodeKey(g,b),w=t[y];w==null&&(w=0),f.push([g.name,w,v,p])}u.push(f)}}}let c={};c.name=a.name,c.className=o,c.config=i,c.inboundNodes=u,n.push(c)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],u=Ss.nodeKey(o,i);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let l=this.inputLayersTensorIndices[a];s.push([o.name,c,l])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],u=Ss.nodeKey(o,i);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let l=this.outputLayersTensorIndices[a];r.push([o.name,c,l])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let b=[],v;for(let y of g){let w=y[0],k=y[1],S=y[2];if(v=y[3]==null?{}:y[3],!(w in r)){o(m,g);return}let N=r[w];if(N.inboundNodes.length<=k){o(m,g);return}let A=N.inboundNodes[k];b.push(A.outputTensors[S])}b.length>0&&m.apply(vn(b),v)}function u(m){let g=m.name,b=Is(m,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(s),r[g]=b,m.inboundNodes.forEach(y=>{if(!(y instanceof Array))throw new W(`Corrupted configuration, expected array for nodeData: ${y}`);o(b,y)})}let c=t.name,l=t.layers;for(let m of l)u(m);for(;!OO(a);)for(let m of l){let g=r[m.name];if(g.name in a){let b=a[g.name];delete a[g.name];for(let v of b)i(g,v)}}let d=[],h=[],p=t.inputLayers;for(let m of p){let g=m[0],b=m[1],v=m[2];vs(g in r);let w=r[g].inboundNodes[b].outputTensors;d.push(w[v])}let f=t.outputLayers;for(let m of f){let g=m[0],b=m[1],v=m[2];vs(g in r);let w=r[g].inboundNodes[b].outputTensors;h.push(w[v])}return new e({inputs:d,outputs:h,name:c})}get stateful(){if(this._stateful)throw new W("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){K(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function dL(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function Iw(e,t){return dL(e,t,"classWeight")}async function Sw(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=K(()=>{if(e.shape.length===1)return Ea(e);if(e.shape.length===2){if(e.shape[1]>1)return Vc(e,1);if(e.shape[1]===1)return H(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());Oe(r);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),bn(o,"float32")}else return null}function hL(e,t){return B(e,t)}var pL=32;function Cw(e,t){let n,s,r=t;n=r.xs,s=r.ys,x.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=Nw("input",e.inputNames,n),o=Nw("output",e.outputNames,s),i=a[0].shape[0];x.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),x.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let u=0;u<a.length;u++)x.assert(a[u].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let u=0;u<o.length;u++)x.assert(o[u].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[u]} has ${o[u].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function Nw(e,t,n){if(n instanceof yt)return[n];if(Array.isArray(n))return x.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new W(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function fL(e){if(e.length===3)throw new Re("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function mL(e,t,n){let s=n.batchesPerEpoch!=null;if(x.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),x.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),x.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),x.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),x.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,o;if(r)if(Tw(n.validationData))x.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=fL(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),u=e.getDedupedMetricsNames(),c;r?c=u.slice().concat(u.map(g=>"val_"+g)):c=u.slice();let l=lw(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:h,history:p}=dw(l,d,n.epochs,null,null,gL(t,n),null,r,c);h.setModel(e),e.history=p,await h.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await h.onEpochBegin(f);let b=0,v=0;for(s||(m=await t.iterator());s?b<n.batchesPerEpoch:!0;){let y=await m.next();if(s&&y.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(y.value!=null){let{xs:w,ys:k}=Cw(e,y.value),S={};S.batch=v,S.size=w[0].shape[0],await h.onBatchBegin(v,S);let N=[];if(n.classWeight!=null){let O=Iw(n.classWeight,e.outputNames);for(let R=0;R<O.length;++R)N.push(await Sw(k[R],null,O[R]))}let A=w.concat(k).concat(N),_=i(A);Oe(A);for(let O=0;O<u.length;++O){let R=u[O],D=_[O];S[R]=D,ms(D)}await h.onBatchEnd(v,S),iw(S),v++,b++}if(s?b>=n.batchesPerEpoch:y.done){if(r){let w;Tw(n.validationData)?w=dt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):w=dt(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?pL:n.validationBatchSize,verbose:0}));for(let k=0;k<e.metricsNames.length;++k)g[`val_${e.metricsNames[k]}`]=w[k]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,g),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function gL(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function Tw(e){return typeof e.iterator=="function"}function bL(e){return typeof e.next=="function"}async function yL(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new Re("Verbose mode is not implemented yet.");x.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=bL(t)?t:await t.iterator(),i=0,u=0;for(;s?u<n.batches:!0;){let c=await o.next();if(a=K(()=>{if(c.value){let{xs:l,ys:d}=Cw(e,c.value),h=l.concat(d),p=K(()=>r(h));if(Oe(h),u===0)for(let m=0;m<p.length;++m)a.push(Te(0));let f=h[0].shape[0];for(let m=0;m<p.length;++m){let g=p[m],b=a[m];a[m]=K(()=>oe(a[m],B(f,g))),u>0&&Oe(b)}Oe(p),i+=f,++u}return a}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<a.length;++c){let l=a[c];a[c]=Ie(a[c],i),Oe(l)}return vn(a)}function og(e){x.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function sl(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>Wa(s,t,n-t)):Wa(e,t,n-t)}function ig(e,t){return K(()=>e==null?null:Array.isArray(e)?e.map(n=>ig(n,t)):Jx(e,t.dtype==="int32"?t:de(t,"int32")))}function ug(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function vL(e,t,n,s,r,a,o,i,u,c,l,d,h,p,f){r==null&&(r=32),a==null&&(a=1),l==null&&(l=!0),h==null&&(h=0);let m=!1;if(u!=null&&c!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new W("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,p,"steps_per_epoch"),b;g!=null&&(b=os(0,g)),o==null&&(o=1);let{callbackList:v,history:y}=dw(i,o,a,h,g,p,r,m,d);v.setModel(e),e.history=y,await v.onTrainBegin(),e.stopTraining_=!1;for(let w=h;w<a;++w){await v.onEpochBegin(w);let k={};if(p!=null)throw new Re("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new Re("batch shuffling is not implemneted yet");l&&x.shuffle(b);let S=bn(b),N=ug(g,r);for(let A=0;A<N.length;++A){let _={};if(await v.onBatchBegin(A,_),K(()=>{let O=N[A][0],R=N[A][1],D=Wa(S,O,R-O);_.batch=A,_.size=R-O;let C=ig(n,D),P=t(C);for(let V=0;V<s.length;++V){let G=s[V],U=P[V];_[G]=U,ms(U)}if(A===N.length-1&&m){let V=e.testLoop(u,c,r);for(let G=0;G<s.length;++G){let U=s[G],q=V[G];ms(q),k["val_"+U]=q}}}),await v.onBatchEnd(A,_),iw(_),e.stopTraining_)break}S.dispose()}if(await v.onEpochEnd(w,k),e.stopTraining_)break}return await v.onTrainEnd(),await e.history.syncData(),e.history}async function xL(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,o,i,u,c,l;try{let d=s.batchSize==null?32:s.batchSize;og(d);let h=!1,p=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,h,d);r=p[0],a=p[1],l=p[2];let f=!1,m;if(s.validationData!=null&&s.validationData.length>0){if(f=!0,s.validationData.length===2)o=s.validationData[0],i=s.validationData[1];else throw s.validationData.length===3?new Re("validationData including sample weights is not supported yet."):new W(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let N=!0,A=await e.standardizeUserData(o,i,null,null,N,d);u=A[0],c=A[1],m=u.concat(c)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){f=!0;let N=Math.floor(r[0].shape[0]*(1-s.validationSplit)),A=r[0].shape[0];u=sl(r,N,A),r=sl(r,0,N),c=sl(a,N,A),a=sl(a,0,N),m=u.concat(c)}else s.validationSteps!=null&&(f=!0);let g=r.concat(a).concat(l);e.checkTrainableWeightsConsistency();let b=e.makeTrainFunction(),v=e.getDedupedMetricsNames(),y,w;f?(e.makeTestFunction(),y=e.testFunction,w=v.slice().concat(v.map(N=>"val_"+N))):(y=null,m=[],w=v.slice());let k=lw(s.callbacks,s.yieldEvery);return await vL(e,b,g,v,d,s.epochs,s.verbose,k,y,m,s.shuffle,w,s.initialEpoch,null,null)}finally{e.isTraining=!1,qa(r,t),qa(a,n),qa(u,o),qa(c,i),l!=null&&Oe(l)}}function $w(e){let t=[];e instanceof yt&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(Qu(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function qa(e,t){if(e==null)return;let n=[];if(t instanceof yt)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof yt)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function wL(e){return e instanceof yt}function lg(e){return Array.isArray(e)}function Aw(e){return!wL(e)&&!lg(e)}function Ew(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(lg(e)&&e.length>0)o=!0;else if(Aw(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new W(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if(Aw(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new W(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(lg(e)){if(e=e,e.length!==t.length)throw new W(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new W(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=$w(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new W(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let u=0;u<n[o].length;++u){if(u===0&&!s)continue;let c=i.shape[u],l=n[o][u];if(l!=null&&l>=0&&c!==l)throw new W(`${r} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function kL(e,t,n){let s=cr(e.map(a=>a.shape[0]));s.sort();let r=cr(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new W(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new W(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!x.arraysEqual(s,r))throw new W(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function IL(e,t,n){let s=[Ga,Id,tl];for(let r=0;r<e.length;++r){let a=e[r],o=t[r],i=n[r];if(o!=null){if(o===tl&&a.shape[a.shape.length-1]===1)throw new W(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){let u=a.shape.slice(1),c=i.slice(1);for(let l=0;l<u.length;++l){let d=u[l],h=c[l];if(h!=null&&d!==h)throw new W(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function _w(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new W(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new W(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new W(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let u=0;u<n[o].length;++u){if(u===0&&!s)continue;let c=i.shape[u],l=n[o][u];if(l!=null&&l!==c)throw new W(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function SL(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var CL="layers-model",wi=class extends Ss{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new W("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");nL(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=tL(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof lr))throw new W("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new W(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Jm(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new W(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>Jm(o))}else{let a=Jm(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Va("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=SL(e.metrics,this.outputNames),r=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};Va("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=s[a];(u=>{let c="",l,d,h;for(let p of u){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===Id?["accuracy","acc"].indexOf(p)!==-1?d=eg:["crossentropy","ce"].indexOf(p)!==-1&&(d=fw):this.lossFunctions[a]===kd?["accuracy","acc"].indexOf(p)!==-1?d=mw:["crossentropy","ce"].indexOf(p)!==-1&&(d=gw):["accuracy","acc"].indexOf(p)!==-1?d=tg:["crossentropy","ce"].indexOf(p)!==-1&&(d=ng);let g;["accuracy","acc"].indexOf(p)!==-1?g="acc":["crossentropy","ce"].indexOf(p)!==-1&&(g="ce"),h=d,l=c+g}else h=eL(p),l=c+Nd(p);let f;Va(l,()=>{f=h}),r(a,l,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;og(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,u=this.testLoop(i,o,s,n.verbose,n.steps);return vn(u)}finally{qa(a[0],e),qa(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),yL(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new W(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new W(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new W("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new Ha;if(e instanceof yt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new W(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let u=e[i.name];if(u==null)throw new W(`No value is provided for the model's input ${i.name}`);a.add(i,u)}let o=nl(r,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=za(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=r[i],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new W(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return K(()=>{let s=this.checkNumSamples(e);if(n)throw new Re("Verbose predictLoop() is not implemented yet.");let r=ug(s,t),a=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)K(()=>{let u=r[o][0],c=r[o][1],l=sl(e,u,c),d=[];if(Array.isArray(l))for(let p=0;p<l.length;++p)d.push({key:this.inputs[p],value:l[p]});else d.push({key:this.inputs[0],value:l});let h=new Ha(d);return nl(this.outputs,h)}).forEach((u,c)=>a[c].push(u));return vn(a.map(o=>nn(o,0)))})}predict(e,t={}){let n=$w(e);_w(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return og(s),this.predictLoop(n,s)}finally{qa(n,e)}}predictOnBatch(e){_w(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new as("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===kd?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=Ew(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Ew(t,this.feedOutputNames,r,!1,"target"),kL(e,t,null),IL(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!=0)throw new W(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let u=null;if(s!=null){let c=Iw(s,this.outputNames);u=[];for(let l=0;l<c.length;++l)u.push(await Sw(i[l],null,c[l]))}return[o,i,u]}testLoop(e,t,n,s=0,r){return K(()=>{let a=this.checkNumSamples(t,n,r,"steps"),o=[];if(s>0)throw new Re("Verbose mode is not implemented yet.");if(r!=null)throw new Re("steps mode in testLoop() is not implemented yet");{let i=ug(a,n),u=bn(os(0,a));for(let c=0;c<i.length;++c){let l=i[c][0],d=i[c][1],h=Wa(u,l,d-l),p=ig(t,h),f=e(p);if(c===0)for(let m=0;m<f.length;++m)o.push(Te(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=oe(o[m],B(d-l,g))}}for(let c=0;c<o.length;++c)o[c]=Ie(o[c],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;Wx(e,s)>1&&(r+=`_${Wx(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let l=[];for(let f=0;f<this.inputs.length;++f)l.push({key:this.inputs[f],value:n[f]});let d=new Ha(l),h=nl(this.outputs,d,{training:!0}),p;for(let f=0;f<this.lossFunctions.length;++f){let g=this.lossFunctions[f](s[f],h[f]);r[f]!=null&&(g=hL(g,r[f]));let b=$t(g);t.push(b),f===0?p=g:p=oe(p,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],b=this.metricsTensors[f][1];m=$t(g(s[b],h[b]))}ms(m),a.push(m)}return p=$t(p),this.calculateLosses().forEach(f=>{p=oe(p,f)}),p},i=this.collectedTrainableWeights.map(l=>l.read()),u=!0;return[this.optimizer_.minimize(o,u,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>K(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:s[u]});let o=new Ha(a),i=nl(this.outputs,o);for(let u=0;u<this.lossFunctions.length;++u){let c=this.lossFunctions[u],l=$t(c(r[u],i[u]));u===0?n=l:n=oe(n,l),t.push(n)}for(let u=0;u<this.metricsTensors.length;++u){let c=this.metricsTensors[u][0],l=this.metricsTensors[u][1],d=$t(c(r[l],i[l]));t.push(d)}return t})}async fit(e,t,n={}){return xL(this,e,t,n)}async fitDataset(e,t){return mL(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],o=this.makeTrainFunction()(s.concat(r)),i=[];for(let u of o){let c=await u.data();i.push(c[0])}return Oe(o),vn(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=tm().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-tm().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=zs(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>zs(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=zs(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[zs(Nd(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>zs(Nd(e)));{let e={};for(let t in this.metrics)e[t]=zs(Nd(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=$d(e.optimizer_config),n=Is(t),s;if(typeof e.loss=="string")s=Ma(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>Ma(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=Ma(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>Ma(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=Ma(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let u=ui.getSaveHandlers(e);if(u.length===0)throw new W(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new W(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new W("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await ui.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,o={modelTopology:this.toJSON(r,s),format:CL,generatedBy:`TensorFlow.js tfjs-layers v${xw}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let u="optimizer",{data:c,specs:l}=await ui.encodeWeights(await this.optimizer.getWeights(),u);n.specs.push(...l),n.data=ui.concatenateArrayBuffers([n.data,c])}if(this.userDefinedMetadata!=null){let u=!0;yw(this.userDefinedMetadata,this.name,u),o.userDefinedMetadata=this.userDefinedMetadata}return o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){yw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};wi.className="Model";ae.registerClass(wi);var Rw=class extends wi{};Rw.className="Functional";ae.registerClass(Rw);async function NL(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=$d(n),r=Is(s,t);if(e.weightsManifest!=null){let a=await ui.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(i=>i.originalName)),o={};for(let i of r.weights)o[i.originalName]=a[i.originalName];r.loadWeights(o),Oe(a)}return r}var cg=class extends wi{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:gd("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new W(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof cg||e instanceof wi,n;if(t){if(n=e,n.outputs.length!==1)throw new W("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new W("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new W("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=ow({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new W(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new W("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=aw(this.outputs[0])}this.inboundNodes=[],new vd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:za(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(tt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new wi({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new as("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new as("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new as("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new as("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new W("Legacy serialization format not supported yet.");r=t}else x.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof cg))throw new Re(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of r){let c=Is(i,void 0,s);s&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(e){if(this.model==null)throw new W("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new W("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},Dw=cg;Dw.className="Sequential";ae.registerClass(Dw);function TL(e){return ow(e)}var wn=class extends ae.Serializable{getConfig(){return{}}},Fw=class extends wn{apply(e,t=1){return eP(e,t)}};Fw.className="elu";ae.registerClass(Fw);var Ow=class extends wn{apply(e){return O_(e)}};Ow.className="selu";ae.registerClass(Ow);var Pw=class extends wn{apply(e){return ir(e)}};Pw.className="relu";ae.registerClass(Pw);var Lw=class extends wn{apply(e){return K(()=>hm(6,ir(e)))}};Lw.className="relu6";ae.registerClass(Lw);var zw=class extends wn{apply(e){return e}};zw.className="linear";ae.registerClass(zw);var Mw=class extends wn{apply(e){return ar(e)}};Mw.className="sigmoid";ae.registerClass(Mw);var Bw=class extends wn{apply(e){return nP(e)}};Bw.className="hardSigmoid";ae.registerClass(Bw);var Vw=class extends wn{apply(e){return Hc(e)}};Vw.className="softplus";ae.registerClass(Vw);var Ww=class extends wn{apply(e){return tP(e)}};Ww.className="softsign";ae.registerClass(Ww);var Uw=class extends wn{apply(e){return Uc(e)}};Uw.className="tanh";ae.registerClass(Uw);var dg=class extends wn{apply(e,t=-1){return mx(e,t)}};dg.className="softmax";ae.registerClass(dg);var Gw=class extends wn{apply(e,t=-1){return $E(e,t)}};Gw.className="logSoftmax";ae.registerClass(Gw);var Hw=class extends wn{apply(e,t=1){return K(()=>B(ar(B(e,t)),e))}};Hw.className="swish";ae.registerClass(Hw);var qw=class extends wn{apply(e){return K(()=>B(e,Uc(Hc(e))))}};qw.className="mish";ae.registerClass(qw);function pr(e){return e.getClassName()}function hg(e,t={}){return Ku(e,ae.SerializationMap.getMap().classNameMap,t,"activation")}function fr(e){if(e==null){let t={};return t.className="linear",t.config={},hg(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},hg(t)}else return e instanceof wn?e:hg(e)}function pg(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var jw=class extends ae.Serializable{},rl=class extends jw{constructor(e){super();pg(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return K(()=>{let t=Ft([1]);return this.hasL1&&(t=oe(t,xe(B(this.l1,Kt(e))))),this.hasL2&&(t=oe(t,xe(B(this.l2,Zu(e))))),H(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};rl.className="L1L2";ae.registerClass(rl);function $L(e){return pg(e),new rl({l1:e!=null?e.l1:null,l2:0})}function AL(e){return pg(e),new rl({l2:e!=null?e.l2:null,l1:0})}var Kw={l1l2:"L1L2"};function at(e){return Em(e)}function Xw(e,t={}){return Ku(e,ae.SerializationMap.getMap().classNameMap,t,"regularizer")}function mt(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Kw?Kw[e]:e,config:{}};return Xw(n)}else return e instanceof jw?e:Xw(e)}var fg=class extends Ue{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=De(e);let n=ir(e);return this.maxValue!=null&&(n=Wn(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};fg.className="ReLU";ae.registerClass(fg);var mg=class extends Ue{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=De(e);return rx(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};mg.className="LeakyReLU";ae.registerClass(mg);var gg=class extends Ue{constructor(e){super(e??{});if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ft(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=mt(e.alphaRegularizer),this.alphaConstraint=Lt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new W(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=tt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new zt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=De(e),px(e,this.alpha.read())}getConfig(){let e={alphaInitializer:xt(this.alphaInitializer),alphaRegularizer:at(this.alphaRegularizer),alphaConstraint:Pt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};gg.className="PReLU";ae.registerClass(gg);var bg=class extends Ue{constructor(e){super(e??{});if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Re(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=De(e);return um(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};bg.className="ELU";ae.registerClass(bg);var yg=class extends Ue{constructor(e){super(e??{});this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=De(e);return B(n,de(Gn(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};yg.className="ThresholdedReLU";ae.registerClass(yg);var vg=class extends Ue{constructor(e){super(e??{});this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new dg().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=De(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};vg.className="Softmax";ae.registerClass(vg);function ki(e,t,n){if(typeof e=="number")return za(e,t);if(e.length!==t)throw new W(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!YO(r))throw new W(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function us(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+s-1)/s)}function Cs(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+hr([n-t,0]);else if(s==="same")e=e*t;else throw new W(`Unsupport padding mode: ${s}.`);return e}function xg(e,t){return K(()=>(Nt(t),t==="channelsFirst"?Ke(e,[0,2,3,1]):e))}function Yw(e,t){return K(()=>(Nt(t),t==="channelsFirst"?Ke(e,[0,2,3,4,1]):e))}function EL(e,t,n,s=1,r="valid",a,o=1){return K(()=>{if(a==null&&(a=rs()),Nt(a),e.shape.length!==3)throw new W(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new W(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new W(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=Ke(e,[0,2,1])),r==="causal")throw new Re("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=TA(e,t,s,r==="same"?"same":"valid","NWC",o);return n!=null&&(i=is(i,n)),i})}function Qw(e,t,n,s=[1,1],r="valid",a,o,i=null){return K(()=>{if(a==null&&(a=rs()),Nt(a),e.rank!==3&&e.rank!==4)throw new W(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new W(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=xg(e,a);if(r==="causal")throw new Re("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Zc.conv2d({x:u,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(u=Ke(u,[0,3,1,2])),u})}function _L(e,t,n,s=[1,1,1],r="valid",a,o){return K(()=>{if(a==null&&(a=rs()),Nt(a),e.rank!==4&&e.rank!==5)throw new W(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new W(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=Yw(e,a);if(r==="causal")throw new Re("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=RA(i,t,s,r==="same"?"same":"valid","NDHWC",o),n!=null&&(i=is(i,n)),a==="channelsFirst"&&(i=Ke(i,[0,4,1,2,3])),i})}var wg=class extends Ue{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",wg.verifyArgs(t),this.rank=e,Wt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Re(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ki(t.kernelSize,e,"kernelSize"),this.strides=ki(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Rn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Nt(this.dataFormat),this.activation=fr(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=ft(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Lt(t.biasConstraint),this.biasRegularizer=mt(t.biasRegularizer),this.activityRegularizer=mt(t.activityRegularizer),this.dilationRate=ki(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new W(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new W(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new W(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(vs("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Rm(e.kernelSize,"number",1,3))throw new W(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:pr(this.activation),useBias:this.useBias,biasInitializer:xt(this.biasInitializer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),biasConstraint:Pt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},al=class extends wg{constructor(e,t){super(e,t);this.kernel=null,al.verifyArgs(t),this.filters=t.filters,Wt(this.filters,"filters"),this.kernelInitializer=ft(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Lt(t.kernelConstraint),this.kernelRegularizer=mt(t.kernelRegularizer)}build(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new W(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return K(()=>{e=De(e);let n,s=this.bias==null?null:this.bias.read(),r=Gx(this.activation.getClassName());if(r!=null&&this.rank===2)n=Qw(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=EL(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=Qw(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=_L(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Re("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=tt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=us(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:xt(this.kernelInitializer),kernelRegularizer:at(this.kernelRegularizer),kernelConstraint:Pt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new W(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Zw=class extends al{constructor(e){super(2,e);Zw.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Rm(e.kernelSize,"number",1,2))throw new W(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},Ad=Zw;Ad.className="Conv2D";ae.registerClass(Ad);var Jw=class extends al{constructor(e){super(3,e);Jw.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new W(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},Ed=Jw;Ed.className="Conv3D";ae.registerClass(Ed);var kg=class extends Ad{constructor(e){super(e);if(this.inputSpec=[new zt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new W(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==4)throw new W("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new W("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return K(()=>{let n=De(e);if(n.shape.length!==4)throw new W(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=s[a],u=s[o],c=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=Cs(i,d,c,this.padding),f=Cs(u,h,l,this.padding),m=[r,p,f,this.filters];this.dataFormat!=="channelsLast"&&(n=Ke(n,[0,2,3,1]));let g=EA(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Ke(g,[0,3,1,2])),this.bias!=null&&(g=is(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=tt(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[s]=Cs(t[s],i,a,this.padding),t[r]=Cs(t[r],u,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};kg.className="Conv2DTranspose";ae.registerClass(kg);var Ig=class extends Ed{constructor(e){super(e);if(this.inputSpec=[new zt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new W(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==5)throw new W("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new W("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return K(()=>{let n=De(e);if(n.shape.length!==5)throw new W(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let u=s[i],c=s[a],l=s[o],d=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],b=Cs(u,f,d,this.padding),v=Cs(c,m,h,this.padding),y=Cs(l,g,p,this.padding),w=[r,b,v,y,this.filters];this.dataFormat!=="channelsLast"&&(n=Ke(n,[0,2,3,4,1]));let k=OA(n,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(k=Ke(k,[0,4,1,2,3])),this.bias!==null&&(k=is(k,this.bias.read(),this.dataFormat)),this.activation!==null&&(k=this.activation.apply(k)),k})}computeOutputShape(e){e=tt(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],l=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[s]=Cs(t[s],c,o,this.padding),t[r]=Cs(t[r],l,i,this.padding),t[a]=Cs(t[a],d,u,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Ig.className="Conv3DTranspose";ae.registerClass(Ig);var ek=class extends al{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new W("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new W("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new W(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=ft(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=mt(t.depthwiseRegularizer),this.depthwiseConstraint=Lt(t.depthwiseConstraint),this.pointwiseInitializer=ft(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=mt(t.pointwiseRegularizer),this.pointwiseConstraint=Lt(t.pointwiseConstraint)}build(e){if(e=tt(e),e.length<this.rank+2)throw new W(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new W(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new zt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return K(()=>{e=De(e);let n;if(this.rank===1)throw new Re("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ke(e,[0,2,3,1])),n=L_(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=is(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ke(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=xt(this.depthwiseInitializer),e.pointwiseInitializer=xt(this.pointwiseInitializer),e.depthwiseRegularizer=at(this.depthwiseRegularizer),e.pointwiseRegularizer=at(this.pointwiseRegularizer),e.depthwiseConstraint=Pt(this.depthwiseConstraint),e.pointwiseConstraint=Pt(this.pointwiseConstraint),e}};ek.className="SeparableConv";var Sg=class extends ek{constructor(e){super(2,e)}};Sg.className="SeparableConv2D";ae.registerClass(Sg);var tk=class extends al{constructor(e){super(1,e);tk.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Rm(e.kernelSize,"number",1,1))throw new W(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},Cg=tk;Cg.className="Conv1D";ae.registerClass(Cg);var Ng=class extends Ue{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return K(()=>{if(e=De(e),this.dataFormat==="channelsLast"){let n=od(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return od(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=od(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return od(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Ng.className="Cropping2D";ae.registerClass(Ng);var Tg=class extends Ue{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Nt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,jO(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return K(()=>{let n=De(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=Ke(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],o=this.interpolation==="nearest"?ju.resizeNearestNeighbor(n,[r,a]):ju.resizeBilinear(n,[r,a]);return Ke(o,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?ju.resizeNearestNeighbor(n,[r,a]):ju.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Tg.className="UpSampling2D";ae.registerClass(Tg);function RL(e,t,n=[1,1],s="valid",r,a){return K(()=>{r==null&&(r=rs()),Nt(r);let o=xg(e,r);if(e.rank!==4)throw new W(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new W(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=im(o,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(o=Ke(o,[0,3,1,2])),o})}var $g=class extends wg{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=ft(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Lt(e.depthwiseConstraint),this.depthwiseRegularizer=mt(e.depthwiseRegularizer)}build(e){if(e=tt(e),e.length<4)throw new W(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new W(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return K(()=>{e=De(e);let n=RL(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=is(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=us(t,this.kernelSize[0],this.padding,this.strides[0]),a=us(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=xt(this.depthwiseInitializer),e.depthwiseRegularizer=at(this.depthwiseRegularizer),e.depthwiseConstraint=Pt(this.depthwiseRegularizer),e}};$g.className="DepthwiseConv2D";ae.registerClass($g);function nk(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new W("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function sk(e,t,n,s=!1,r,a,o=!1,i=!1){return K(()=>{let u=t.shape.length;if(u<3)throw new W(`Input should be at least 3D, but is ${u}D.`);let c=[1,0].concat(os(2,u));if(t=Ke(t,c),a!=null)throw new Re("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=de(de(r,"bool"),"float32"),r.rank===u-1&&(r=Un(r,-1)),r=Ke(r,c)),s&&(t=ys(t,0),r!=null&&(r=ys(r,0)));let l=[],d,h=n,p=t.shape[0],f=qu(t),m;r!=null&&(m=qu(r));for(let b=0;b<p;++b){let v=f[b],y=K(()=>e(v,h));if(r==null)d=y[0],h=y[1];else{let w=K(()=>{let k=m[b],S=ge(ns(k),k),N=oe(B(y[0],k),B(h[0],S)),A=h.map((_,O)=>oe(B(y[1][O],k),B(_,S)));return{output:N,newStates:A}});d=w.output,h=w.newStates}i&&l.push(d)}let g;return i&&(g=Pa(l,1)),[d,g,h]})}var rk=class extends Ue{constructor(e){super(e);let t;if(e.cell==null)throw new W("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Dd({cells:e.cell}):t=e.cell,t.stateSize==null)throw new W("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new zt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return os(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Xm(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return K(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Re("Constants support is not implemented in RNN yet.");Xm(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new zt({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));if(t!=null)throw new Re("Constants support is not implemented in RNN yet.");this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!x.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new W(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new zt({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){K(()=>{if(!this.stateful)throw new Ls("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new W("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Ft([n,s])):this.states_=[Ft([n,this.cell.stateSize])];else if(e==null)Oe(this.states_),this.keptStates!=null&&(Oe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Ft([n,s])):this.states_[0]=Ft([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new W(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Oe(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[n,a];if(!x.arraysEqual(r.shape,o))throw new W(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>ms(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=nk(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let u of n)this.stateSpec.push(new zt({shape:u.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof ws){let u=[e].concat(a),c=this.inputSpec.concat(o),l=this.inputSpec;this.inputSpec=c;let d=super.apply(u,t);return this.inputSpec=l,d}else return super.apply(e,t)}call(e,t){return K(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=De(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new W(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:s},u=sk((p,f)=>{let m=this.cell.call([p].concat(f),o);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=u[0],l=u[1],d=u[2];this.stateful&&this.resetStates(d,s);let h=this.returnSequences?l:c;return this.returnState?[h].concat(d):h})}getInitialState(e){return K(()=>{let t=Ft(e.shape);return t=xe(t,[1,2]),t=Qu(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Bm(t,[1,n]):t):this.cell.stateSize>1?[Bm(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===rk.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let s=t.cell,r=Is(s,n);return new e(Object.assign(t,{cell:r}))}},mr=rk;mr.className="RNN";ae.registerClass(mr);var ol=class extends Ue{},_d=class extends ol{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Wt(this.units,"units"),this.activation=fr(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ft(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=mt(e.kernelRegularizer),this.recurrentRegularizer=mt(e.recurrentRegularizer),this.biasRegularizer=mt(e.biasRegularizer),this.kernelConstraint=Lt(e.kernelConstraint),this.recurrentConstraint=Lt(e.recurrentConstraint),this.biasConstraint=Lt(e.biasConstraint),this.dropout=yi([1,hr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=yi([1,hr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return K(()=>{if(e=e,e.length!==2)throw new W(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=gr({ones:()=>ns(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=gr({ones:()=>ns(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?r=xs(B(e,a),this.kernel.read()):r=xs(e,this.kernel.read()),this.bias!=null&&(r=is(r,this.bias.read())),o!=null&&(n=B(n,o));let i=oe(r,xs(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:pr(this.activation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:at(this.kernelRegularizer),recurrentRegularizer:at(this.recurrentRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Pt(this.kernelConstraint),recurrentConstraint:Pt(this.recurrentConstraint),biasConstraint:Pt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};_d.className="SimpleRNNCell";ae.registerClass(_d);var Ag=class extends mr{constructor(e){e.cell=new _d(e);super(e)}call(e,t){return K(()=>{this.cell.dropoutMask!=null&&(Oe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Oe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};Ag.className="SimpleRNN";ae.registerClass(Ag);var Rd=class extends ol{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new W("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Wt(this.units,"units"),this.activation=fr(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=fr(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ft(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=mt(e.kernelRegularizer),this.recurrentRegularizer=mt(e.recurrentRegularizer),this.biasRegularizer=mt(e.biasRegularizer),this.kernelConstraint=Lt(e.kernelConstraint),this.recurrentConstraint=Lt(e.recurrentConstraint),this.biasConstraint=Lt(e.biasConstraint),this.dropout=yi([1,hr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=yi([1,hr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return K(()=>{if(e=e,e.length!==2)throw new W(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=gr({ones:()=>ns(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=gr({ones:()=>ns(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,o,i,u;0<this.dropout&&this.dropout<1&&(e=B(e,r[0]));let c=xs(e,this.kernel.read());this.useBias&&(c=is(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=B(s,a[0]));let l=this.recurrentKernel.read(),[d,h]=Hn(l,[2*this.units,this.units],l.rank-1),p=xs(s,d),[f,m,g]=Hn(c,3,c.rank-1),[b,v]=Hn(p,2,p.rank-1);o=this.recurrentActivation.apply(oe(f,b)),i=this.recurrentActivation.apply(oe(m,v));let y=xs(B(i,s),h);u=this.activation.apply(oe(g,y));let w=oe(B(o,s),B(oe(1,Ct(o)),u));return[w,w]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:pr(this.activation),recurrentActivation:pr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:at(this.kernelRegularizer),recurrentRegularizer:at(this.recurrentRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Pt(this.kernelConstraint),recurrentConstraint:Pt(this.recurrentConstraint),biasConstraint:Pt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};Rd.className="GRUCell";ae.registerClass(Rd);var Eg=class extends mr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Rd(e);super(e)}call(e,t){return K(()=>{this.cell.dropoutMask!=null&&(Oe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Oe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Eg.className="GRU";ae.registerClass(Eg);var il=class extends ol{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Wt(this.units,"units"),this.activation=fr(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=fr(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ft(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=mt(e.kernelRegularizer),this.recurrentRegularizer=mt(e.recurrentRegularizer),this.biasRegularizer=mt(e.biasRegularizer),this.kernelConstraint=Lt(e.kernelConstraint),this.recurrentConstraint=Lt(e.recurrentConstraint),this.biasConstraint=Lt(e.biasConstraint),this.dropout=yi([1,hr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=yi([1,hr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=tt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends jn{apply(o,i){let u=r.apply([a]),c=new ud().apply([a]),l=r.apply([a*2]);return Zx(Zx(u,c),l)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return K(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new W(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=gr({ones:()=>ns(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=gr({ones:()=>ns(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,u,c,l;0<this.dropout&&this.dropout<1&&(e=B(e,a[0]));let d=xs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=B(s,o[0])),d=oe(d,xs(s,this.recurrentKernel.read())),this.useBias&&(d=is(d,this.bias.read()));let[h,p,f,m]=Hn(d,4,d.rank-1);i=this.recurrentActivation.apply(h),u=this.recurrentActivation.apply(p),c=oe(B(u,r),B(i,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=B(l,this.activation.apply(c));return[g,g,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:pr(this.activation),recurrentActivation:pr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:at(this.kernelRegularizer),recurrentRegularizer:at(this.recurrentRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Pt(this.kernelConstraint),recurrentConstraint:Pt(this.recurrentConstraint),biasConstraint:Pt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};il.className="LSTMCell";ae.registerClass(il);var _g=class extends mr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new il(e);super(e)}call(e,t){return K(()=>{this.cell.dropoutMask!=null&&(Oe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Oe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};_g.className="LSTM";ae.registerClass(_g);var Dd=class extends ol{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return K(()=>{e=e;let n=e.slice(1),s=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(n.splice(0,o.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=s[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),r.push(a.slice(1))}n=[];for(let o of r.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){Xm(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{Va(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return{...e,...s}}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(Is(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Ym(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}Qm(t)}};Dd.className="StackedRNNCells";ae.registerClass(Dd);function gr(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,o=()=>a!=null?a(t(),n):ew(t(),n),i=()=>Ju(o,t,s);return!r||r<=1?ms(i().clone()):Array(r).fill(void 0).map(i).map(c=>ms(c.clone()))}var ak=class extends mr{constructor(e){if(e.unroll)throw new Re("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Re("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new zt({ndim:5})]}call(e,t){return K(()=>{if(this.cell.dropoutMask!=null&&(Oe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Oe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new W("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return K(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Ft(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){K(()=>{if(!this.stateful)throw new Ls("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new W("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ft(r)):this.states_=[Ft(r)];else if(e==null)Oe(this.states_),this.keptStates!=null&&(Oe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ft(r)):this.states_[0]=Ft(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new W(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Oe(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],u=r;if(!x.arraysEqual(i.shape,u))throw new W(`State ${o} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>ms(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",u=e[i?3:2],c=e[i?4:3],l=us(u,s[0],r,a[0],o[0]),d=us(c,s[1],r,a[1],o[1]);return[...e.slice(0,2),...i?[n,l,d]:[l,d,n]]}};ak.className="ConvRNN2D";var Fd=class extends il{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:o}=e;super({...e,units:t});this.filters=t,Wt(this.filters,"filters"),this.kernelSize=ki(n,2,"kernelSize"),this.kernelSize.forEach(i=>Wt(i,"kernelSize")),this.strides=ki(s||1,2,"strides"),this.strides.forEach(i=>Wt(i,"strides")),this.padding=r||"valid",Rn(this.padding),this.dataFormat=a||"channelsLast",Nt(this.dataFormat),this.dilationRate=ki(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>Wt(i,"dilationRate"))}build(e){var t;e=tt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new W(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let u=this.biasInitializer,c=this.filters;i=new(t=class extends jn{apply(l,d){let h=u.apply([c]),p=or([c]),f=u.apply([c*2]);return Mm([h,p,f])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return K(()=>{if(e.length!==3)throw new W(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=gr({ones:()=>ns(s),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,u=(Y,Z,J)=>!Z||!Z[J]?Y:B(Z[J],Y),c=u(s,i,0),l=u(s,i,1),d=u(s,i,2),h=u(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=gr({ones:()=>ns(r),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let p=this.recurrentDropoutMask,f=u(r,p,0),m=u(r,p,1),g=u(r,p,2),b=u(r,p,3),v=3,[y,w,k,S]=Hn(this.kernel.read(),o,v),[N,A,_,O]=this.useBias?Hn(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,y,N,this.padding),l=this.inputConv(l,w,A,this.padding),d=this.inputConv(d,k,_,this.padding),h=this.inputConv(h,S,O,this.padding);let[R,D,C,P]=Hn(this.recurrentKernel.read(),o,v);f=this.recurrentConv(f,R),m=this.recurrentConv(m,D),g=this.recurrentConv(g,C),b=this.recurrentConv(b,P);let V=this.recurrentActivation.apply(oe(c,f)),G=this.recurrentActivation.apply(oe(l,m)),U=oe(B(G,a),B(V,this.activation.apply(oe(d,g)))),q=B(this.recurrentActivation.apply(oe(h,b)),this.activation.apply(U));return[q,q,U]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,s){let r=di(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?is(r,n,this.dataFormat):r}recurrentConv(e,t){return di(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Fd.className="ConvLSTM2DCell";ae.registerClass(Fd);var Rg=class extends ak{constructor(e){let t=new Fd(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};Rg.className="ConvLSTM2D";ae.registerClass(Rg);var Od=class extends Ue{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=De(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return Ju(()=>ew(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Od.className="Dropout";ae.registerClass(Od);var Dg=class extends Od{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Dg.className="SpatialDropout1D";ae.registerClass(Dg);var Fg=class extends Ue{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Wt(this.units,"units"),this.activation=fr(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Lt(e.kernelConstraint),this.biasConstraint=Lt(e.biasConstraint),this.kernelRegularizer=mt(e.kernelRegularizer),this.biasRegularizer=mt(e.biasRegularizer),this.activityRegularizer=mt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=tt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=tt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=De(e),s=Gx(this.activation.getClassName()),r;return s!=null?r=xs(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=xs(n,this.kernel.read()),this.bias!=null&&(r=is(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:pr(this.activation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:at(this.kernelRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Pt(this.kernelConstraint),biasConstraint:Pt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Fg.className="Dense";ae.registerClass(Fg);var Og=class extends Ue{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=tt(e);for(let t of e.slice(1))if(t==null)throw new W(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],dr(e,1)]}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=De(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=Ke(n,s)}return JO(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Og.className="Flatten";ae.registerClass(Og);var Pg=class extends Ue{constructor(e){super(e);this.supportsMasking=!0,this.activation=fr(e.activation)}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=De(e);return this.activation.apply(n)})}getConfig(){let e={activation:pr(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Pg.className="Activation";ae.registerClass(Pg);var Lg=class extends Ue{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return K(()=>(e=De(e),QO(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Lg.className="RepeatVector";ae.registerClass(Lg);var zg=class extends Ue{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let i=0;i<s.length;++i){let u=s[i];if(this.isUnknown(u))if(a===null)a=i;else throw new W("Can only specifiy one unknown dimension.");else r*=u}let o=dr(e);if(a!==null){if(r===0||o%r!=0)throw new W(n);s[a]=o/r}else if(o!==r)throw new W(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=De(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return H(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};zg.className="Reshape";ae.registerClass(zg);var Mg=class extends Ue{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=os(1,e.dims.length+1);if(!x.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new zt({ndim:this.dims.length+1})]}computeOutputShape(e){e=tt(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return Ke(De(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Mg.className="Permute";ae.registerClass(Mg);var Bg=class extends Ue{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=De(e),s=-1;return jv(qc(n,this.maskValue),s)}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=De(e),s=-1,r=!0,a=jv(qc(n,this.maskValue),s,r);return B(n,de(a,n.dtype))})}};Bg.className="Masking";ae.registerClass(Bg);var Vg=class extends Ue{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(dt(e.inputLength))}this.inputDim=e.inputDim,Wt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Wt(this.outputDim,"outputDim"),this.embeddingsInitializer=ft(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=mt(e.embeddingsRegularizer),this.activityRegularizer=mt(e.activityRegularizer),this.embeddingsConstraint=Lt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return K(()=>this.maskZero?(e=De(e),qc(e,Xe(e))):null)}computeOutputShape(e){if(e=tt(e),this.inputLength==null)return[...e,this.outputDim];let t=dt(this.inputLength);if(t.length!==e.length-1)throw new W(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new W(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=De(e);n.dtype!=="int32"&&(n=ad(n,"int32"));let s=Jx(this.embeddings.read(),H(n,[n.size]));return H(s,tt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:xt(this.embeddingsInitializer),embeddingsRegularizer:at(this.embeddingsRegularizer),activityRegularizer:at(this.activityRegularizer),embeddingsConstraint:Pt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Vg.className="Embedding";ae.registerClass(Vg);var ja=class extends Ue{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Re}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new W("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[tt(e)]),e=e,e.length<2)throw new W(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=cr(t),t.length>1)throw new W(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&cr(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return K(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=hr(s);for(let a of e){let o=a.rank;for(let i=0;i<r-o;++i)a=Qu(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let i of e){let u=i.rank;if(u==null){let c=i.shape,l=c[0],d=c.slice(1).concat([l]),h=H(i,[l].concat(dr(c.slice(1))));h=Ke(h,[1,0]),h=H(h,d),n.push(h),r=!0}else if(u>1){let c=os(1,u).concat([0]);n.push(Ke(i,c)),r=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(r){if(o==null){let i=a.shape,u=i.length,c=i[u-1],l=[c].concat(i.slice(0,i.length-1));a=H(Ke(H(a,[-1,c]),[1,0]),l)}else if(o>1){let i=[o-1].concat(os(0,o-1));a=Ke(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=cr(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return K(()=>{if(t==null)return null;if(!Array.isArray(t))throw new W("`mask` should be an Array");if(!Array.isArray(e))throw new W("`inputs` should be an Array");if(t.length!==e.length)throw new W(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Un(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=Ps(n,t[s]);return n})}},Wg=class extends ja{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=oe(t,e[n]);return t})}};Wg.className="Add";ae.registerClass(Wg);var Ug=class extends ja{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=B(t,e[n]);return t})}};Ug.className="Multiply";ae.registerClass(Ug);var Gg=class extends ja{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=oe(t,e[n]);return B(1/e.length,t)})}};Gg.className="Average";ae.registerClass(Gg);var Hg=class extends ja{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Oa(t,e[n]);return t})}};Hg.className="Maximum";ae.registerClass(Hg);var qg=class extends ja{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=hm(t,e[n]);return t})}};qg.className="Minimum";ae.registerClass(qg);var jg=class extends ja{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new W("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let o of n)if(x.arraysEqual(o,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new W("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return K(()=>Mm(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new W("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new W("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new W("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new W(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return K(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(de(ns(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Un(t[a],-1)):s.push(t[a]);let r=nn(s,this.axis);return R$(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};jg.className="Concatenate";ae.registerClass(jg);function ul(e,t){for(;e<0;)e+=t;return e}function DL(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Re("batchDot is not implemented for tensors of 4D or higher rank yet");if(x.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),x.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Re("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return K(()=>{let o;if(s>r){o=s-r;let u=[];for(let c=0;c<o;++c)u.push(1);t=H(t,t.shape.concat(u))}else if(r>s){o=r-s;let u=[];for(let c=0;c<o;++c)u.push(1);e=H(e,e.shape.concat(u))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=xe(B(e,t),a[0]):i=xe(B(Ke(e,[1,0]),t),a[1]);else{let u=a[0]!==e.shape.length-1,c=a[1]===t.shape.length-1;i=je(e,t,u,c)}if(o>0){let u;s>r?u=s+r-3:u=s-1;let c=[];for(let l=u;l<u+o;++l)c.push(l);i=Yc(i,c)}return i.shape.length===1&&(i=Un(i,1)),i})}var Kg=class extends ja{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){x.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Re("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new W(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new W(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>ul(r,e[a].shape.length)):s=[ul(this.axes,t.shape.length),ul(this.axes,n.shape.length)],this.normalize&&(t=xd(t,s[0]),n=xd(n,s[1])),DL(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[ul(this.axes,e.length),ul(this.axes,t.length)],n}computeOutputShape(e){x.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Re("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Kg.className="Dot";ae.registerClass(Kg);var Xg=class extends Ue{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=De(e);return Ju(()=>oe(id(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};Xg.className="GaussianNoise";ae.registerClass(Xg);var Yg=class extends Ue{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=De(e);return this.rate>0&&this.rate<1?Ju(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return B(n,id(n.shape,1,r))},()=>n,t.training||!1):n})}};Yg.className="GaussianDropout";ae.registerClass(Yg);var Qg=class extends Ue{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||De(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return K(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Ju(()=>{let r=De(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,u=Gu(jc(n),this.rate);u=ad(u,"float32");let c=((1-this.rate)*(1+this.rate*i**2))**-.5,l=-c*i*this.rate,d=oe(B(r,u),B(oe(u,-1),i));return oe(B(d,c),l)},()=>De(e),t.training||!1)}return e})}};Qg.className="AlphaDropout";ae.registerClass(Qg);function ll(e,t,n,s,r,a=.001){let o;if(e.rank===2)o=oA(e,t,n,s,r,a);else if(e.rank===3)o=uA(e,t,n,s,r,a);else if(e.rank===4)o=cA(e,t,n,s,r,a);else throw new Re(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function FL(e,t,n,s,r=.001){return K(()=>{let a=pm(e,s),o=a.mean,i=a.variance;return[ll(e,o,i,n,t,r),o,i]})}function OL(e,t,n,s,r=.001){return K(()=>{let a=pm(e,s),o=a.mean,i=a.variance,u=[];for(let f of os(0,e.rank))s.indexOf(f)!==-1?u.push(1):u.push(e.shape[f]);let c=H(o,u),l=H(i,u),d=t==null?null:H(t,u),h=n==null?null:H(n,u);return[ll(e,c,l,h,d,r),o,i]})}function PL(e,t,n,s,r=.001){return x.arraysEqual(s.slice().sort(),os(0,e.rank-1))?FL(e,t,n,s,r):OL(e,t,n,s,r)}var Zg=class extends Ue{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ft(e.betaInitializer||"zeros"),this.gammaInitializer=ft(e.gammaInitializer||"ones"),this.movingMeanInitializer=ft(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ft(e.movingVarianceInitializer||"ones"),this.betaConstraint=Lt(e.betaConstraint),this.gammaConstraint=Lt(e.gammaConstraint),this.betaRegularizer=mt(e.betaRegularizer),this.gammaRegularizer=mt(e.gammaRegularizer)}build(e){e=tt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new W(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new zt({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return K(()=>{let n=t.training==null?!1:t.training,s=De(e),r=s.shape,a=r.length,o=os(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let u=za(1,a);u[i]=r[i];let c=o.slice();c.sort();let l=!x.arraysEqual(c,os(0,a).slice(0,a-1)),d=()=>{if(l){let b=H(this.movingMean.read(),u),v=H(this.movingVariance.read(),u),y=this.center?H(this.beta.read(),u):null,w=this.scale?H(this.gamma.read(),u):null;return ll(s,b,v,y,w,this.epsilon)}else return ll(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();let[h,p,f]=PL(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(b,v,y)=>{K(()=>{let w=1-y,k=b.read(),S=B(ge(k,v),w);b.write(ge(k,S))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xt(this.betaInitializer),gammaInitializer:xt(this.gammaInitializer),movingMeanInitializer:xt(this.movingMeanInitializer),movingVarianceInitializer:xt(this.movingVarianceInitializer),betaRegularizer:at(this.betaRegularizer),gammaRegularizer:at(this.gammaRegularizer),betaConstraint:Pt(this.betaConstraint),gammaConstraint:Pt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Zg.className="BatchNormalization";ae.registerClass(Zg);var Jg=class extends Ue{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ft(e.betaInitializer||"zeros"),this.gammaInitializer=ft(e.gammaInitializer||"ones"),this.betaRegularizer=mt(e.betaRegularizer),this.gammaRegularizer=mt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=tt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==cr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=De(e),s=n.shape,r=s.length;return K(()=>{let a=!0,{mean:o,variance:i}=pm(n,this.axis,a),u=za(1,r);for(let f of this.axis)u[f]=s[f];let c=f=>f!=null&&f.shape.length!==r?H(f,u):f,l=c(this.gamma.read()),d=c(this.beta.read()),h=[],p=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(h.push(s[f]),p.push(1)):(h.push(1),p.push(s[f]));return o=bs(o,h),i=bs(i,h),l=bs(l,p),d=bs(d,p),ll(n,o,i,d,l,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xt(this.betaInitializer),gammaInitializer:xt(this.gammaInitializer),betaRegularizer:at(this.betaRegularizer),gammaRegularizer:at(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Jg.className="LayerNormalization";ae.registerClass(Jg);function LL(e,t,n){return K(()=>{if(e.rank!==4)throw new W(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new W("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=rs()),n!=="channelsLast"&&n!=="channelsFirst")throw new W(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],hi(e,s)})}var eb=class extends Ue{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?rs():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new W(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new W(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new W(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new zt({ndim:4})]}computeOutputShape(e){e=tt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return K(()=>LL(De(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};eb.className="ZeroPadding2D";ae.registerClass(eb);function Pd(e,t,n,s,r,a){return K(()=>{Nt(r),jx(a),Rn(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=rs()),a==null&&(a="max"),e=xg(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=cx(e,t,n,i):o=Qv(e,t,n,i),r==="channelsFirst"&&(o=Ke(o,[0,3,1,2])),o})}function ok(e,t,n,s,r,a){return K(()=>{Nt(r),jx(a),Rn(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=rs()),a==null&&(a="max"),e=Yw(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=BE(e,t,n,i):o=Y$(e,t,n,i),r==="channelsFirst"&&(o=Ke(o,[0,4,1,2,3])),o})}var ik=class extends Ue{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new W(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Wt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new W(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Wt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Rn(this.padding),this.inputSpec=[new zt({ndim:3})]}computeOutputShape(e){e=tt(e);let t=us(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return K(()=>{this.invokeCallHook(e,t),e=Qu(De(e),2);let n=this.poolingFunction(De(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Yc(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},tb=class extends ik{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Nt(r),Rn(s),Pd(e,t,n,s,r,"max")}};tb.className="MaxPooling1D";ae.registerClass(tb);var nb=class extends ik{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Nt(r),Rn(s),Pd(e,t,n,s,r,"avg")}};nb.className="AveragePooling1D";ae.registerClass(nb);var uk=class extends Ue{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new W(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Wt(this.poolSize,"poolSize"),Wt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Nt(this.dataFormat),Rn(this.padding),this.inputSpec=[new zt({ndim:4})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=us(t,this.poolSize[0],this.padding,this.strides[0]),n=us(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return K(()=>(this.invokeCallHook(e,t),this.poolingFunction(De(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},sb=class extends uk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Nt(r),Rn(s),Pd(e,t,n,s,r,"max")}};sb.className="MaxPooling2D";ae.registerClass(sb);var rb=class extends uk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Nt(r),Rn(s),Pd(e,t,n,s,r,"avg")}};rb.className="AveragePooling2D";ae.registerClass(rb);var lk=class extends Ue{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new W(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Wt(this.poolSize,"poolSize"),Wt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Nt(this.dataFormat),Rn(this.padding),this.inputSpec=[new zt({ndim:5})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=us(t,this.poolSize[0],this.padding,this.strides[0]),n=us(n,this.poolSize[1],this.padding,this.strides[1]),s=us(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return K(()=>(this.invokeCallHook(e,t),this.poolingFunction(De(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ab=class extends lk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Nt(r),Rn(s),ok(e,t,n,s,r,"max")}};ab.className="MaxPooling3D";ae.registerClass(ab);var ob=class extends lk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Nt(r),Rn(s),ok(e,t,n,s,r,"avg")}};ob.className="AveragePooling3D";ae.registerClass(ob);var ck=class extends Ue{constructor(e){super(e);this.inputSpec=[new zt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Re}},ib=class extends ck{constructor(e){super(e||{})}call(e,t){return K(()=>{let n=De(e);return $t(n,1)})}};ib.className="GlobalAveragePooling1D";ae.registerClass(ib);var ub=class extends ck{constructor(e){super(e||{})}call(e,t){return K(()=>{let n=De(e);return Os(n,1)})}};ub.className="GlobalMaxPooling1D";ae.registerClass(ub);var dk=class extends Ue{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Nt(this.dataFormat),this.inputSpec=[new zt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Re}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},lb=class extends dk{call(e,t){return K(()=>{let n=De(e);return this.dataFormat==="channelsLast"?$t(n,[1,2]):$t(n,[2,3])})}};lb.className="GlobalAveragePooling2D";ae.registerClass(lb);var cb=class extends dk{call(e,t){return K(()=>{let n=De(e);return this.dataFormat==="channelsLast"?Os(n,[1,2]):Os(n,[2,3])})}};cb.className="GlobalMaxPooling2D";ae.registerClass(cb);var hk=class extends Ue{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=Is(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},db=class extends hk{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=tt(e),e.length<3)throw new W(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=tt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return K(()=>(e=De(e),sk((a,o)=>[De(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};db.className="TimeDistributed";ae.registerClass(db);function zL(e){Ba(qO,"BidirectionalMergeMode",e)}var ML="concat",hb=class extends hk{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Is(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Is(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?ML:e.mergeMode,zL(this.mergeMode),e.weights)throw new Re("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):vn(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=nk(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let u=n.length;if(u%2>0)throw new W("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let c=n.map(l=>new zt({shape:l.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),o.push(...c)}if(s!=null)throw new Re("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof ws;for(let u of a)if(u instanceof ws!==i)throw new W("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let u=[e].concat(a),c=this.inputSpec.concat(o),l=this.inputSpec;this.inputSpec=c;let d=super.apply(u,t);return this.inputSpec=l,d}else return super.apply(e,t)}call(e,t){return K(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),u=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=ys(r,1));let o;return this.mergeMode==="concat"?o=Mm([s,r]):this.mergeMode==="sum"?o=oe(s,r):this.mergeMode==="ave"?o=B(.5,oe(s,r)):this.mergeMode==="mul"?o=B(s,r):this.mergeMode==null&&(o=[s,r]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Va(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Va(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Is(t.layer);if(delete t.layer,t.numConstants!=null)throw new Re("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};hb.className="Bidirectional";ae.registerClass(hb);function BL(e){return new vi(e)}function VL(e){return new bg(e)}function WL(e){return new fg(e)}function UL(e){return new mg(e)}function GL(e){return new gg(e)}function HL(e){return new vg(e)}function qL(e){return new yg(e)}function jL(e){return new Cg(e)}function KL(e){return new Ad(e)}function XL(e){return new kg(e)}function YL(e){return new Ed(e)}function QL(e){return new Ig(e)}function ZL(e){return new Sg(e)}function JL(e){return new Ng(e)}function ez(e){return new Tg(e)}function tz(e){return new $g(e)}function nz(e){return new Pg(e)}function sz(e){return new Fg(e)}function rz(e){return new Od(e)}function az(e){return new Dg(e)}function oz(e){return new Og(e)}function iz(e){return new Lg(e)}function uz(e){return new zg(e)}function lz(e){return new Mg(e)}function cz(e){return new Vg(e)}function dz(e){return new Wg(e)}function hz(e){return new Gg(e)}function pz(e){return new jg(e)}function fz(e){return new Hg(e)}function mz(e){return new qg(e)}function gz(e){return new Ug(e)}function bz(e){return new Kg(e)}function yz(e){return new Zg(e)}function vz(e){return new Jg(e)}function xz(e){return new eb(e)}function pb(e){return new nb(e)}function wz(e){return pb(e)}function kz(e){return pb(e)}function fb(e){return new rb(e)}function Iz(e){return fb(e)}function Sz(e){return fb(e)}function mb(e){return new ob(e)}function Cz(e){return mb(e)}function Nz(e){return mb(e)}function Tz(e){return new ib(e)}function $z(e){return new lb(e)}function pk(e){return new ub(e)}function fk(e){return new cb(e)}function mk(e){return new tb(e)}function gk(e){return new sb(e)}function Az(e){return new ab(e)}function Ez(e){return new Eg(e)}function _z(e){return new Rd(e)}function Rz(e){return new _g(e)}function Dz(e){return new il(e)}function Fz(e){return new Ag(e)}function Oz(e){return new _d(e)}function Pz(e){return new Rg(e)}function Lz(e){return new Fd(e)}function zz(e){return new mr(e)}function Mz(e){return new Dd(e)}function Bz(e){return new hb(e)}function Vz(e){return new db(e)}var Wz=pk,Uz=fk,Gz=mk,Hz=gk;function qz(e){return new Xg(e)}function jz(e){return new Yg(e)}function Kz(e){return new Qg(e)}function Xz(e){return new Bg(e)}var Yz={};$e(Yz,{MAPE:()=>iM,MSE:()=>cM,binaryAccuracy:()=>Qz,binaryCrossentropy:()=>Zz,categoricalAccuracy:()=>eM,categoricalCrossentropy:()=>tM,cosineProximity:()=>rM,mape:()=>uM,meanAbsoluteError:()=>aM,meanAbsolutePercentageError:()=>oM,meanSquaredError:()=>lM,mse:()=>dM,precision:()=>nM,recall:()=>sM,sparseCategoricalAccuracy:()=>Jz});function Qz(e,t){return eg(e,t)}function Zz(e,t){return fw(e,t)}function Jz(e,t){return mw(e,t)}function eM(e,t){return tg(e,t)}function tM(e,t){return ng(e,t)}function nM(e,t){return pw(e,t)}function sM(e,t){return qP(e,t)}function rM(e,t){return Zm(e,t)}function aM(e,t){return wd(e,t)}function oM(e,t){return xi(e,t)}function iM(e,t){return xi(e,t)}function uM(e,t){return xi(e,t)}function lM(e,t){return Ga(e,t)}function cM(e,t){return Ga(e,t)}function dM(e,t){return Ga(e,t)}var hM={};$e(hM,{modelFromJSON:()=>NL});var pM={};$e(pM,{l1:()=>mM,l1l2:()=>fM,l2:()=>gM});function fM(e){return new rl(e)}function mM(e){return $L(e)}function gM(e){return AL(e)}var bk;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(bk||(bk={}));var yk;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(yk||(yk={}));var bM={};$e(bM,{json:()=>yM});var yM=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vM={};$e(vM,{json:()=>xM});var xM=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],wM={};$e(wM,{json:()=>kM});var kM=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],IM={};$e(IM,{json:()=>SM});var SM=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],CM={};$e(CM,{json:()=>NM});var NM=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],TM={};$e(TM,{json:()=>$M});var $M=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],AM={};$e(AM,{json:()=>EM});var EM=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],_M={};$e(_M,{json:()=>RM});var RM=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],DM={};$e(DM,{json:()=>FM});var FM=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],OM={};$e(OM,{json:()=>PM});var PM=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],LM={};$e(LM,{json:()=>zM});var zM=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],MM={};$e(MM,{json:()=>BM});var BM=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],VM={};$e(VM,{json:()=>WM});var WM=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],UM={};$e(UM,{json:()=>GM});var GM=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],HM={};$e(HM,{json:()=>qM});var qM=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],jM={};$e(jM,{json:()=>KM});var KM=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],XM={};$e(XM,{json:()=>YM});var YM=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],QM={};$e(QM,{json:()=>ZM});var ZM=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],JM={};$e(JM,{json:()=>eB});var eB=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var tB={};$e(tB,{CSVDataset:()=>Rk,Dataset:()=>Si,FileDataSource:()=>Mk,TextLineDataset:()=>Ak,URLDataSource:()=>Bk,array:()=>SB,csv:()=>OB,func:()=>PB,generator:()=>LB,microphone:()=>MB,version_data:()=>BB,webcam:()=>zB,zip:()=>CB});var nB=$r(rc()),sB=$r(rc());function rB(e,t){return Ld(e,t)}function Ld(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(Ii(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let o in e){let i=e[o],u=Ld(i,t,n,s);a[o]=u}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function aB(e,t=xk){return vk(e,t)}function vk(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(Ii(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let o in s){let i=e.map(c=>c[o]),u=vk(i,t,n);a[o]=u}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function xk(e){return e===null?null:Ii(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function wk(e,t){let n=new Map;Ld(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(x.isPromise(a)){let o=await a;n.set(r,o)}}return Ld(e,t,n)}function Ii(e){let t=!1;if(X().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=Oy();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof yt)&&!(e instanceof Promise)&&!t)}function oB(e){return e==null||iB(e)||Array.isArray(e)||typeof e=="object"&&e instanceof yt||x.isTypedArray(e)}function iB(e){return e===null||typeof e!="object"&&typeof e!="function"}function uB(e){return rB(e,lB)}function lB(e){return e instanceof yt?{value:e.clone(),recurse:!1}:Ii(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var kk=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},Ik=class extends kk{constructor(){super(Ik.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},Sk=Ik;Sk.INITIAL_CAPACITY=32;function Ck(e){return new hB(e)}function gb(e){return new pB(e)}function cB(e,t){return new Tk(e,t)}function dB(e,t=zd.FAIL){return new kB(e,t)}var Ut=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new xB(this,e)}filter(e){return new yB(this,e)}map(e){return new vB(this,e)}mapAsync(e){return new Nk(this,e)}serialMapAsync(e){return new Nk(this,e).serial()}flatmap(e){return new wB(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new bB(this,e,t)}columnMajorBatch(e,t=!0,n=xk){return this.rowMajorBatch(e,t).map(r=>aB(r,n))}concatenate(e,t){return new Tk(Ck([this,e]),t)}take(e){return e<0||e==null?this:new gB(this,e)}skip(e){return e<0||e==null?this:new mB(this,e)}prefetch(e){return new $k(this,e)}shuffle(e,t){return new IB(this,e,t)}serial(){return new fB(this)}},hB=class extends Ut{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:uB(e),done:!1}}},pB=class extends Ut{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},fB=class extends Ut{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},mB=class extends Ut{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Oe(e.value)}return this.upstream.next()}},gB=class extends Ut{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},bB=class extends Ut{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},yB=class extends Ut{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Oe(e.value)}}},vB=class extends Ut{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=fs.getTensorsInContainer(e.value),n=this.transform(e.value),s=fs.getTensorsInContainer(n);for(let r of t)fs.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},xB=class extends Ut{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Nk=class extends Ut{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=fs.getTensorsInContainer(e.value),n=await this.transform(e.value),s=fs.getTensorsInContainer(n);for(let r of t)fs.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},bb=class extends Ut{constructor(){super();this.outputQueue=new Sk,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},wB=class extends bb{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=fs.getTensorsInContainer(e.value),n=this.transform(e.value),s=fs.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)fs.isTensorInList(r,s)||r.dispose();return!0}},Tk=class extends Ut{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},zd;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(zd||(zd={}));var kB=class extends Ut{constructor(e,t=0){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof Ut?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await wk(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},$k=class extends Ut{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new kk(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},IB=class extends $k{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=sB.alea(n||x.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},Si=class{constructor(){this.size=null}batch(e,t=!0){let n=this;x.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),Nn(async()=>(await n.iterator()).columnMajorBatch(e,t,NB),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Nn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Nn(async()=>(await t.iterator()).filter(s=>K(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Nn(async()=>(await t.iterator()).map(n=>K(()=>e(n))),this.size)}mapAsync(e){let t=this;return Nn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Nn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Nn(async()=>{let s=gb(async()=>({value:await t.iterator(),done:!1}));return cB(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Nn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=nB.alea(t||x.now().toString());return Nn(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Nn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Si.MAX_BUFFER_SIZE=1e4;function Nn(e,t=null){return new class extends Si{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function SB(e){return Nn(async()=>Ck(e),e.length)}function CB(e){if(!Ii(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return Nn(async()=>{let n=await wk(e,s=>{if(s instanceof Si)return{value:s.iterator(),recurse:!1};if(Ii(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return dB(n,zd.SHORTEST)},t)}function NB(e){if(e===null)return null;let t=e[0];return oB(t)?{value:TB(e),recurse:!1}:{value:null,recurse:!0}}function TB(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof yt?Pa(e):ai(e)}var Ak=class extends Si{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},Md='"',cl=Symbol("out"),Ek=Symbol("field"),Bd=Symbol("quote"),yb=Symbol("quoteafterquote"),_k=Symbol("quoteinquote"),Rk=class extends Si{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new Ak(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(x.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&x.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(x.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[r],u=null;if(i==="")if(o&&o.default!==void 0)u=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{let c=Number(i);if(isNaN(c))o&&o.dtype==="bool"?u=this.getBoolean(i):u=i;else if(!o||!o.dtype)u=c;else switch(o.dtype){case"float32":u=c;break;case"int32":u=Math.floor(c);break;case"bool":u=this.getBoolean(i);break;default:u=c}}o&&o.isLabel?s[a]=u:n[a]=u}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=cl;for(let o=0;o<r;o++)switch(a){case cl:switch(e.charAt(o)){case Md:s=o+1,a=Bd;break;case this.delimiter:if(s=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=cl;break;default:a=Ek,s=o;break}break;case Ek:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o)),a=cl,s=o+1;break;default:}break;case Bd:switch(e.charAt(o)){case Md:a=yb;break;default:}break;case yb:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o-1)),a=cl,s=o+1;break;case Md:a=Bd;break;default:a=_k;break}break;case _k:switch(e.charAt(o)){case Md:a=Bd;break;default:}break;default:}if(a===yb?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},Dk=class extends Ut{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(X().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new Dk(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(x.sizeFromShape(t));return n.set(e,n.length-e.length),ai(n,t)}},Fk=class extends Ut{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=bn([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,o=r+n,i=s+a;this.cropBox=fi([a,r,i,o],[1,4])}else this.cropBox=fi([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(X().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new Fk(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&x.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=$v.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return K(()=>{let t=Un(de(e,"float32"),0),n;n=ju.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return H(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},Ok=class{},Pk=class extends Ut{split(e){return new $B(this,e)}},$B=class extends Pk{constructor(e,t){super();this.upstream=e,this.impl=new AB(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},AB=class extends bb{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},EB=class extends Ut{decodeUTF8(){return new _B(this)}},_B=class extends Pk{constructor(e){super();this.upstream=e,this.impl=new RB(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},RB=class extends bb{constructor(e){super();if(this.upstream=e,X().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=Oy();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return X().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},Lk=class extends EB{constructor(e,t={}){super();this.file=e,this.options=t,x.assert(e instanceof Uint8Array||(X().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=o=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},r.onabort=o=>n(new Error("Aborted")),r.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function DB(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=FB(e));let a=await(n||x.fetch)(s,r);if(a.ok){let o=new Uint8Array(await a.arrayBuffer());return new Lk(o,t)}else throw new Error(a.statusText)}var FB=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function zk(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var Mk=class extends Ok{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(zk(this.input)&&X().get("IS_NODE")){let e=Mn("fs");this.input=e.readFileSync(this.input.substr(7))}return new Lk(this.input,this.options)}},Bk=class extends Ok{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return zk(this.url)?new Mk(this.url,this.fileOptions).iterator():DB(this.url,this.fileOptions)}};function OB(e,t={}){return new Rk(new Bk(e),t)}function PB(e){let t=gb(e);return Nn(async()=>t)}function LB(e){return Nn(async()=>{let t=await e();return gb(()=>t.next())})}async function zB(e,t){return Fk.create(e,t)}async function MB(e){return Dk.create(e)}var BB="0.0.0";function ve(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&x.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var VB=ss.whereImpl,Vk=class extends au{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new ac(this,Ds())}nextDataId(){return Vk.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,X().get("IS_NODE")&&T.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&x.isString(n[0])){let r=n.map(a=>x.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return T.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>x.decodeString(s))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return _e(e.shape,e.dtype,n)}makeOutput(e,t,n){let s=this.write(e,t,n);return Ds().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=x.now();return e(),{kernelMs:x.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ve([e],"where");let t=this.readSync(e.dataId);return VB(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Wk=Vk;Wk.nextDataId=0;var vb={};$e(vb,{addImpl:()=>Gk,bincountImpl:()=>wb,bincountReduceImpl:()=>Hk,ceilImpl:()=>qk,concatImpl:()=>kb,equalImpl:()=>jk,expImpl:()=>Xk,expm1Impl:()=>Qk,floorImpl:()=>Zk,gatherNdImpl:()=>Jk,gatherV2Impl:()=>eI,greaterEqualImpl:()=>nI,greaterImpl:()=>tI,lessEqualImpl:()=>rI,lessImpl:()=>sI,linSpaceImpl:()=>aI,logImpl:()=>oI,maxImpl:()=>iI,maximumImpl:()=>uI,minimumImpl:()=>lI,multiplyImpl:()=>Ib,negImpl:()=>cI,notEqualImpl:()=>dI,prodImpl:()=>hI,rangeImpl:()=>Cb,rsqrtImpl:()=>pI,sigmoidImpl:()=>A4,simpleAbsImpl:()=>Uk,sliceImpl:()=>Ud,sparseFillEmptyRowsImpl:()=>mI,sparseReshapeImpl:()=>gI,sparseSegmentReductionImpl:()=>Nb,sqrtImpl:()=>R4,squaredDifferenceImpl:()=>bI,stridedSliceImpl:()=>yI,stringNGramsImpl:()=>vI,stringSplitImpl:()=>xI,stringToHashBucketFastImpl:()=>wI,subImpl:()=>kI,tileImpl:()=>II,topKImpl:()=>CI,transposeImpl:()=>Sb,uniqueImpl:()=>NI});function Uk(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var WB=e=>{let{x:t}=e.inputs,n=e.backend;ve(t,"abs");let s=new Float32Array(x.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=Uk(r),n.makeOutput(s,t.shape,t.dtype)},UB={kernelName:go,backendName:"cpu",kernelFunc:WB};function At(e){return(t,n,s,r,a)=>{let o=T.assertAndGetBroadcastShape(t,n),i=o.length,u=x.computeStrides(o),c=x.sizeFromShape(o),l=x.getTypedArrayFromDType(a,c),d=t.length,h=n.length,p=x.computeStrides(t),f=x.computeStrides(n),m=T.getBroadcastDims(t,o),g=T.getBroadcastDims(n,o);if(m.length+g.length===0)for(let b=0;b<l.length;++b)l[b]=e(s[b%s.length],r[b%r.length]);else for(let b=0;b<l.length;++b){let v=x.indexToLoc(b,i,u),y=v.slice(-d);m.forEach(N=>y[N]=0);let w=x.locToIndex(y,d,p),k=v.slice(-h);g.forEach(N=>k[N]=0);let S=x.locToIndex(k,h,f);l[b]=e(s[w],r[S])}return[l,o]}}function Tn(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(s.shape,"complex64"),u=n.data.get(i.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",o)},i}var GB={kernelName:pc,backendName:"cpu",kernelFunc:Tn};function Vd(e,t,n="float32"){if(n==="complex64"){let r=Vd(e,t,"float32"),a=Vd(e,t,"float32");return Tn({inputs:{real:r,imag:a},backend:e})}let s=x.makeZerosTypedArray(x.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Ns(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var HB={kernelName:Kr,backendName:"cpu",kernelFunc:Ns};function Ka(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var qB={kernelName:kc,backendName:"cpu",kernelFunc:Ka};function br(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Ns({inputs:{x:r},backend:n});let o=Vd(n,r.shape,r.dtype),i=br({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=Tn({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}if(r.dtype==="complex64"){let o=Ka({inputs:{input:r},backend:n}),i=br({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!x.hasEncodingLoss(r.dtype,a)){let o=Ns({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(r.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(r.shape,"int32",i)}if(a==="bool"){let o=n.data.get(r.dataId).values,i=x.toTypedArray([0],r.dtype),[u,c]=At((l,d)=>l!==d?1:0)(r.shape,[],o,i,"bool");return n.makeTensorInfo(c,"bool",u)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var jB={kernelName:Fr,backendName:"cpu",kernelFunc:br};function Gt(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:o,b:i}=r,u=a;ve([o,i],e);let c=u.data.get(o.dataId).values,l=u.data.get(i.dataId).values,d=o.dtype==="string"?T.fromUint8ToStringArray(c):c,h=o.dtype==="string"?T.fromUint8ToStringArray(l):l,p=s||o.dtype,[f,m]=t(o.shape,i.shape,d,h,p);return u.makeTensorInfo(m,p,f)}:({inputs:r,backend:a})=>{let{a:o,b:i}=r,u=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let c=br({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(c.dataId),d=l.complexTensorInfos.real,h=l.complexTensorInfos.imag,p=u.data.get(d.dataId).values,f=u.data.get(h.dataId).values,m=br({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),b=g.complexTensorInfos.real,v=g.complexTensorInfos.imag,y=u.data.get(b.dataId).values,w=u.data.get(v.dataId).values,[k,S,N]=n(o.shape,i.shape,p,f,y,w),A=u.makeTensorInfo(N,"float32",k),_=u.makeTensorInfo(N,"float32",S),O=Tn({inputs:{real:A,imag:_},backend:u});return u.disposeIntermediateTensorInfo(c),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(A),u.disposeIntermediateTensorInfo(_),O}else{let c=u.data.get(o.dataId).values,l=u.data.get(i.dataId).values,d=s||o.dtype,[h,p]=t(o.shape,i.shape,c,l,d);return u.makeTensorInfo(p,d,h)}}}function xb(e){return(t,n,s,r,a,o)=>{let i=T.assertAndGetBroadcastShape(t,n),u=x.sizeFromShape(i),c=i.length,l=x.computeStrides(i),d=x.getTypedArrayFromDType("float32",u),h=x.getTypedArrayFromDType("float32",u),p=T.getBroadcastDims(t,i),f=T.getBroadcastDims(n,i),m=T.mergeRealAndImagArrays(s,r),g=T.mergeRealAndImagArrays(a,o),b=t.length,v=x.computeStrides(t),y=n.length,w=x.computeStrides(n);if(p.length+f.length===0)for(let k=0;k<d.length;k++){let S=k%m.length,N=k%g.length,A=e(m[S*2],m[S*2+1],g[N*2],g[N*2+1]);d[k]=A.real,h[k]=A.imag}else for(let k=0;k<d.length;k++){let S=x.indexToLoc(k,c,l),N=S.slice(-b);p.forEach(D=>N[D]=0);let A=x.locToIndex(N,b,v),_=S.slice(-y);f.forEach(D=>_[D]=0);let O=x.locToIndex(_,y,w),R=e(m[A*2],m[A*2+1],g[O*2],g[O*2+1]);d[k]=R.real,h[k]=R.imag}return[d,h,i]}}var Gk=At((e,t)=>e+t),KB=xb((e,t,n,s)=>({real:e+n,imag:t+s})),dl=Gt(Qs,Gk,KB),XB={kernelName:Qs,backendName:"cpu",kernelFunc:dl};function wb(e,t,n,s,r){let a=x.sizeFromShape(s),o=x.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){let u=e[i];if(u<0)throw new Error("Input x must be non-negative!");u>=r||(a>0?o[u]+=t[i]:o[u]+=1)}return o}function Hk(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],o=_e([r,n],t.dtype);for(let i=0;i<r;i++)for(let u=0;u<a;u++){let c=e.get(i,u);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(s?o.set(1,i,c):t.size>0?o.set(o.get(i,c)+t.get(i,u),i,c):o.set(o.get(i,c)+1,i,c))}return o}function yr(e){return(t,n,s)=>{let r=x.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function nt(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(ve(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,u=i.data.get(o.dataId).values,c=x.sizeFromShape(o.shape),l=n||o.dtype,d=x.getArrayFromDType(l,c);for(let h=0;h<c;++h)d[h]=t(u[h],r);return i.makeTensorInfo(o.shape,l,d)}}function Ci(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(ve(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,u=i.data.get(o.dataId).values,c=n||o.dtype,l=t(u,c,r);return i.makeTensorInfo(o.shape,c,l)}}var qk=yr(e=>Math.ceil(e)),YB=Ci(Or,qk),QB={kernelName:Or,backendName:"cpu",kernelFunc:YB};function kb(e,t,n,s){let r=x.getArrayFromDType(n,x.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(o=>{let i=x.sizeFromShape(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?T.fromUint8ToStringArray(o.vals):o.vals,u=0;for(let c=0;c<o.shape[0];++c){let l=c*t[1]+a;for(let d=0;d<o.shape[1];++d)r[l+d]=i[u++]}a+=o.shape[1]})}return r}var jk=At((e,t)=>e===t?1:0),Kk=Gt(ko,jk,null,"bool"),ZB={kernelName:ko,backendName:"cpu",kernelFunc:Kk},Xk=yr(e=>Math.exp(e)),Yk=Ci(Ur,Xk,"float32"),JB={kernelName:Ur,backendName:"cpu",kernelFunc:Yk},Qk=yr(e=>Math.expm1(e)),e4=Ci(So,Qk),t4={kernelName:So,backendName:"cpu",kernelFunc:e4},Zk=yr(e=>Math.floor(e)),n4=Ci(Gr,Zk),s4={kernelName:Gr,backendName:"cpu",kernelFunc:n4};function Jk(e,t,n,s,r,a,o,i,u){let c=_e([s,a],n);for(let l=0;l<s;l++){let d=[],h=0;for(let p=0;p<r;p++){let f=e[l*r+p];h+=f*o[p],d.push(f)}if(h<0||h>=u/a)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let p=0;p<a;p++)c.values[l*a+p]=t.get(...t.indexToLoc(h*a+p))}return c}function eI(e,t,n){let s=_e(n,e.dtype);for(let r=0;r<s.size;++r){let o=s.indexToLoc(r).slice(),i=o[0],u=o[2],c=t.locToIndex([i,u]);o[2]=t.values[c];let l=e.locToIndex(o);s.values[r]=e.values[l]}return s}var tI=At((e,t)=>e>t?1:0),r4=Gt($o,tI,null,"bool"),a4={kernelName:$o,backendName:"cpu",kernelFunc:r4},nI=At((e,t)=>e>=t?1:0),o4=Gt(jr,nI,null,"bool"),i4={kernelName:jr,backendName:"cpu",kernelFunc:o4},sI=At((e,t)=>e<t?1:0),u4=Gt(Eo,sI,null,"bool"),l4={kernelName:Eo,backendName:"cpu",kernelFunc:u4},rI=At((e,t)=>e<=t?1:0),c4=Gt(_o,rI,null,"bool"),d4={kernelName:_o,backendName:"cpu",kernelFunc:c4};function aI(e,t,n){let s=(t-e)/(n-1),r=x.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var oI=yr(e=>Math.log(e)),h4=Ci(Xr,oI),p4={kernelName:Xr,backendName:"cpu",kernelFunc:h4};function iI(e,t,n,s){let r=x.getTypedArrayFromDType(s,x.sizeFromShape(n));for(let a=0;a<r.length;++a){let o=a*t,i=e[o];for(let u=0;u<t;++u){let c=e[o+u];(Number.isNaN(c)||c>i)&&(i=c)}r[a]=i}return r}var uI=At((e,t)=>Math.max(e,t)),f4=Gt(Qr,uI),m4={kernelName:Qr,backendName:"cpu",kernelFunc:f4},lI=At((e,t)=>Math.min(e,t)),g4=Gt(ta,lI),b4={kernelName:ta,backendName:"cpu",kernelFunc:g4},Ib=At((e,t)=>e*t),y4=xb((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),Wd=Gt(sa,Ib,y4),v4={kernelName:sa,backendName:"cpu",kernelFunc:Wd};function cI(e,t,n){let s=x.createScalarValue(-1,n);return Ib([],t,s,e,n)}function x4(e){let{inputs:t,backend:n}=e,{x:s}=t;ve(s,"neg");let r=n.data.get(s.dataId).values,[a,o]=cI(r,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,a)}var w4={kernelName:Do,backendName:"cpu",kernelFunc:x4},dI=At((e,t)=>e!==t?1:0),k4=Gt(Fo,dI,null,"bool"),I4={kernelName:Fo,backendName:"cpu",kernelFunc:k4};function Sb(e,t,n,s,r){let a=t.length,o=x.sizeFromShape(t),i=x.computeStrides(t),u=x.computeStrides(r),c=x.getTypedArrayFromDType(n,x.sizeFromShape(r));for(let l=0;l<o;++l){let d=x.indexToLoc(l,a,i),h=new Array(d.length);for(let f=0;f<h.length;f++)h[f]=d[s[f]];let p=x.locToIndex(h,a,u);c[p]=e[l]}return c}function Dn(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;ve(r,"transpose");let o=r.shape.length,i=new Array(o);for(let d=0;d<i.length;d++)i[d]=r.shape[a[d]];let u=s.data.get(r.dataId).values,c=Sb(u,r.shape,r.dtype,a,i);return{dataId:s.write(c,i,r.dtype),shape:i,dtype:r.dtype}}var S4={kernelName:va,backendName:"cpu",kernelFunc:Dn};function hI(e,t,n,s){let[r,a]=T.computeOutAndReduceShapes(e,s),o=mn(t,"int32"),i=x.makeZerosTypedArray(x.sizeFromShape(r),o),u=x.sizeFromShape(a);for(let c=0;c<i.length;++c){let l=c*u,d=1;for(let h=0;h<u;++h)d*=n[l+h];i[c]=d}return{outVals:i,outShape:r,outDtype:o}}function C4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;ve(r,"prod");let i=r.shape.length,u=x.parseAxisParam(a,r.shape),c=T.getAxesPermutation(u,i),l=u,d=r,h=[];c!=null&&(d=Dn({inputs:{x:r},backend:n,attrs:{perm:c}}),h.push(d),l=T.getInnerMostAxes(l.length,i));let p=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=hI(d.shape,d.dtype,p,l),b=m;return o&&(b=T.expandShapeToKeepDim(m,u)),h.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.makeTensorInfo(b,g,f)}var N4={kernelName:Bo,backendName:"cpu",kernelFunc:C4};function Cb(e,t,n,s){let r=e===t,a=e<t&&n<0,o=t<e&&n>1;if(r||a||o)return x.makeZerosTypedArray(0,s);let i=Math.abs(Math.ceil((t-e)/n)),u=x.makeZerosTypedArray(i,s);t<e&&n===1&&(n=-1),u[0]=e;for(let c=1;c<u.length;c++)u[c]=u[c-1]+n;return u}var pI=yr(e=>1/Math.sqrt(e)),T4=Ci(ca,pI),$4={kernelName:ca,backendName:"cpu",kernelFunc:T4},A4=yr(e=>1/(1+Math.exp(-e))),fI=nt(ha,e=>1/(1+Math.exp(-e))),E4={kernelName:ha,backendName:"cpu",kernelFunc:fI};function Ud(e,t,n,s,r){let a=It.isSliceContinous(s,t,n),o=x.sizeFromShape(n),i=x.computeStrides(s);if(a){let d=It.computeFlatOffset(t,i);return r==="string"?e.slice(d,d+o):e.subarray(d,d+o)}let u=r==="string"?T.fromUint8ToStringArray(e):e,c=_e(s,r,u),l=_e(n,r);for(let d=0;d<l.size;++d){let h=l.indexToLoc(d),p=h.map((f,m)=>f+t[m]);l.set(c.get(...p),...h)}return r==="string"?T.fromStringArrayToUint8(l.values):l.values}function Xa(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s;ve(r,"slice");let[i,u]=It.parseSliceParams(r,a,o);It.assertParamsValid(r,i,u);let c=n.data.get(r.dataId).values,l=Ud(c,i,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,l)}var _4={kernelName:qo,backendName:"cpu",kernelFunc:Xa};function mI(e,t,n,s,r,a,o){let i=t[0],u=a[0],c=new Array(u),l=new Array(i),d=t[1];if(u===0){if(i!==0)throw new Error(`Received SparseTensor with denseShape[0] = 0 but
         indices.shape[0] = ${i}`);let g=x.getArrayFromDType(n,0),b=x.getArrayFromDType(r,0);return[g,[0,d],b,c,l]}let h=!0,p=0,f=new Array(u).fill(0);for(let g=0;g<i;++g){let b=e[g*d];if(b<0)throw new Error(`indices(${g}, 0) is invalid: ${b} < 0`);if(b>=u)throw new Error(`indices(${g}, 0) is invalid: ${b} >= ${u}`);++f[b],h=h&&b>=p,p=b}let m=!0;for(let g=0;g<u;++g){let b=f[g]===0;c[g]=b,m=m&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){let g=e,b=s;for(let v=0;v<i;++v)l[v]=v;return[g,[i,d],b,c,l]}else{let g=f[u-1],b=x.getArrayFromDType(n,g*d),v=x.getArrayFromDType(r,g),y=new Array(u).fill(0);for(let w=0;w<i;++w){let k=e[w*d],S=y[k],N=(k===0?0:f[k-1])+S;y[k]++;for(let A=0;A<d;++A)b[N*d+A]=e[w*d+A];v[N]=s[w],l[w]=N}for(let w=0;w<u;++w)if(y[w]===0){let S=w===0?0:f[w-1];b[S*d+0]=w;for(let N=1;N<d;++N)b[S*d+N]=0;v[S]=o}return[b,[g,d],v,c,l]}}function gI(e,t,n,s,r){let a=x.sizeFromShape(s),o=t[0],i=r.length,u=[],c=1,l=-1;for(let g=0;g<i;++g){let b=r[g];if(b===-1){if(l!==-1)throw new Error(`only one output dimension may be -1, not both ${l} and ${g}`);l=g,u.push(1)}else{if(b<0)throw new Error(`size ${g} must be non-negative, not ${b}`);c*=b,u.push(b)}}if(l!==-1){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");let g=Math.trunc(a/c);if(c*g!==a)throw new Error(`Input to reshape is a SparseTensor with ${a}
          dense values, but the requested shape requires a multiple of ${c}. inputShape=${s} outputShape= ${u}`);u[l]=g}let d=x.sizeFromShape(u);if(d!==a)throw new Error(`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${d}. inputShape=${s} outputShape=${u}`);let h=s.length,p=[];if(h>0){p[h-1]=1;for(let g=h-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}let m=x.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let b=0;for(let v=0;v<h;++v)b+=e[g*h+v]*p[v];for(let v=0;v<i;++v)m[g*i+v]=Math.trunc(b/f[v]),b%=f[v]}return[m,[o,i],u]}function Nb(e,t,n,s,r,a=!1,o=0){let i=s.length;if(i!==r.length)throw new Error("segmentIds and indices should have same size.");let u=[t[0],e.length/t[0]],c=u[1],d=i>0?r[i-1]+1:0;if(d<0)throw new Error("segment ids must be >= 0");let h=t.slice();h[0]=d;let p=h.reduce((y,w)=>y*w,1),f=x.getArrayFromDType(n,p);if(i===0)return d>0&&f.fill(o),[f,h];if(d<=0)throw new Error("segment ids must be >= 0");let m=0,g=1,b=0,v=r[m];for(;;){let y=0;if(g<i){if(y=r[g],v===y){++g;continue}if(v>=y)throw new Error("segment ids are not increasing")}if(v<0||v>=d)throw new Error(`Segment id ${v} out of range [0, ${d}), possibly because segmentIds input is not sorted.`);v>b&&f.fill(o,b*c,v*c);for(let w=m;w<g;++w){let k=s[w];if(k<0||k>=u[0])throw new Error(`Bad: indices[${w}] == ${s[w]} out of range [0, ${u[0]})`);for(let S=0;S<c;S++)f[v*c+S]+=e[k*c+S]}if(a)for(let w=0;w<c;w++)f[v*c+w]/=g-m;if(m=g,++g,b=v+1,v=y,g>i)break}return b<d&&f.fill(o,b*c,d*c),[f,h]}var R4=yr(e=>Math.sqrt(e)),D4=nt(pa,e=>Math.sqrt(e)),F4={kernelName:pa,backendName:"cpu",kernelFunc:D4},bI=At((e,t)=>{let n=e-t;return n*n}),O4=Gt(ga,bI),P4={kernelName:ga,backendName:"cpu",kernelFunc:O4};function yI(e,t,n,s){let r=_e(e,t.dtype);for(let a=0;a<r.size;a++){let o=r.indexToLoc(a),i=new Array(o.length);for(let u=0;u<i.length;u++)i[u]=o[u]*n[u]+s[u];r.set(t.get(...i),...o)}return r}var L4=class{constructor(e,t,n,s,r,a){this.separator=x.encodeString(e),this.nGramWidths=t,this.leftPad=x.encodeString(n),this.rightPad=x.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let o=0;o<r;++o){let i=this.getPadWidth(a),u=Math.max(0,i-o),c=Math.max(0,i-(r-(o+1))),l=a-(u+c),d=t+(u>0?0:o-i),h=0;h+=u*this.leftPad.length;for(let b=0;b<l;++b)h+=e[d+b].length;h+=c*this.rightPad.length,h+=(u+c+l-1)*this.separator.length,n[s+o]=new Uint8Array(h);let f=n[s+o],m=0,g=b=>b.forEach(v=>f[m++]=v);for(let b=0;b<u;++b)g(this.leftPad),g(this.separator);for(let b=0;b<l-1;++b)g(e[d+b]),g(this.separator);if(l>0){g(e[d+l-1]);for(let b=0;b<c;++b)g(this.separator),g(this.rightPad)}else{for(let b=0;b<c-1;++b)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let u=1;u<s;++u){let c=t[u]>=i;if(c=c&&t[u]<=n,!c)throw new Error(`Invalid split value ${t[u]}, must be in [${i}, ${n}]`);i=t[u]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let r=s-1,a=x.getArrayFromDType("int32",s);if(n===0||s===0){let i=new Array(n);for(let u=0;u<=r;++u)a[u]=0;return[i,a]}a[0]=0;for(let i=1;i<=r;++i){let u=t[i]-t[i-1],c=0;this.nGramWidths.forEach(l=>{c+=this.getNumNGrams(u,l)}),this.preserveShort&&u>0&&c===0&&(c=1),a[i]=a[i-1]+c}let o=new Array(a[r]);for(let i=0;i<r;++i){let u=t[i],c=a[i];if(this.nGramWidths.forEach(l=>{let d=t[i+1]-t[i],h=this.getNumNGrams(d,l);this.createNGrams(e,u,o,c,h,l),c+=h}),this.preserveShort&&c===a[i]){let l=t[i+1]-t[i];if(l===0)continue;let d=l+2*this.padWidth,h=1;this.createNGrams(e,u,o,c,h,d)}}return[o,a]}};function vI(e,t,n,s,r,a,o,i){return new L4(n,s,r,a,o,i).compute(e,t)}function z4(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&s.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(r,a);(!n||o.length!==0)&&s.push(o),r=a+1}}function xI(e,t,n){let s=e.length,r=[],a=0,o=0,i=new Array(s);for(let h=0;h<s;++h){let p=r.length;z4(e[h],t,n,r);let f=r.length-p;i[h]=f,a+=f,o=Math.max(o,f)}let u=x.getArrayFromDType("int32",a*2),c=new Array(a),l=[s,o],d=0;for(let h=0;h<s;++h)for(let p=0;p<i[h];++p)u[d*2]=h,u[d*2+1]=p,c[d]=r[d],++d;return[u,c,l]}function wI(e,t){let n=x.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=x.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var kI=At((e,t)=>e-t),M4=xb((e,t,n,s)=>({real:e-n,imag:t-s})),Tb=Gt(ba,kI,M4),B4={kernelName:ba,backendName:"cpu",kernelFunc:Tb};function II(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=_e(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),o=new Array(e.rank);for(let u=0;u<o.length;u++)o[u]=a[u]%e.shape[u];let i=e.locToIndex(o);s.values[r]=e.values[i]}return s}var hl=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function SI(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let i=s-n+1,u=t-n+1,c=Math.log(i),l=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*l*(i-l)/i)*Math.sign(u-i/2),h=Math.max(n,Math.floor(t-u*l/i+d)),p=Math.min(s,Math.floor(t+(i-u)*l/i+d));SI(e,t,h,p)}let r=e[t],a=n,o=s;for(x.swap(e,n,t),hl(e[s],r)>0&&x.swap(e,n,s);a<o;){for(x.swap(e,a,o),a++,o--;hl(e[a],r)<0;)a=a+1;for(;hl(e[o],r)>0;)o=o-1}hl(e[n],r)===0?x.swap(e,n,o):(o=o+1,x.swap(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function CI(e,t,n,s,r){let a=t[t.length-1],[o,i]=[e.length/a,a],u=x.getTypedArrayFromDType(n,o*s),c=x.getTypedArrayFromDType("int32",o*s);for(let d=0;d<o;d++){let h=d*i,p=e.subarray(h,h+i),f=new Array(p.length);p.forEach((v,y)=>f[y]={value:v,index:y}),s<f.length&&(SI(f,s),f=f.slice(0,s)),r&&f.sort(hl);let m=d*s,g=u.subarray(m,m+s),b=c.subarray(m,m+s);for(let v=0;v<s;v++)g[v]=f[v].value,b[v]=f[v].index}let l=t.slice();return l[l.length-1]=s,[_e(l,n,u),_e(l,"int32",c)]}function NI(e,t,n,s){let r=x.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[r]),u=new tn(a,s,e),c=[],l=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(l)m=e[f].toString();else{let g=[];for(let b=0;b<a[0];b++)for(let v=0;v<a[2];v++)g.push(u.get(b,f,v));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,c.push(f)}}let d=a.slice();d[1]=Object.keys(o).length;let h=new tn(d,s);c.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let b=0;b<a[2];b++)h.set(u.get(g,f,b),g,m,b)});let p=n.slice();return p[r]=d[1],{outputValues:h.values,outputShape:p,indices:i}}Bc("cpu",()=>new Wk,1);var TI=nt(Wr,e=>e>=0?e:Math.exp(e)-1),V4={kernelName:Wr,backendName:"cpu",kernelFunc:TI};function $I(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;ve([r],"leakyRelu");let o=x.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,u=x.getTypedArrayFromDType("float32",o);for(let c=0;c<i.length;c++)u[c]=i[c]<0?a*i[c]:i[c];return n.makeTensorInfo(r.shape,"float32",u)}var W4={kernelName:Ao,backendName:"cpu",kernelFunc:$I},U4=At((e,t)=>e<0?t*e:e);function AI(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;ve([s,r],"prelu");let a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,[i,u]=U4(s.shape,r.shape,a,o,"float32");return n.makeTensorInfo(u,"float32",i)}var G4={kernelName:oa,backendName:"cpu",kernelFunc:AI},EI=nt(ia,e=>Math.max(0,e)),H4={kernelName:ia,backendName:"cpu",kernelFunc:EI},_I=nt(la,e=>Math.min(Math.max(0,e),6)),q4={kernelName:la,backendName:"cpu",kernelFunc:_I};function $b(e,t,n,s,r){if(n==="linear")return Ns({inputs:{x:t},backend:e});if(n==="relu")return EI({inputs:{x:t},backend:e});if(n==="elu")return TI({inputs:{x:t},backend:e});if(n==="relu6")return _I({inputs:{x:t},backend:e});if(n==="prelu")return AI({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return $I({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return fI({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function gt(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=x.sizeFromShape(r.shape),i=x.inferFromImplicitShape(a,o),u=x.sizeFromShape(i);x.assert(o===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let c=n.data.get(r.dataId);if(c.complexTensorInfos!=null){let l=c.complexTensorInfos.real,d=c.complexTensorInfos.imag;l.shape=i,d.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}var j4={kernelName:Vo,backendName:"cpu",kernelFunc:gt};function RI(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;ve([r,a],"matMul");let u=r.shape.length,c=a.shape.length,l=o?r.shape[u-2]:r.shape[u-1],d=i?a.shape[c-1]:a.shape[c-2],h=o?r.shape[u-1]:r.shape[u-2],p=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=x.sizeFromShape(f),b=x.sizeFromShape(m),y=li.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([h,p]);x.assert(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let w=o?[g,l,h]:[g,h,l],k=i?[b,p,d]:[b,d,p],S=gt({inputs:{x:r},backend:n,attrs:{shape:w}}),N=gt({inputs:{x:a},backend:n,attrs:{shape:k}}),A=o?S.shape[1]:S.shape[2],_=o?S.shape[2]:S.shape[1],O=i?N.shape[1]:N.shape[2],R=Math.max(g,b),D=n.data.get(S.dataId).values,C=n.data.get(N.dataId).values,P=x.computeStrides(S.shape),V=x.computeStrides(N.shape),[G,U,q]=o?[P[0],1,P[1]]:[P[0],P[1],1],[Y,Z,J]=i?[1,V[1],V[0]]:[V[1],1,V[0]],ne=_*O,ee=_e([R,_,O],S.dtype),te=ee.values,re=n.blockSize;for(let ce=0;ce<R;ce++)for(let pe=0;pe<_;pe+=re)for(let be=0;be<O;be+=re)for(let we=0;we<A;we+=re){let Ae=Math.min(pe+re,_),Fe=Math.min(be+re,O),Le=Math.min(we+re,A);for(let Be=pe;Be<Ae;Be++)for(let Je=be;Je<Fe;Je++){let et=0;for(let He=we;He<Le;He++){let lt=Math.min(ce,g-1)*G,st=Math.min(ce,b-1)*J,ht=D[lt+Be*U+He*q],bt=C[He*Y+Je*Z+st];et+=ht*bt}te[ce*ne+(Be*O+Je)]+=et}}return n.disposeIntermediateTensorInfo(S),n.disposeIntermediateTensorInfo(N),n.makeTensorInfo(y,ee.dtype,ee.values)}var K4={kernelName:Dr,backendName:"cpu",kernelFunc:RI};function X4(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s,h,p,f,m=[];h=RI({inputs:{a:r,b:a},attrs:{transposeA:u,transposeB:c},backend:n}),o&&(p=dl({inputs:{a:h,b:o},backend:n}),m.push(h),h=p),l&&(f=$b(n,h,l,i,d),m.push(h),h=f);for(let b of m)n.disposeIntermediateTensorInfo(b);return h}var Y4={kernelName:wa,backendName:"cpu",kernelFunc:X4},Q4=nt(uu,e=>Math.acos(e)),Z4={kernelName:uu,backendName:"cpu",kernelFunc:Q4},J4=nt(lu,e=>Math.acosh(e)),eV={kernelName:lu,backendName:"cpu",kernelFunc:J4};function tV(e){let{inputs:t,backend:n}=e,s=t;ve(t,"addN");let r=s.map(i=>n.data.get(i.dataId).values),a=_e(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){let u=r[i];for(let c=0;c<o.length;c++)o[c]+=u[c]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var nV={kernelName:Er,backendName:"cpu",kernelFunc:tV};function sV(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;ve(r,"all");let i=x.parseAxisParam(a,r.shape),u=i,c=T.getAxesPermutation(u,r.shape.length),l=r;c!=null&&(l=Dn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,r.shape.length)),T.assertAxesAreInnerMostDims("all",u,l.shape.length);let[d,h]=T.computeOutAndReduceShapes(l.shape,u),p=x.sizeFromShape(h),f=x.makeZerosTypedArray(x.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let v=b*p,y=m[v];for(let w=0;w<p;++w){let k=m[v+w];y=y&&k}f[b]=y}c!=null&&n.disposeIntermediateTensorInfo(l);let g=n.makeTensorInfo(d,l.dtype,f);if(o){let b=T.expandShapeToKeepDim(d,i),v=gt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),v}return g}var rV={kernelName:cu,backendName:"cpu",kernelFunc:sV};function aV(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;ve(r,"any");let i=x.parseAxisParam(a,r.shape),u=i,c=T.getAxesPermutation(u,r.shape.length),l=r;c!=null&&(l=Dn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,r.shape.length)),T.assertAxesAreInnerMostDims("any",u,l.shape.length);let[d,h]=T.computeOutAndReduceShapes(l.shape,u),p=x.sizeFromShape(h),f=x.makeZerosTypedArray(x.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let v=b*p,y=m[v];for(let w=0;w<p;++w){let k=m[v+w];y=y||k}f[b]=y}c!=null&&n.disposeIntermediateTensorInfo(l);let g=n.makeTensorInfo(d,l.dtype,f);if(o){let b=T.expandShapeToKeepDim(d,i),v=gt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),v}return g}var oV={kernelName:du,backendName:"cpu",kernelFunc:aV};function iV(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;ve(r,"argMax");let o=x.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),u=r,c=[];i!=null&&(u=Dn({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=T.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],T.assertAxesAreInnerMostDims("argMax",o,u.shape.length);let[l,d]=T.computeOutAndReduceShapes(u.shape,o),h=x.sizeFromShape(l),p=x.makeZerosTypedArray(h,"int32"),f=x.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let g=0;g<p.length;++g){let b=g*f,v=m[b],y=0;for(let w=0;w<f;++w){let k=m[b+w];k>v&&(v=k,y=w)}p[g]=y}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(l,"int32",p)}var uV={kernelName:_r,backendName:"cpu",kernelFunc:iV};function lV(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;ve(r,"argMin");let o=x.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),u=r,c=[];i!=null&&(u=Dn({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=T.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],T.assertAxesAreInnerMostDims("argMin",o,u.shape.length);let[l,d]=T.computeOutAndReduceShapes(u.shape,o),h=x.sizeFromShape(l),p=x.makeZerosTypedArray(h,"int32"),f=x.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let g=0;g<p.length;++g){let b=g*f,v=m[b],y=0;for(let w=0;w<f;++w){let k=m[b+w];k<v&&(v=k,y=w)}p[g]=y}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(l,"int32",p)}var cV={kernelName:hu,backendName:"cpu",kernelFunc:lV},dV=nt(pu,e=>Math.asin(e)),hV={kernelName:pu,backendName:"cpu",kernelFunc:dV},pV=nt(fu,e=>Math.asinh(e)),fV={kernelName:fu,backendName:"cpu",kernelFunc:pV},mV=nt(mu,e=>Math.atan(e)),gV={kernelName:mu,backendName:"cpu",kernelFunc:mV},bV=At((e,t)=>Math.atan2(e,t)),yV=Gt(bu,bV),vV={kernelName:bu,backendName:"cpu",kernelFunc:yV},xV=nt(gu,e=>Math.atanh(e)),wV={kernelName:gu,backendName:"cpu",kernelFunc:xV};function Ab(e,t,n,s,r,a){let o=r.strideHeight,i=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,l=r.effectiveFilterHeight,d=r.effectiveFilterWidth,h=r.padInfo.top,p=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=_e(r.outShape,n),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],v=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let w=0;w<r.batchSize;++w){let k=w*b,S=w*s[0];for(let N=0;N<r.inChannels;++N)for(let A=0;A<r.outHeight;++A){let _=A*o-h,O=Math.max(0,_),R=Math.min(r.inHeight,l+_),D=k+A*v;for(let C=0;C<r.outWidth;++C){let P=C*i-p,V=Math.max(0,P),G=Math.min(r.inWidth,d+P),U=f,q=0,Y=0;for(let J=O;J<R;J+=u){let ne=S+J*s[1];for(let ee=V;ee<G;ee+=c){let te=ne+ee*s[2],re=e[te+N];a==="max"&&re>U?U=re:a==="avg"&&(q+=re,Y++)}if(isNaN(U))break}let Z=D+C*y+N;g[Z]=a==="avg"?q/Y:U}}}return m}function DI(e,t,n,s,r=!1,a=!1){let o=_e(s.outShape,"int32"),i=s.strideHeight,u=s.strideWidth,c=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=_e(t,n,e);for(let g=0;g<s.batchSize;++g)for(let b=0;b<s.inChannels;++b)for(let v=0;v<s.outHeight;++v){let y=v*i-p,w=y;for(;w<0;)w+=c;let k=Math.min(s.inHeight,d+y);for(let S=0;S<s.outWidth;++S){let N=S*u-f,A=N;for(;A<0;)A+=l;let _=Math.min(s.inWidth,h+N),O=Number.NEGATIVE_INFINITY,R=-1;for(let D=w;D<k;D+=c){let C=D-y;for(let P=A;P<_;P+=l){let V=P-N,G=m.get(g,D,P,b);G>O&&(O=G,r?R=a?((g*s.inHeight+D)*s.inWidth+P)*s.inChannels+b:(D*s.inWidth+P)*s.inChannels+b:R=C*h+V)}}o.set(R,g,v,S,b)}}return o}function FI(e,t,n,s,r,a){let o=r.strideDepth,i=r.strideHeight,u=r.strideWidth,c=r.dilationDepth,l=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,v=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=_e(r.outShape,n),w=y.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[3]*r.outShape[4],A=r.outShape[4];for(let _=0;_<r.batchSize;++_){let O=_*k,R=_*s[0];for(let D=0;D<r.inChannels;++D)for(let C=0;C<r.outDepth;++C){let P=C*o-m,V=P;for(;V<0;)V+=c;let G=Math.min(r.inDepth,h+P),U=O+C*S;for(let q=0;q<r.outHeight;++q){let Y=q*i-g,Z=Y;for(;Z<0;)Z+=l;let J=Math.min(r.inHeight,p+Y),ne=U+q*N;for(let ee=0;ee<r.outWidth;++ee){let te=ee*u-b,re=te;for(;re<0;)re+=d;let ce=Math.min(r.inWidth,f+te),pe=ne+ee*A,be=v,we=0,Ae=0;for(let Le=V;Le<G;Le+=c){let Be=R+Le*s[1];for(let Je=Z;Je<J;Je+=l){let et=Be+Je*s[2];for(let He=re;He<ce;He+=d){let lt=et+He*s[3],st=e[lt+D];if(a==="max"&&st>be?be=st:a==="avg"&&(we+=st,Ae++),isNaN(be))break}if(isNaN(be))break}if(isNaN(be))break}let Fe=pe+D;w[Fe]=a==="avg"?we/Ae:be}}}}return y}function kV(e,t){let n=_e(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){let v=b*s-h,y=v;for(;y<0;)y+=o;let w=Math.min(t.inDepth,c+v);for(let k=0;k<t.outHeight;++k){let S=k*r-p,N=S;for(;N<0;)N+=i;let A=Math.min(t.inHeight,l+S);for(let _=0;_<t.outWidth;++_){let O=_*a-f,R=O;for(;R<0;)R+=u;let D=Math.min(t.inWidth,d+O),C=Number.NEGATIVE_INFINITY,P=-1;for(let V=y;V<w;V+=o){let G=V-v;for(let U=N;U<A;U+=i){let q=U-S;for(let Y=R;Y<D;Y+=u){let Z=Y-O,J=e.get(m,V,U,Y,g);J>=C&&(C=J,P=G*l*d+q*l+Z)}}}n.set(P,m,b,k,_,g)}}}return n}function IV(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;ve(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=s,c=1;x.assert(T.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let l=T.computePool2DInfo(r.shape,a,o,c,i,u),d;if(l.filterWidth===1&&l.filterHeight===1&&x.arraysEqual(l.inShape,l.outShape))d=Ns({inputs:{x:r},backend:n});else{let h=n.data.get(r.dataId).values,p=x.computeStrides(r.shape),f=Ab(h,r.shape,r.dtype,p,l,"avg");d=n.makeTensorInfo(l.outShape,r.dtype,f.values)}return d}var SV={kernelName:Rr,backendName:"cpu",kernelFunc:IV};function CV(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=s;ve(r,"avgPool3d");let l=T.computePool3DInfo(r.shape,a,o,1,i,u,c),d=n.data.get(r.dataId).values,h=FI(d,r.shape,r.dtype,x.computeStrides(r.shape),l,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}var NV={kernelName:hc,backendName:"cpu",kernelFunc:CV};function TV(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=s;ve([r,a],"avgPool3DGrad");let l=T.computePool3DInfo(a.shape,o,i,1,u,c),d=l.strideDepth,h=l.strideHeight,p=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,b=l.dilationDepth,v=l.dilationHeight,y=l.dilationWidth,w=l.effectiveFilterDepth,k=l.effectiveFilterHeight,S=l.effectiveFilterWidth,N=w-1-l.padInfo.front,A=S-1-l.padInfo.left,_=k-1-l.padInfo.top,O=_e(a.shape,"float32"),R=1/(f*m*g),D=n.bufferSync(r);for(let C=0;C<l.batchSize;++C)for(let P=0;P<l.inChannels;++P)for(let V=0;V<l.inDepth;++V)for(let G=0;G<l.inHeight;++G)for(let U=0;U<l.inWidth;++U){let q=V-N,Y=G-_,Z=U-A,J=0;for(let ne=0;ne<w;ne+=b){let ee=(q+ne)/d;if(!(ee<0||ee>=l.outDepth||Math.floor(ee)!==ee))for(let te=0;te<k;te+=v){let re=(Y+te)/h;if(!(re<0||re>=l.outHeight||Math.floor(re)!==re))for(let ce=0;ce<S;ce+=y){let pe=(Z+ce)/p;if(pe<0||pe>=l.outWidth||Math.floor(pe)!==pe)continue;J+=D.get(C,ee,re,pe,P)}}}O.set(J*R,C,V,G,U,P)}return n.makeTensorInfo(O.shape,O.dtype,O.values)}var $V={kernelName:qp,backendName:"cpu",kernelFunc:TV};function AV(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;ve([r,a],"avgPoolGrad");let{filterSize:i,strides:u,pad:c}=s,l=T.computePool2DInfo(o.shape,i,u,1,c),d=l.strideHeight,h=l.strideWidth,p=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,b=l.effectiveFilterHeight,v=l.effectiveFilterWidth,y=v-1-l.padInfo.left,w=b-1-l.padInfo.top,k=_e(o.shape,"float32"),S=1/(p*f),N=n.data.get(r.dataId).values,A=_e(r.shape,"float32",N);for(let _=0;_<l.batchSize;++_)for(let O=0;O<l.inChannels;++O)for(let R=0;R<l.inHeight;++R)for(let D=0;D<l.inWidth;++D){let C=R-w,P=D-y,V=0;for(let G=0;G<b;G+=m){let U=(C+G)/d;if(!(U<0||U>=l.outHeight||Math.floor(U)!==U))for(let q=0;q<v;q+=g){let Y=(P+q)/h;if(Y<0||Y>=l.outWidth||Math.floor(Y)!==Y)continue;V+=A.get(_,U,Y,O)}}k.set(V*S,_,R,D,O)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var EV={kernelName:Hp,backendName:"cpu",kernelFunc:AV};function _V(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:o,mean:i,variance:u}=t;x.assert(i.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),x.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),x.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ve([r,i,u,a,o],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);let l=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,h=n.data.get(u.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,b=p.length,v=h.length,y=d.length,w=0,k=0,S=0,N=0;for(let A=0;A<l.length;++A)m[A]=f[w++]+(l[A]-d[k++])*p[S++]/Math.sqrt(h[N++]+c),w>=g&&(w=0),k>=y&&(k=0),S>=b&&(S=0),N>=v&&(N=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var RV={kernelName:qr,backendName:"cpu",kernelFunc:_V};function DV(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;ve([r],"batchToSpaceND");let i=a.reduce((b,v)=>b*v),u=T.getReshaped(r.shape,a,i),c=T.getPermuted(u.length,a.length),l=T.getReshapedPermuted(r.shape,a,i),d=T.getSliceBeginCoords(o,a.length),h=T.getSliceSize(l,o,a.length),p=gt({inputs:{x:r},backend:n,attrs:{shape:u}}),f=Dn({inputs:{x:p},backend:n,attrs:{perm:c}}),m=gt({inputs:{x:f},backend:n,attrs:{shape:l}}),g=Xa({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var FV={kernelName:bo,backendName:"cpu",kernelFunc:DV};function OV(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=wb(i,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var PV={kernelName:jp,backendName:"cpu",kernelFunc:OV};function LV(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var zV={kernelName:Kp,backendName:"cpu",kernelFunc:LV},MV=nt(Zs,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),BV={kernelName:Zs,backendName:"cpu",kernelFunc:MV},VV=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(x.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values;for(let c=0;c<i.length;c++){let l=i[c],d=u[c];s[c]=Math.hypot(l,d)}return n.makeOutput(s,t.shape,"float32")},WV={kernelName:fc,backendName:"cpu",kernelFunc:VV};function Ni(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var UV={kernelName:yc,backendName:"cpu",kernelFunc:Ni};function Ti(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=x.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(m=>m.shape),a);if(x.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>x.sizeFromShape(m.shape)>0);if(i.length===1)return Ns({inputs:{x:i[0]},backend:n});let u=i.map(m=>m.shape);if(T.assertParamsConsistent(u,a),i[0].dtype==="complex64"){let m=i.map(w=>Ka({inputs:{input:w},backend:n})),g=i.map(w=>Ni({inputs:{input:w},backend:n})),b=Ti({inputs:m,backend:n,attrs:{axis:a}}),v=Ti({inputs:g,backend:n,attrs:{axis:a}}),y=Tn({inputs:{real:b,imag:v},backend:n});return m.forEach(w=>n.disposeIntermediateTensorInfo(w)),g.forEach(w=>n.disposeIntermediateTensorInfo(w)),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(v),y}let c=i.map(m=>{let g=x.sizeFromShape(m.shape.slice(a));return gt({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),l=c.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=T.computeOutShape(c.map(m=>m.shape),1);let d=c[0].shape[0]===1,h=kb(l,o,t[0].dtype,d),p=T.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(p,t[0].dtype,h);return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var GV={kernelName:yo,backendName:"cpu",kernelFunc:Ti};function OI(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=s;ve([r,a],"conv2d");let d=T.convertConv2DDataFormat(u),h=T.computeConv2DInfo(r.shape,a.shape,o,c,i,l,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,b=h.padInfo.left,v=h.padInfo.top,y=h.dataFormat==="channelsLast",w=new tn(h.outShape,r.dtype),k=x.computeStrides(r.shape),S=x.computeStrides(a.shape),N=k[0],A=y?k[1]:k[2],_=y?k[2]:1,O=y?1:k[1],R=w.strides[0],D=y?w.strides[1]:w.strides[2],C=y?w.strides[2]:1,P=y?1:w.strides[1],V=n.data.get(r.dataId).values,G=n.data.get(a.dataId).values,U=w.values;for(let q=0;q<h.batchSize;++q){let Y=q*N,Z=q*R;for(let J=0;J<h.outHeight;++J){let ne=Z+J*D,ee=J*h.strideHeight-v;for(let te=0;te<p;++te){let re=ee+te*m;if(re<0||re>=h.inHeight)continue;let ce=te*S[0],pe=Y+re*A;for(let be=0;be<h.outWidth;++be){let we=ne+be*C,Ae=be*h.strideWidth-b;for(let Fe=0;Fe<f;++Fe){let Le=Ae+Fe*g;if(Le<0||Le>=h.inWidth)continue;let Be=ce+Fe*S[1],Je=pe+Le*_,et=Be;for(let He=0;He<h.inChannels;++He){let lt=V[Je+He*O];for(let st=0;st<h.outChannels;++st)U[we+st*P]+=lt*G[et+st];et+=h.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,U)}var HV={kernelName:Pr,backendName:"cpu",kernelFunc:OI};function qV(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=s;ve([r,a],"conv2dBackpropFilter");let d=T.convertConv2DDataFormat(u),h=T.computeConv2DInfo(r.shape,l,o,1,i,c,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,b=h.dataFormat==="channelsLast",v=new tn(h.filterShape,"float32"),y=h.padInfo.left,w=h.padInfo.top,k=n.data.get(r.dataId).values,S=n.data.get(a.dataId).values,N=new tn(r.shape,r.dtype,k),A=new tn(a.shape,a.dtype,S);for(let _=0;_<m;++_){let O=Math.max(0,Math.ceil((w-_)/p)),R=Math.min(h.outHeight,(h.inHeight+w-_)/p);for(let D=0;D<g;++D){let C=Math.max(0,Math.ceil((y-D)/f)),P=Math.min(h.outWidth,(h.inWidth+y-D)/f);for(let V=0;V<h.inChannels;++V)for(let G=0;G<h.outChannels;++G){let U=0;for(let q=0;q<h.batchSize;++q)for(let Y=O;Y<R;++Y){let Z=_+Y*p-w;for(let J=C;J<P;++J){let ne=D+J*f-y;b?U+=N.get(q,Z,ne,V)*A.get(q,Y,J,G):U+=N.get(q,V,Z,ne)*A.get(q,G,Y,J)}}v.set(U,_,D,V,G)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var jV={kernelName:Xp,backendName:"cpu",kernelFunc:qV};function KV(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=s;ve([r,a],"conv2dBackpropInput");let d=x.computeStrides(a.shape),h=x.computeStrides(r.shape),p=T.convertConv2DDataFormat(c),f=T.computeConv2DInfo(o,a.shape,i,1,u,l,!1,p),m=new tn(f.inShape,"float32"),g=m.values,b=n.data.get(r.dataId).values,v=n.data.get(a.dataId).values,[y,w,k]=d,{batchSize:S,filterHeight:N,filterWidth:A,inChannels:_,inHeight:O,inWidth:R,outChannels:D,outHeight:C,outWidth:P,strideHeight:V,strideWidth:G}=f;p=f.dataFormat;let U=N-1-f.padInfo.top,q=A-1-f.padInfo.left,Y=p==="channelsLast",Z=m.strides[0],J=Y?m.strides[1]:m.strides[2],ne=Y?m.strides[2]:1,ee=Y?1:m.strides[1],te=h[0],re=Y?h[1]:h[2],ce=Y?h[2]:1,pe=Y?1:h[1];for(let be=0;be<S;++be)for(let we=0;we<_;++we)for(let Ae=0;Ae<O;++Ae){let Fe=Ae-U,Le=Math.max(0,Math.ceil(Fe/V)),Be=Math.min(C,(N+Fe)/V);for(let Je=0;Je<R;++Je){let et=Je-q,He=Math.max(0,Math.ceil(et/G)),lt=Math.min(P,(A+et)/G),st=0;for(let bt=Le;bt<Be;++bt){let An=bt*V-Fe;for(let Ht=He;Ht<lt;++Ht){let Xn=Ht*G-et,sn=te*be+re*bt+ce*Ht,In=y*(N-1-An)+w*(A-1-Xn)+k*we;for(let Ln=0;Ln<D;++Ln){let En=b[sn+pe*Ln],qt=v[In+Ln];st+=En*qt}}}let ht=Z*be+J*Ae+ne*Je+ee*we;g[ht]=st}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var XV={kernelName:Lr,backendName:"cpu",kernelFunc:KV};function YV(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:u}=s;ve([r,a],"conv3d");let c=T.computeConv3DInfo(r.shape,a.shape,o,u,i),{filterDepth:l,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,b=g.front,v=g.left,y=g.top,w=new tn(c.outShape,r.dtype),k=n.data.get(r.dataId).values,S=n.data.get(a.dataId).values,N=w.values,A=x.computeStrides(r.shape),_=x.computeStrides(a.shape);for(let O=0;O<c.batchSize;++O){let R=O*A[0],D=O*w.strides[0];for(let C=0;C<c.outDepth;++C){let P=D+C*w.strides[1],V=C*c.strideDepth-b;for(let G=0;G<l;++G){let U=V+G*p;if(U<0||U>=c.inDepth)continue;let q=G*_[0],Y=R+U*A[1];for(let Z=0;Z<c.outHeight;++Z){let J=P+Z*w.strides[2],ne=Z*c.strideHeight-y;for(let ee=0;ee<d;++ee){let te=ne+ee*f;if(te<0||te>=c.inHeight)continue;let re=q+ee*_[1],ce=Y+te*A[2];for(let pe=0;pe<c.outWidth;++pe){let be=J+pe*c.outChannels,we=pe*c.strideWidth-v;for(let Ae=0;Ae<h;++Ae){let Fe=we+Ae*m;if(Fe<0||Fe>=c.inWidth)continue;let Le=re+Ae*_[2],Be=ce+Fe*c.inChannels,Je=Le;for(let et=0;et<c.inChannels;++et){let He=k[Be+et];for(let lt=0;lt<c.outChannels;++lt)N[be+lt]+=He*S[Je+lt];Je+=c.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var QV={kernelName:mc,backendName:"cpu",kernelFunc:YV};function ZV(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:u}=s;ve([r,a],"conv3dBackpropFilterV2");let c=x.computeStrides(r.shape),l=x.computeStrides(a.shape),d=T.computeConv3DInfo(r.shape,u,o,1,i),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,b=d.filterWidth,v=new tn(d.filterShape,"float32"),y=v.values,[w,k,S,N]=v.strides,A=n.data.get(a.dataId).values,[_,O,R,D]=l,C=n.data.get(r.dataId).values,[P,V,G,U]=c,q=d.padInfo.front,Y=d.padInfo.left,Z=d.padInfo.top;for(let J=0;J<m;++J){let ne=Math.max(0,Math.ceil((q-J)/h)),ee=Math.min(d.outDepth,(d.inDepth+q-J)/h),te=J*w;for(let re=0;re<g;++re){let ce=Math.max(0,Math.ceil((Z-re)/p)),pe=Math.min(d.outHeight,(d.inHeight+Z-re)/p),be=re*k+te;for(let we=0;we<b;++we){let Ae=Math.max(0,Math.ceil((Y-we)/f)),Fe=Math.min(d.outWidth,(d.inWidth+Y-we)/f),Le=we*S+be;for(let Be=0;Be<d.inChannels;++Be){let Je=Be*N+Le;for(let et=0;et<d.outChannels;++et){let He=0;for(let lt=0;lt<d.batchSize;++lt){let st=lt*P,ht=lt*_;for(let bt=ne;bt<ee;++bt){let Ht=(J+bt*h-q)*V+st,Xn=bt*O+ht;for(let sn=ce;sn<pe;++sn){let Ln=(re+sn*p-Z)*G+Ht,En=sn*R+Xn;for(let qt=Ae;qt<Fe;++qt){let Jt=(we+qt*f-Y)*U+Ln,ds=qt*D+En;He+=C[Jt+Be]*A[ds+et]}}}}y[Je+et]=He}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var JV={kernelName:Yp,backendName:"cpu",kernelFunc:ZV};function eW(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:u}=s;ve([r],"conv3dBackpropInputV2");let c=x.computeStrides(r.shape),l=x.computeStrides(a.shape),d=T.computeConv3DInfo(u,a.shape,i,1,o),h=new tn(d.inShape,"float32"),p=h.values,[f,m,g,b]=h.strides,v=n.data.get(r.dataId).values,[y,w,k,S]=c,N=n.data.get(a.dataId).values,[A,_,O,R]=l,{batchSize:D,filterDepth:C,filterHeight:P,filterWidth:V,inChannels:G,inDepth:U,inHeight:q,inWidth:Y,outChannels:Z,outDepth:J,outHeight:ne,outWidth:ee,strideDepth:te,strideHeight:re,strideWidth:ce}=d,pe=C-1-d.padInfo.front,be=P-1-d.padInfo.top,we=V-1-d.padInfo.left;for(let Ae=0;Ae<D;++Ae)for(let Fe=0;Fe<G;++Fe)for(let Le=0;Le<U;++Le){let Be=Le-pe,Je=Math.max(0,Math.ceil(Be/te)),et=Math.min(J,(C+Be)/te);for(let He=0;He<q;++He){let lt=He-be,st=Math.max(0,Math.ceil(lt/re)),ht=Math.min(ne,(P+lt)/re);for(let bt=0;bt<Y;++bt){let An=bt-we,Ht=Math.max(0,Math.ceil(An/ce)),Xn=Math.min(ee,(V+An)/ce),sn=0;for(let In=Je;In<et;++In){let Ln=In*te-Be;for(let En=st;En<ht;++En){let qt=En*re-lt;for(let cs=Ht;cs<Xn;++cs){let Jt=cs*ce-An,ds=y*Ae+w*In+k*En+S*cs,hs=A*(C-1-Ln)+_*(P-1-qt)+O*(V-1-Jt)+R*Fe;for(let Ws=0;Ws<Z;++Ws){let ji=v[ds+Ws],Yn=N[hs+Ws];sn+=ji*Yn}}}}p[f*Ae+m*Le+g*He+b*bt+Fe]=sn}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}var tW={kernelName:Qp,backendName:"cpu",kernelFunc:eW},nW=nt(zr,e=>Math.cos(e)),sW={kernelName:zr,backendName:"cpu",kernelFunc:nW},rW=nt(Mr,e=>Math.cosh(e)),aW={kernelName:Mr,backendName:"cpu",kernelFunc:rW};function oW(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:c}=s,[l,d,h,p]=r.shape,f=a.shape[0],[m,g]=i,b=_e([f,m,g,p],"float32"),v=n.data.get(a.dataId).values,y=n.data.get(o.dataId).values,w=n.data.get(r.dataId).values,k=x.computeStrides(r.shape),S=x.computeStrides(b.shape);for(let N=0;N<f;N++){let A=N*4,_=v[A],O=v[A+1],R=v[A+2],D=v[A+3],C=y[N];if(C>=l)continue;let P=m>1?(R-_)*(d-1)/(m-1):0,V=g>1?(D-O)*(h-1)/(g-1):0;for(let G=0;G<m;G++){let U=m>1?_*(d-1)+G*P:.5*(_+R)*(d-1);if(U<0||U>d-1){for(let q=0;q<g;q++)for(let Y=0;Y<p;Y++){let Z=Y+q*S[2]+G*S[1]+N*S[0];b.values[Z]=c}continue}if(u==="bilinear"){let q=Math.floor(U),Y=Math.ceil(U),Z=U-q;for(let J=0;J<g;J++){let ne=g>1?O*(h-1)+J*V:.5*(O+D)*(h-1);if(ne<0||ne>h-1){for(let ce=0;ce<p;ce++){let pe=ce+J*S[2]+G*S[1]+N*S[0];b.values[pe]=c}continue}let ee=Math.floor(ne),te=Math.ceil(ne),re=ne-ee;for(let ce=0;ce<p;ce++){let pe=ce+ee*k[2]+q*k[1]+C*k[0],be=w[pe];pe=ce+te*k[2]+q*k[1]+C*k[0];let we=w[pe];pe=ce+ee*k[2]+Y*k[1]+C*k[0];let Ae=w[pe];pe=ce+te*k[2]+Y*k[1]+C*k[0];let Fe=w[pe],Le=be+(we-be)*re,Be=Ae+(Fe-Ae)*re;pe=ce+J*S[2]+G*S[1]+N*S[0],b.values[pe]=Le+(Be-Le)*Z}}}else for(let q=0;q<g;++q){let Y=g>1?O*(h-1)+q*V:.5*(O+D)*(h-1);if(Y<0||Y>h-1){for(let ne=0;ne<p;ne++){let ee=ne+q*S[2]+G*S[1]+N*S[0];b.values[ee]=c}continue}let Z=Math.round(Y),J=Math.round(U);for(let ne=0;ne<p;ne++){let ee=ne+Z*k[2]+J*k[1]+C*k[0],te=ne+q*S[2]+G*S[1]+N*S[0];b.values[te]=w[ee]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var iW={kernelName:xo,backendName:"cpu",kernelFunc:oW};function uW(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;ve(r,"cumsum");let u=T.getAxesPermutation([a],r.shape.length),c=r;u!=null&&(c=Dn({inputs:{x:r},backend:n,attrs:{perm:u}}));let l=T.getInnerMostAxes(1,r.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);let d=mn(c.dtype,"int32"),h=x.makeZerosTypedArray(x.sizeFromShape(c.shape),d),p=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(b,v)=>b+f-v-1:(b,v)=>b+v;for(let b=0;b<p.length;b+=f)for(let v=0;v<f;v++){let y=m(b,v);if(v===0)h[y]=o?0:p[y];else{let w=m(b,v-1);h[y]=o?p[w]+h[w]:p[y]+h[w]}}let g=n.makeTensorInfo(c.shape,d,h);if(u!=null){let b=T.getUndoAxesPermutation(u),v=Dn({inputs:{x:g},backend:n,attrs:{perm:b}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),v}return g}var lW={kernelName:vo,backendName:"cpu",kernelFunc:uW};function cW(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,l=wb(u,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,l)}else if(r.shape.length===2){let u=n.bufferSync(r),c=n.bufferSync(a),l=Hk(u,c,o,i);return n.makeTensorInfo(l.shape,a.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var dW={kernelName:Zp,backendName:"cpu",kernelFunc:cW};function hW(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s;x.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);let i=r.shape[0],u=r.shape[1],c=r.shape[2],l=r.shape[3],d=u*a,h=c*a,p=l/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(i*d*h*p),g=0;for(let b=0;b<i;++b)for(let v=0;v<d;++v){let y=Math.floor(v/a),w=v%a;for(let k=0;k<h;++k){let S=Math.floor(k/a),N=k%a,A=(w*a+N)*p;for(let _=0;_<p;++_){let R=_+A+l*(S+c*(y+u*b));m[g++]=f[R]}}}return n.makeTensorInfo([i,d,h,p],r.dtype,m)}var pW={kernelName:wo,backendName:"cpu",kernelFunc:hW};function PI(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:c}=s;ve([r,a],"depthwiseConv2DNative");let l=x.computeStrides(r.shape),d=x.computeStrides(a.shape),h=u;h==null&&(h=[1,1]),x.assert(T.eitherStridesOrDilationsAreOne(o,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`);let p=T.computeConv2DInfo(r.shape,a.shape,o,h,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:v}=p,y=v.left,w=v.top,k=p.outChannels/p.inChannels,S=new tn(p.outShape,r.dtype),N=n.data.get(r.dataId).values,A=n.data.get(a.dataId).values,_=S.values;for(let O=0;O<p.batchSize;++O){let R=O*l[0],D=O*S.strides[0];for(let C=0;C<p.outHeight;++C){let P=D+C*S.strides[1],V=C*p.strideHeight-w;for(let G=0;G<f;++G){let U=V+G*g;if(U<0||U>=p.inHeight)continue;let q=G*d[0],Y=R+U*l[1];for(let Z=0;Z<p.outWidth;++Z){let J=P+Z*S.strides[2],ne=Z*p.strideWidth-y;for(let ee=0;ee<m;++ee){let te=ne+ee*b;if(te<0||te>=p.inWidth)continue;let re=q+ee*d[1],ce=Y+te*p.inChannels,pe=J,be=re;for(let we=0;we<p.inChannels;++we){let Ae=N[ce+we];for(let Fe=0;Fe<k;++Fe)_[pe+Fe]+=Ae*A[be+Fe];pe+=k,be+=k}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}var fW={kernelName:Br,backendName:"cpu",kernelFunc:PI};function mW(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=s;ve([r,a],"depthwiseConv2dNativeBackpropFilter");let d=T.computeConv2DInfo(r.shape,l,o,i,u,c,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new tn(d.filterShape,"float32"),b=d.padInfo.left,v=d.padInfo.top,y=d.outChannels/d.inChannels,w=n.data.get(r.dataId).values,k=new tn(r.shape,r.dtype,w),S=n.data.get(a.dataId).values,N=new tn(a.shape,a.dtype,S);for(let A=0;A<f;++A){let _=Math.max(0,Math.ceil((v-A)/h)),O=Math.min(d.outHeight,(d.inHeight+v-A)/h);for(let R=0;R<m;++R){let D=Math.max(0,Math.ceil((b-R)/p)),C=Math.min(d.outWidth,(d.inWidth+b-R)/p);for(let P=0;P<d.outChannels;++P){let V=Math.trunc(P/y),G=P%y,U=0;for(let q=0;q<d.batchSize;++q)for(let Y=_;Y<O;++Y){let Z=A+Y*h-v;for(let J=D;J<C;++J){let ne=R+J*p-b;U+=k.get(q,Z,ne,V)*N.get(q,Y,J,P)}}g.set(U,A,R,V,G)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var gW={kernelName:Jp,backendName:"cpu",kernelFunc:mW};function bW(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=s;ve([r,a],"depthwiseConv2DNativeBackpropInput");let d=x.computeStrides(r.shape),h=x.computeStrides(a.shape),p=T.computeConv2DInfo(l,a.shape,o,i,u,c,!0),f=new tn(p.inShape,"float32"),m=f.values,[g,b,v]=f.strides,y=n.data.get(r.dataId).values,[w,k,S]=d,N=n.data.get(a.dataId).values,[A,_,O]=h,{batchSize:R,filterHeight:D,filterWidth:C,inChannels:P,inHeight:V,inWidth:G,outChannels:U,outHeight:q,outWidth:Y,strideHeight:Z,strideWidth:J}=p,ne=D-1-p.padInfo.top,ee=C-1-p.padInfo.left,te=U/P;for(let re=0;re<R;++re)for(let ce=0;ce<P;++ce)for(let pe=0;pe<V;++pe){let be=pe-ne,we=Math.max(0,Math.ceil(be/Z)),Ae=Math.min(q,(D+be)/Z);for(let Fe=0;Fe<G;++Fe){let Le=Fe-ee,Be=Math.max(0,Math.ceil(Le/J)),Je=Math.min(Y,(C+Le)/J),et=0;for(let He=we;He<Ae;++He){let lt=He*Z-be;for(let st=Be;st<Je;++st){let ht=st*J-Le,bt=w*re+k*He+S*st,An=A*(D-1-lt)+_*(C-1-ht)+O*ce;for(let Ht=0;Ht<te;++Ht){let Xn=ce*te+Ht,sn=y[bt+Xn],In=N[An+Ht];et+=sn*In}}}m[g*re+b*pe+v*Fe+ce]=et}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var yW={kernelName:ef,backendName:"cpu",kernelFunc:bW};function vW(e){let{inputs:t,backend:n}=e,{x:s}=t,r=x.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,o=_e([r,r],s.dtype),i=o.values;for(let c=0;c<a.length;c++)i[c*r+c]=a[c];let u=[...s.shape,...s.shape];return n.makeTensorInfo(u,o.dtype,o.values)}var xW={kernelName:tf,backendName:"cpu",kernelFunc:vW},wW={kernelName:gc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:o,dilations:i}=n,u=t,c=u.data.get(s.dataId).values,l=s.shape.length,d=u.data.get(r.dataId).values,h=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:v,padInfo:y,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:N,dilationHeight:A,dilationWidth:_,outShape:O}=T.computeDilation2DInfo(s.shape,r.shape,a,o,"NHWC",i),R=x.sizeFromShape(O),D=O.length,C=x.getArrayFromDType(s.dtype,R);for(let V=0;V<p;++V)for(let G=0;G<b;++G){let U=G*w-y.top;for(let q=0;q<v;++q){let Y=q*k-y.left;for(let Z=0;Z<g;++Z){let J=Number.MIN_SAFE_INTEGER;for(let ee=0;ee<S;++ee){let te=U+ee*A;if(te>=0&&te<f)for(let re=0;re<N;++re){let ce=Y+re*_;if(ce>=0&&ce<m){let pe=x.locToIndex([V,te,ce,Z],l,x.computeStrides(s.shape)),be=x.locToIndex([ee,re,Z],h,x.computeStrides(r.shape)),we=c[pe]+d[be];we>J&&(J=we)}}}let ne=x.locToIndex([V,G,q,Z],D,x.computeStrides(O));C[ne]=J}}}return{dataId:u.write(x.toTypedArray(C,s.dtype),O,s.dtype),shape:O,dtype:s.dtype}}},kW={kernelName:sf,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:u}=n,c=t,l=x.toNestedArray(s.shape,c.data.get(s.dataId).values),d=x.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:v,strideHeight:y,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:N,dilationWidth:A,outShape:_}=T.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",u);x.assert(a.rank===_.length,()=>`Error in ${sf}, dy must have the same rank as output ${_.length}, but got ${a.rank}`);let O=x.toNestedArray(_,c.data.get(a.dataId).values),R=x.makeZerosNestedTypedArray(r.shape,r.dtype);for(let C=0;C<h;++C)for(let P=0;P<g;++P){let V=P*y-v.top;for(let G=0;G<b;++G){let U=G*w-v.left;for(let q=0;q<m;++q){let Y=Number.MIN_SAFE_INTEGER,Z=0,J=0;for(let ne=0;ne<k;++ne){let ee=V+ne*N;if(ee>=0&&ee<p)for(let te=0;te<S;++te){let re=U+te*A;if(re>=0&&re<f){let ce=l[C][ee][re][q]+d[ne][te][q];ce>Y&&(Y=ce,Z=ne,J=te)}}}R[Z][J][q]+=O[C][P][G][q]}}}return{dataId:c.write(x.toTypedArray(R,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},IW={kernelName:nf,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:u}=n,c=t,l=x.toNestedArray(s.shape,c.data.get(s.dataId).values),d=x.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:v,strideHeight:y,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:N,dilationWidth:A,outShape:_}=T.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",u);x.assert(a.rank===_.length,()=>`Error in ${nf}, dy must have the same rank as output ${_.length}, but got ${a.rank}`);let O=x.toNestedArray(_,c.data.get(a.dataId).values),R=x.makeZerosNestedTypedArray(s.shape,s.dtype);for(let C=0;C<h;++C)for(let P=0;P<g;++P){let V=P*y-v.top;for(let G=0;G<b;++G){let U=G*w-v.left;for(let q=0;q<m;++q){let Y=Number.MIN_SAFE_INTEGER,Z=V<0?0:V,J=U<0?0:U;for(let ne=0;ne<k;++ne){let ee=V+ne*N;if(ee>=0&&ee<p)for(let te=0;te<S;++te){let re=U+te*A;if(re>=0&&re<f){let ce=l[C][ee][re][q]+d[ne][te][q];ce>Y&&(Y=ce,Z=ee,J=re)}}}R[C][Z][J][q]+=O[C][P][G][q]}}}return{dataId:c.write(x.toTypedArray(R,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function pl(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;ve(r,"sum");let i;r.dtype==="bool"?i=br({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):i=Ns({inputs:{x:r},backend:n});let u=i.shape.length,c=x.parseAxisParam(a,i.shape),l=T.getAxesPermutation(c,u),d=c,h=i;l!=null&&(h=Dn({inputs:{x:i},backend:n,attrs:{perm:l}}),d=T.getInnerMostAxes(d.length,u)),T.assertAxesAreInnerMostDims("sum",d,h.shape.length);let[p,f]=T.computeOutAndReduceShapes(h.shape,d),m=T.upcastType(h.dtype,"int32"),g=Vd(n,p,m),b=x.sizeFromShape(f),v=n.data.get(g.dataId).values,y=n.data.get(h.dataId).values;for(let w=0;w<v.length;++w){let k=w*b,S=0;for(let N=0;N<b;++N)S+=y[k+N];v[w]=S}if(o){let w=T.expandShapeToKeepDim(g.shape,c),k=g;g=gt({inputs:{x:g},backend:n,attrs:{shape:w}}),n.disposeIntermediateTensorInfo(k)}return n.disposeIntermediateTensorInfo(i),l!=null&&n.disposeIntermediateTensorInfo(h),g}var SW={kernelName:fa,backendName:"cpu",kernelFunc:pl};function CW(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:u}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,u,a);let{path:c,steps:l}=T.getEinsumComputePath(i,u),d=l.length,h=null,p=o.length,f=[];for(let m=0;m<d;++m){for(let g of l[m]){let{permutationIndices:b,expandDims:v}=T.getEinsumPermutation(p,u[g]),y;T.isIdentityPermutation(b)?y=a[g]:(y=Dn({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(y));let w=y.shape.slice();for(let k=0;k<v.length;++k)w.splice(v[k],0,1);x.arraysEqual(y.shape,w)||(y=gt({inputs:{x:y},backend:n,attrs:{shape:w}}),f.push(y)),h===null?h=y:(h=Wd({inputs:{a:y,b:h},backend:n}),f.push(h))}m<d-1&&(c[m]>=0&&(h=pl({inputs:{x:h},backend:n,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(h)),p--)}for(let m of f)m!==h&&n.disposeIntermediateTensorInfo(m);return h}var NW={kernelName:bc,backendName:"cpu",kernelFunc:CW};function TW(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;ve([s,r],"eluGrad");let a=new Float32Array(x.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values;for(let u=0;u<o.length;++u){let c=o[u];c>=1?a[u]=i[u]:a[u]=i[u]*(c+1)}return n.makeTensorInfo(r.shape,"float32",a)}var $W={kernelName:rf,backendName:"cpu",kernelFunc:TW},AW=T.ERF_P,EW=T.ERF_A1,_W=T.ERF_A2,RW=T.ERF_A3,DW=T.ERF_A4,FW=T.ERF_A5,OW=nt(yu,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+AW*n);return t*(1-((((FW*s+DW)*s+RW)*s+_W)*s+EW)*s*Math.exp(-n*n))}),PW={kernelName:yu,backendName:"cpu",kernelFunc:OW};function Gd(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,o=r.shape.length,i=r.shape.slice(),u=a;return a<0&&(x.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+a+1),i.splice(u,0,1),gt({inputs:{x:r},backend:n,attrs:{shape:i}})}var LW={kernelName:Io,backendName:"cpu",kernelFunc:Gd},zW=At((e,t)=>e/t),Eb=Gt(Vr,zW),_b={kernelName:Vr,backendName:"cpu",kernelFunc:Eb};function LI(e,t,n){let s=e.shape,r=s[0],a=s[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,c=[r,a],l=x.sizeFromShape(c),d=x.getTypedArrayFromDType("float32",l),h=x.getTypedArrayFromDType("float32",l);for(let g=0;g<r;g++){let b=Xa({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),v=Xa({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,a]}}),y=Tn({inputs:{real:b,imag:v},backend:n}),{real:w,imag:k}=MW(y,t,n),S=T.mergeRealAndImagArrays(w,k);for(let N=0;N<a;N++){let A=T.getComplexWithIndex(S,N);d[g*a+N]=A.real,h[g*a+N]=A.imag}n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(y)}let p=n.makeTensorInfo(c,"float32",d),f=n.makeTensorInfo(c,"float32",h),m=Tn({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function MW(e,t,n){let s=x.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(BW(s)){let i=Rb(a,o,s,t,n),u=[e.shape[0],e.shape[1]];if(t){let c=n.makeTensorInfo(u,"float32",i.real),l=n.makeTensorInfo(u,"float32",i.imag),d=n.makeTensorInfo([],"float32",x.createScalarValue(s,"float32")),h=Ns({inputs:{x:d},backend:n}),p=_b.kernelFunc({inputs:{a:c,b:d},backend:n}),f=_b.kernelFunc({inputs:{a:l,b:h},backend:n}),m=n.data.get(p.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=T.mergeRealAndImagArrays(a,o),u=VW(i,s,t);return T.splitRealAndImagArrays(u)}}function BW(e){return(e&e-1)==0}function Rb(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=T.mergeRealAndImagArrays(e,t),o=n/2,i=T.complexWithEvenIndex(a),u=i.real,c=i.imag,l=[u.length],d=r.makeTensorInfo(l,"float32",u),h=r.makeTensorInfo(l,"float32",c),p=Tn({inputs:{real:d,imag:h},backend:r}),f=T.complexWithOddIndex(a),m=f.real,g=f.imag,b=[m.length],v=r.makeTensorInfo(b,"float32",m),y=r.makeTensorInfo(b,"float32",g),w=Tn({inputs:{real:v,imag:y},backend:r}),k=Rb(u,c,o,s,r),S=k.real,N=k.imag,A=[S.length],_=r.makeTensorInfo(A,"float32",S),O=r.makeTensorInfo(A,"float32",N),R=Tn({inputs:{real:_,imag:O},backend:r}),D=Rb(m,g,o,s,r),C=D.real,P=D.imag,V=[C.length],G=r.makeTensorInfo(V,"float32",C),U=r.makeTensorInfo(V,"float32",P),q=Tn({inputs:{real:G,imag:U},backend:r}),Y=T.exponents(n,s),Z=[Y.real.length],J=r.makeTensorInfo(Z,"float32",Y.real),ne=r.makeTensorInfo(Z,"float32",Y.imag),ee=Tn({inputs:{real:J,imag:ne},backend:r}),te=Wd({inputs:{a:ee,b:q},backend:r}),re=dl({inputs:{a:R,b:te},backend:r}),ce=Tb({inputs:{a:R,b:te},backend:r}),pe=Ka({inputs:{input:re},backend:r}),be=Ka({inputs:{input:ce},backend:r}),we=Ni({inputs:{input:re},backend:r}),Ae=Ni({inputs:{input:ce},backend:r}),Fe=Ti({inputs:[pe,be],backend:r,attrs:{axis:0}}),Le=Ti({inputs:[we,Ae],backend:r,attrs:{axis:0}}),Be=r.data.get(Fe.dataId).values,Je=r.data.get(Le.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(ce),r.disposeIntermediateTensorInfo(pe),r.disposeIntermediateTensorInfo(we),r.disposeIntermediateTensorInfo(be),r.disposeIntermediateTensorInfo(Ae),r.disposeIntermediateTensorInfo(Fe),r.disposeIntermediateTensorInfo(Le),{real:Be,imag:Je}}function VW(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,o=0;for(let i=0;i<t;i++){let u=T.exponent(r*i,t,n),c=T.getComplexWithIndex(e,i);a+=c.real*u.real-c.imag*u.imag,o+=c.real*u.imag+c.imag*u.real}n&&(a/=t,o/=t),T.assignToTypedArray(s,a,o,r)}return s}function WW(e){let{inputs:t,backend:n}=e,{input:s}=t,r=x.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=gt({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),u=LI(i,!1,n),c=gt({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}var UW={kernelName:af,backendName:"cpu",kernelFunc:WW};function Db(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,o=a||x.inferDtype(r),i=x.getArrayFromDType(o,x.sizeFromShape(s));return HW(i,r,o),t.makeTensorInfo(s,o,i)}var GW={kernelName:vu,backendName:"cpu",kernelFunc:Db};function HW(e,t,n){e.fill(t)}var qW={kernelName:Co,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=x.getTypedArrayFromDType(s.dtype,x.sizeFromShape(s.shape)),[o,i,u,c]=s.shape,l=r.data.get(s.dataId).values;for(let h=0;h<o;h++){let p=h*u*i*c;for(let f=0;f<i;f++){let m=f*(u*c);for(let g=0;g<u;g++){let b=g*c;for(let v=0;v<c;v++){let y=Math.round(u-g-1),w=p+m+b+v,k=l[w];if(y>=0&&y<u){let S=y*c,N=p+m+S+v;k=l[N]}a[w]=k}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},jW=At((e,t)=>Math.floor(e/t)),KW=Gt(Hr,jW,null,"int32"),XW={kernelName:Hr,backendName:"cpu",kernelFunc:KW};function YW(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=OI({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(o){let g=m;m=dl({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(p){let g=m;m=$b(n,m,p,i,f),n.disposeIntermediateTensorInfo(g)}return m}var QW={kernelName:ka,backendName:"cpu",kernelFunc:YW};function ZW(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=PI({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(o){let g=m;m=dl({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(p){let g=m;m=$b(n,m,p,i,f),n.disposeIntermediateTensorInfo(g)}return m}var JW={kernelName:Ia,backendName:"cpu",kernelFunc:ZW};function eU(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=x.sizeFromShape(s.shape),o=r.shape,i=o[o.length-1],[u,c,l,d]=T.prepareAndValidate(s,r);if(c===0)return n.makeTensorInfo(u,s.dtype,[]);let h=n.data.get(r.dataId).values,p=n.bufferSync(s),f=Jk(h,p,s.dtype,c,i,l,d,s.shape,a);return n.makeTensorInfo(u,s.dtype,f.values)}var tU={kernelName:To,backendName:"cpu",kernelFunc:eU};function nU(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s;ve([r,a],"gatherV2");let u=x.parseAxisParam(o,r.shape)[0],c=n.data.get(a.dataId).values,l=r.shape[u];for(let w=0;w<c.length;++w){let k=c[w];x.assert(k<=l-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${l-1}]`)}let d=i;i==null&&(d=0);let h=x.sizeFromShape(a.shape),p=T.segment_util.collectGatherOpShapeInfo(r,a,u,d),f=gt({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=gt({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],b=n.bufferSync(m),v=n.bufferSync(f),y=eI(v,b,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}var sU={kernelName:No,backendName:"cpu",kernelFunc:nU};function rU(e){let{inputs:t,backend:n}=e,{input:s}=t,r=x.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=gt({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),u=LI(i,!0,n),c=gt({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}var aU={kernelName:of,backendName:"cpu",kernelFunc:rU},oU=nt(xu,e=>Number.isFinite(e)?1:0,"bool"),iU={kernelName:xu,backendName:"cpu",kernelFunc:oU},uU=nt(wu,e=>Math.abs(e)===1/0?1:0,"bool"),lU={kernelName:wu,backendName:"cpu",kernelFunc:uU},cU=nt(ku,e=>Number.isNaN(e)?1:0,"bool"),dU={kernelName:ku,backendName:"cpu",kernelFunc:cU};function hU(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=aI(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var pU={kernelName:Ky,backendName:"cpu",kernelFunc:hU},fU=nt(Iu,e=>Math.log1p(e)),mU={kernelName:Iu,backendName:"cpu",kernelFunc:fU},gU=At((e,t)=>e&&t),bU=Gt(Ro,gU,null,"bool"),yU={kernelName:Ro,backendName:"cpu",kernelFunc:bU},vU=nt(Su,e=>e?0:1,"bool"),xU={kernelName:Su,backendName:"cpu",kernelFunc:vU},wU=At((e,t)=>e||t),kU=Gt(vc,wU,null,"bool"),IU={kernelName:vc,backendName:"cpu",kernelFunc:kU};function SU(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:u}=s;ve(r,"LRN");let c=r.shape[3],l=c-1,d=n.data.get(r.dataId).values,h=x.sizeFromShape(r.shape),p=new Float32Array(h);function f(m){let g=m%c,b=m-g+Math.max(0,g-a),v=m-g+Math.min(g+a,l),y=0;for(;b<=v;b++){let w=d[b];y+=w*w}return y}for(let m=0;m<h;m++){let g=f(m),b=d[m]*Math.pow(o+i*g,-u);p[m]=b}return n.makeTensorInfo(r.shape,r.dtype,p)}var CU={kernelName:xc,backendName:"cpu",kernelFunc:SU};function NU(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=s;ve(o,"LRNGrad");let d=x.sizeFromShape(o.shape),h=o.shape[3],p=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(d),b=d;for(let v=0;v<b;v++){let y=v%h,w=v-y+Math.max(0,y-i),k=v-y+Math.min(h,y+i+1),S=0;for(let N=w;N<k;N++)S+=Math.pow(f[N],2);S=c*S+u;for(let N=w;N<k;N++){let A=-2*c*l*f[N]*m[v]/S;v===N&&(A+=Math.pow(S,-l)),A*=p[v],g[N]+=A}}return n.makeTensorInfo(o.shape,r.dtype,g)}var TU={kernelName:uf,backendName:"cpu",kernelFunc:NU};function zI(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=n,u=r.shape,c=u.length,l=x.parseAxisParam(a,u),d=l,h=T.getAxesPermutation(d,c),p=i.data.get(r.dataId).values;if(h!=null){let w=new Array(c);for(let k=0;k<w.length;k++)w[k]=u[h[k]];p=Sb(p,u,r.dtype,h,w),d=T.getInnerMostAxes(d.length,c),u=w}ve(r,"max"),T.assertAxesAreInnerMostDims("max",d,c);let[f,m]=T.computeOutAndReduceShapes(u,d),g=x.sizeFromShape(m),b=iI(p,g,f,r.dtype),v=i.write(b,f,r.dtype),y=f;return o&&(y=T.expandShapeToKeepDim(f,l)),{dataId:v,shape:y,dtype:r.dtype}}var $U={kernelName:Yr,backendName:"cpu",kernelFunc:zI};function AU(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;ve(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=s,c=1;x.assert(T.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let l=T.computePool2DInfo(r.shape,a,o,c,i,u),d;if(l.filterWidth===1&&l.filterHeight===1&&x.arraysEqual(l.inShape,l.outShape))d=Ns({inputs:{x:r},backend:n});else{let h=n.data.get(r.dataId).values,p=x.computeStrides(r.shape),f=Ab(h,r.shape,r.dtype,p,l,"max");d=n.makeTensorInfo(l.outShape,r.dtype,f.values)}return d}var EU={kernelName:Zr,backendName:"cpu",kernelFunc:AU};function _U(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=s;ve(r,"maxPool3d");let l=T.computePool3DInfo(r.shape,a,o,1,i,u,c),d=n.data.get(r.dataId).values,h=FI(d,r.shape,r.dtype,x.computeStrides(r.shape),l,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}var RU={kernelName:wc,backendName:"cpu",kernelFunc:_U};function DU(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=s;ve([r,a],"maxPool3DGrad");let l=T.computePool3DInfo(a.shape,o,i,1,u,c),d=n.bufferSync(a),h=kV(d,l),p=l.strideDepth,f=l.strideHeight,m=l.strideWidth,g=l.dilationDepth,b=l.dilationHeight,v=l.dilationWidth,y=l.effectiveFilterDepth,w=l.effectiveFilterHeight,k=l.effectiveFilterWidth,S=y-1-l.padInfo.front,N=k-1-l.padInfo.left,A=w-1-l.padInfo.top,_=_e(a.shape,"float32"),O=n.bufferSync(r);for(let R=0;R<l.batchSize;++R)for(let D=0;D<l.inChannels;++D)for(let C=0;C<l.inDepth;++C)for(let P=0;P<l.inHeight;++P)for(let V=0;V<l.inWidth;++V){let G=C-S,U=P-A,q=V-N,Y=0;for(let Z=0;Z<y;Z+=g){let J=(G+Z)/p;if(!(J<0||J>=l.outDepth||Math.floor(J)!==J))for(let ne=0;ne<w;ne+=b){let ee=(U+ne)/f;if(!(ee<0||ee>=l.outHeight||Math.floor(ee)!==ee))for(let te=0;te<k;te+=v){let re=(q+te)/m;if(re<0||re>=l.outWidth||Math.floor(re)!==re)continue;let ce=y*w*k-1-h.get(R,J,ee,re,D),pe=Z*w*k+ne*k+te,be=ce===pe?1:0;if(be===0)continue;Y+=O.get(R,J,ee,re,D)*be}}}_.set(Y,R,C,P,V,D)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}var FU={kernelName:cf,backendName:"cpu",kernelFunc:DU};function OU(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;ve([a,o],"maxPoolGrad");let{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s,h=T.computePool2DInfo(i.shape,u,c,1,l,d),p=n.data.get(i.dataId).values,f=_e(h.outShape,i.dtype,DI(p,i.shape,i.dtype,h).values),m=h.strideHeight,g=h.strideWidth,b=h.dilationHeight,v=h.dilationWidth,y=h.effectiveFilterHeight,w=h.effectiveFilterWidth,k=w-1-h.padInfo.left,S=y-1-h.padInfo.top,N=_e(i.shape,"float32"),A=n.data.get(r.dataId).values,_=_e(r.shape,"float32",A);for(let O=0;O<h.batchSize;++O)for(let R=0;R<h.inChannels;++R)for(let D=0;D<h.inHeight;++D)for(let C=0;C<h.inWidth;++C){let P=D-S,V=C-k,G=0;for(let U=0;U<y;U+=b){let q=(P+U)/m;if(!(q<0||q>=h.outHeight||Math.floor(q)!==q))for(let Y=0;Y<w;Y+=v){let Z=(V+Y)/g;if(Z<0||Z>=h.outWidth||Math.floor(Z)!==Z)continue;let J=y*w-1-f.get(O,q,Z,R),ne=U*w+Y,ee=J===ne?1:0;if(ee===0)continue;G+=_.get(O,q,Z,R)*ee}}N.set(G,O,D,C,R)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}var PU={kernelName:lf,backendName:"cpu",kernelFunc:OU};function LU(e,t,n,s,r){let a=x.computeStrides(t),o=Ab(e,t,n,a,r,"max"),i=DI(e,t,n,r,!0,s);return[o.values,i.values]}var zU={kernelName:df,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,u=n;ve(s,"MaxPoolWithArgmax");let c=u.data.get(s.dataId).values,l=T.computePool2DInfo(s.shape,r,a,[1,1],o),[d,h]=LU(c,s.shape,s.dtype,i,l),p=u.write(d,l.outShape,s.dtype),f=u.write(h,l.outShape,s.dtype);return[{dataId:p,shape:l.outShape,dtype:s.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};function MU(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=x.parseAxisParam(a,r.shape),c=T.computeOutAndReduceShapes(r.shape,i)[1],l=x.sizeFromShape(c),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);let p=br({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(p);let f=Eb({inputs:{a:p,b:h},backend:n});d.push(f);let m=pl({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return d.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var BU={kernelName:Jr,backendName:"cpu",kernelFunc:MU};function VU(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;ve(r,"min");let i=x.parseAxisParam(a,r.shape),u=i,c=T.getAxesPermutation(u,r.shape.length),l=r;c!=null&&(l=Dn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",u,l.shape.length);let[d,h]=T.computeOutAndReduceShapes(l.shape,u),p=x.sizeFromShape(h),f=x.makeZerosTypedArray(x.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let v=b*p,y=m[v];for(let w=0;w<p;++w){let k=m[v+w];(Number.isNaN(k)||k<y)&&(y=k)}f[b]=y}c!=null&&n.disposeIntermediateTensorInfo(l);let g=n.makeTensorInfo(d,l.dtype,f);if(o){let b=T.expandShapeToKeepDim(d,i),v=gt({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),v}return g}var WU={kernelName:ea,backendName:"cpu",kernelFunc:VU};function UU(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:o}=s;ve(r,"mirrorPad");let i=a.map((y,w)=>y[0]+r.shape[w]+y[1]),u=a.map(y=>y[0]),c=a.map((y,w)=>y[0]+r.shape[w]),l=o==="reflect"?0:1,d=n.data.get(r.dataId).values,h=r.shape.length,p=x.computeStrides(r.shape),f=x.sizeFromShape(i),m=i.length,g=x.computeStrides(i),b=x.getTypedArrayFromDType(r.dtype,f);for(let y=0;y<f;y++){let w=x.indexToLoc(y,m,g);for(let S=0;S<m;S++)w[S]<u[S]?w[S]=u[S]*2-w[S]-l:w[S]>=c[S]&&(w[S]=(c[S]-1)*2-w[S]+l);w=w.map((S,N)=>S-u[N]);let k=x.locToIndex(w,h,p);b[y]=d[k]}return{dataId:n.write(b,i,r.dtype),shape:i,dtype:r.dtype}}var GU={kernelName:na,backendName:"cpu",kernelFunc:UU},HU=At((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),qU=Gt(Cu,HU),jU={kernelName:Cu,backendName:"cpu",kernelFunc:qU},KU=$r(rc());function MI(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=r.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let u=x.parseAxisParam([i],r.shape),c=zI({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),l=T.expandShapeToKeepDim(c.shape,u),d=gt({inputs:{x:c},backend:n,attrs:{shape:l}}),h=Tb({inputs:{a:r,b:d},backend:n}),p=Yk({inputs:{x:h},backend:n}),f=pl({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=gt({inputs:{x:f},backend:n,attrs:{shape:l}}),g=Eb({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var XU={kernelName:ma,backendName:"cpu",kernelFunc:MI};function YU(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s;ve(r,"multinomial");let u=i?r:MI({inputs:{logits:r},backend:n,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],d=n.data.get(u.dataId).values,h=[c,a],p=x.makeZerosTypedArray(x.sizeFromShape(h),"int32");for(let f=0;f<c;++f){let m=f*l,g=new Float32Array(l-1);g[0]=d[m];for(let y=1;y<g.length;++y)g[y]=g[y-1]+d[m+y];let b=KU.alea(o.toString()),v=f*a;for(let y=0;y<a;++y){let w=b();p[v+y]=g.length;for(let k=0;k<g.length;k++)if(w<g[k]){p[v+y]=k;break}}}return i||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",p)}var QU={kernelName:hf,backendName:"cpu",kernelFunc:YU},ZU=ss.nonMaxSuppressionV3Impl;function JU(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=s;ve(r,"NonMaxSuppression");let c=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,{selectedIndices:d}=ZU(c,l,o,i,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var eG={kernelName:Oo,backendName:"cpu",kernelFunc:JU},tG=ss.nonMaxSuppressionV4Impl;function nG(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=s;ve(r,"NonMaxSuppressionPadded");let l=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:h,validOutputs:p}=tG(l,d,o,i,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}var sG={kernelName:Nu,backendName:"cpu",kernelFunc:nG},rG=ss.nonMaxSuppressionV5Impl;function aG(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=s;ve(r,"NonMaxSuppressionWithScore");let l=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,h=o,p=i,f=u,m=c,{selectedIndices:g,selectedScores:b}=rG(l,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var oG={kernelName:Po,backendName:"cpu",kernelFunc:aG};function iG(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s;ve(r,"oneHot");let u=x.sizeFromShape(r.shape),c=new Float32Array(u*a);c.fill(i);let l=n.data.get(r.dataId).values;for(let d=0;d<u;++d)l[d]>=0&&l[d]<a&&(c[d*a+l[d]]=o);return n.makeTensorInfo([...r.shape,a],"int32",c)}var uG={kernelName:zo,backendName:"cpu",kernelFunc:iG};function Hd(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=Ka({inputs:{input:s},backend:n}),a=Hd({inputs:{x:r},backend:n}),o=Ni({inputs:{input:s},backend:n}),i=Hd({inputs:{x:o},backend:n}),u=Tn({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}else return Db({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var lG={kernelName:ti,backendName:"cpu",kernelFunc:Hd};function BI(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=Ka({inputs:{input:s},backend:n}),a=BI({inputs:{x:r},backend:n}),o=Ni({inputs:{input:s},backend:n}),i=Hd({inputs:{x:o},backend:n}),u=Tn({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}else return Db({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var cG={kernelName:Lo,backendName:"cpu",kernelFunc:BI};function VI(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Gd({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(l=>{x.assertShapesMatch(a,l.shape,"All tensors passed to stack must have matching shapes"),x.assert(o===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(l=>{let d=Gd({inputs:{input:l},backend:n,attrs:{dim:r}});return i.push(d),d}),c=Ti({inputs:u,backend:n,attrs:{axis:r}});return i.forEach(l=>n.disposeIntermediateTensorInfo(l)),c}var dG={kernelName:Mo,backendName:"cpu",kernelFunc:VI};function hG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;ve(r,"pad");let i=a.map((v,y)=>v[0]+r.shape[y]+v[1]),u=a.map(v=>v[0]),c=n.data.get(r.dataId).values,l=x.sizeFromShape(r.shape),d=r.shape.length,h=x.computeStrides(r.shape),p=x.sizeFromShape(i),f=i.length,m=x.computeStrides(i),g=x.getTypedArrayFromDType(r.dtype,p);o!==0&&g.fill(o);for(let v=0;v<l;v++){let w=x.indexToLoc(v,d,h).map((S,N)=>S+u[N]),k=x.locToIndex(w,f,m);g[k]=c[v]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}var WI={kernelName:ra,backendName:"cpu",kernelFunc:hG},pG=At((e,t)=>Math.pow(e,t)),fG=Gt(aa,pG),mG={kernelName:aa,backendName:"cpu",kernelFunc:fG};function gG(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:o}=n,i=Cb(s,r,o,a);return t.makeTensorInfo([i.length],a,i)}var bG={kernelName:Tu,backendName:"cpu",kernelFunc:gG},yG=nt($u,e=>1/e),vG={kernelName:$u,backendName:"cpu",kernelFunc:yG};function xG(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;ve(r,"resizeBilinear");let u=x.computeStrides(r.shape),[c,l]=i,[d,h,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(x.sizeFromShape([d,c,l,f])),b=[a&&c>1?h-1:h,a&&l>1?p-1:p],v=[a&&c>1?c-1:c,a&&l>1?l-1:l],y=0,w=b[0]/v[0],k=b[1]/v[1];for(let S=0;S<d;S++)for(let N=0;N<c;N++){let A;o?A=w*(N+.5)-.5:A=w*N;let _=Math.max(0,Math.floor(A)),O=A-_,R=Math.min(h-1,Math.ceil(A)),D=S*u[0]+_*u[1],C=S*u[0]+R*u[1];for(let P=0;P<l;P++){let V;o?V=k*(P+.5)-.5:V=k*P;let G=Math.max(0,Math.floor(V)),U=V-G,q=Math.min(p-1,Math.ceil(V)),Y=D+G*u[2],Z=C+G*u[2],J=D+q*u[2],ne=C+q*u[2];for(let ee=0;ee<f;ee++){let te=m[Y+ee],re=m[Z+ee],ce=m[J+ee],pe=m[ne+ee],be=te+(ce-te)*U,we=re+(pe-re)*U,Ae=be+(we-be)*O;g[y++]=Ae}}}return n.makeTensorInfo([d,c,l,f],"float32",g)}var wG={kernelName:ua,backendName:"cpu",kernelFunc:xG};function kG(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;ve([a,r],"resizeBilinearGrad");let i=x.computeStrides(r.shape),[u,c,l,d]=r.shape,[,h,p]=a.shape,f=new Float32Array(u*c*l*d),m=[o&&h>1?c-1:c,o&&p>1?l-1:l],g=[o&&h>1?h-1:h,o&&p>1?p-1:p],b=m[0]/g[0],v=m[1]/g[1],y=n.data.get(a.dataId).values,w=0;for(let k=0;k<u;k++){let S=k*i[0];for(let N=0;N<h;N++){let A=N*b,_=Math.floor(A),O=Math.min(Math.ceil(A),c-1),R=S+_*i[1],D=S+O*i[1],C=A-_,P=1-C;for(let V=0;V<p;V++){let G=V*v,U=Math.floor(G),q=Math.min(Math.ceil(G),l-1),Y=G-U,Z=1-Y,J=R+U*i[2],ne=R+q*i[2],ee=D+U*i[2],te=D+q*i[2],re=P*Z,ce=P*Y,pe=C*Z,be=C*Y;for(let we=0;we<d;we++){let Ae=y[w++];f[J+we]+=Ae*re,f[ne+we]+=Ae*ce,f[ee+we]+=Ae*pe,f[te+we]+=Ae*be}}}}return n.makeTensorInfo([u,l,c,d],"float32",f)}var IG={kernelName:ff,backendName:"cpu",kernelFunc:kG};function SG(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;ve(r,"resizeNearestNeighbor");let u=x.computeStrides(r.shape),[c,l]=i,[d,h,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(d*c*l*f),b=[a&&c>1?h-1:h,a&&l>1?p-1:p],v=[a&&c>1?c-1:c,a&&l>1?l-1:l],y=b[0]/v[0],w=b[1]/v[1],k=0;for(let S=0;S<d;S++){let N=S*u[0];for(let A=0;A<c;A++){let _=o?y*(A+.5):y*A,O=Math.min(h-1,a?Math.round(_):Math.floor(_));o&&(O=Math.max(0,O));let R=N+O*u[1];for(let D=0;D<l;D++){let C=o?w*(D+.5):w*D,P=Math.min(p-1,a?Math.round(C):Math.floor(C));o&&(P=Math.max(0,P));let V=R+P*u[2];for(let G=0;G<f;G++){let U=m[V+G];g[k++]=U}}}}return n.makeTensorInfo([d,c,l,f],r.dtype,g)}var CG={kernelName:Au,backendName:"cpu",kernelFunc:SG};function NG(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;ve([a,r],"resizeNearestNeighborGrad");let i=x.computeStrides(r.shape),u=x.computeStrides(a.shape),[c,l,d,h]=r.shape,[,p,f]=a.shape,m=new Float32Array(c*l*d*h),g=n.data.get(a.dataId).values,b=[o&&p>1?l-1:l,o&&f>1?d-1:d],v=[o&&p>1?p-1:p,o&&f>1?f-1:f],y=b[0]/v[0],w=b[1]/v[1],k=1/y,S=1/w,N=Math.ceil(k)*2+2,A=Math.ceil(S)*2+2;for(let _=0;_<c;_++){let O=_*i[0];for(let R=0;R<l;R++){let D=O+R*i[1],C=Math.floor(R*k),P=Math.floor(C-N/2);for(let V=0;V<d;V++){let G=D+V*i[2],U=Math.floor(V*S),q=Math.floor(U-A/2);for(let Y=0;Y<h;Y++){let Z=0;for(let J=0;J<N;J++){let ne=J+P;if(ne<0||ne>=p)continue;let ee=O+ne*u[1],te=ne*y,re=Math.min(l-1,o?Math.round(te):Math.floor(te));if(R===re)for(let ce=0;ce<A;ce++){let pe=ce+q;if(pe<0||pe>=f)continue;let be=ee+pe*u[2],we=pe*w,Ae=Math.min(d-1,o?Math.round(we):Math.floor(we));V===Ae&&(Z+=g[be+Y])}}m[G+Y]=Z}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var TG={kernelName:pf,backendName:"cpu",kernelFunc:NG};function $G(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;ve(r,"reverse");let o=r.shape.length,i=x.parseAxisParam(a,r.shape);if(o===0)return Ns({inputs:{x:r},backend:n});let u=new tn(r.shape,r.dtype),c=n.bufferSync(r);for(let l=0;l<u.size;l++){let d=u.indexToLoc(l),h=d.slice();i.forEach(p=>h[p]=r.shape[p]-1-h[p]),u.set(c.get(...h),...d)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}var AG={kernelName:Wo,backendName:"cpu",kernelFunc:$G},EG={kernelName:ni,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,u=x.getTypedArrayFromDType(s.dtype,x.sizeFromShape(s.shape)),[c,l,d,h]=s.shape,[p,f]=T.getImageCenter(o,l,d),m=255,g=Math.sin(r),b=Math.cos(r),v=i.data.get(s.dataId).values;for(let w=0;w<c;w++){let k=w*d*l*h;for(let S=0;S<l;S++){let N=S*(d*h);for(let A=0;A<d;A++){let _=A*h;for(let O=0;O<h;O++){let R=[c,S,A,O],D=R[2],C=R[1],P=(D-p)*b-(C-f)*g,V=(D-p)*g+(C-f)*b;P=Math.round(P+p),V=Math.round(V+f);let G=a;if(typeof a!="number"&&(O===3?G=m:G=a[O]),P>=0&&P<d&&V>=0&&V<l){let q=V*(d*h),Y=P*h,Z=k+q+Y+O;G=v[Z]}let U=k+N+_+O;u[U]=G}}}}return{dataId:i.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},_G=nt(Uo,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),RG={kernelName:Uo,backendName:"cpu",kernelFunc:_G};function UI(e,t,n,s,r,a,o,i,u,c){let l=[s/r,r],d=e.values,h=t.values;if(s===0)return _e(n,t.dtype);let p=_e(l,t.dtype);p.values.fill(u);for(let f=0;f<a;f++){let m=[],g=0;for(let b=0;b<o;b++){let v=d[f*o+b];m.push(v),g+=v*i[b]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let b=0;b<r;b++)c?p.values[g*r+b]+=h[f*r+b]:p.values[g*r+b]=t.rank===0?h[0]:h[f*r+b]}return p}function DG(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=T.calculateShapes(a,r,o),h=!0,p=n.bufferSync(r),f=n.bufferSync(a),m=UI(p,f,o,d,c,u,i,l,0,h);return n.makeTensorInfo(o,m.dtype,m.values)}var FG={kernelName:Go,backendName:"cpu",kernelFunc:DG};function OG(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;ve([s,r,a],"select");let o=s.shape.length,i=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,l=mn(r.dtype,a.dtype),d=x.makeZerosTypedArray(x.sizeFromShape(r.shape),l),h=0,p=o===0||o>1||r.shape.length===1?1:x.sizeFromShape(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)i[f]===1?d[h++]=u[f]:d[h++]=c[f];return n.makeTensorInfo(r.shape,l,d)}var PG={kernelName:Ho,backendName:"cpu",kernelFunc:OG},LG=T.SELU_SCALEALPHA,zG=T.SELU_SCALE,MG=nt(Eu,e=>e>=0?zG*e:LG*(Math.exp(e)-1)),BG={kernelName:Eu,backendName:"cpu",kernelFunc:MG},VG=nt(_u,e=>e<0?-1:e>0?1:0),WG={kernelName:_u,backendName:"cpu",kernelFunc:VG},UG=nt(da,e=>Math.sin(e)),GG={kernelName:da,backendName:"cpu",kernelFunc:UG},HG=nt(jo,e=>Math.sinh(e)),qG={kernelName:jo,backendName:"cpu",kernelFunc:HG},jG=11920928955078125e-23,GI=Math.log(jG)+2,KG=nt(Ru,e=>{let t=e>-GI,n=e<GI,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),XG={kernelName:Ru,backendName:"cpu",kernelFunc:KG};function YG(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;ve([r],"spaceToBatchND");let i=x.sizeFromShape(a),u=[[0,0]];u.push(...o);for(let S=1+a.length;S<r.shape.length;++S)u.push([0,0]);let c=WI.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),l=T.getReshaped(c.shape,a,i,!1),d=T.getPermuted(l.length,a.length,!1),h=T.getReshapedPermuted(c.shape,a,i,!1),m=gt({inputs:{x:c},backend:n,attrs:{shape:l}}),v=Dn({inputs:{x:m},backend:n,attrs:{perm:d}}),k=gt({inputs:{x:v},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(v),k}var QG={kernelName:Ko,backendName:"cpu",kernelFunc:YG};function ZG(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[d,h,p,f,m]=mI(i,s.shape,s.dtype,u,r.dtype,c,l);return[n.makeTensorInfo(h,s.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var JG={kernelName:mf,backendName:"cpu",kernelFunc:ZG};function eH(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(r.dataId).values),i=n.data.get(s.dataId).values,u=Array.from(n.data.get(a.dataId).values),[c,l,d]=gI(i,s.shape,s.dtype,o,u);return[n.makeTensorInfo(l,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var tH={kernelName:gf,backendName:"cpu",kernelFunc:eH};function nH(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[c,l]=Nb(o,s.shape,s.dtype,i,u,!0);return n.makeTensorInfo(l,s.dtype,c)}var sH={kernelName:bf,backendName:"cpu",kernelFunc:nH};function rH(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[c,l]=Nb(o,s.shape,s.dtype,i,u);return n.makeTensorInfo(l,s.dtype,c)}var aH={kernelName:yf,backendName:"cpu",kernelFunc:rH};function oH(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=T.calculateShapes(a,r,i),p=!1,f=n.bufferSync(r),m=n.bufferSync(a),g=n.data.get(o.dataId).values[0],b=UI(f,m,i,h,l,c,u,d,g,p);return n.makeTensorInfo(i,b.dtype,b.values)}var iH={kernelName:Ic,backendName:"cpu",kernelFunc:oH};function uH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=x.parseAxisParam(o,r.shape)[0],u=T.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),l=r.shape.slice();return u.map(d=>{let h=[...l];h[i]=d;let p=Xa({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});return c[i]+=d,p})}var lH={kernelName:Xo,backendName:"cpu",kernelFunc:uH},cH={kernelName:Du,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;ve(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){let u=r[i];a[i]=u*u}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},dH=nt(xa,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),hH={kernelName:xa,backendName:"cpu",kernelFunc:dH};function pH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s;ve(r,"stridedSlice");let{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:v,end:y,strides:w}=It.sliceInfo(r.shape,a,o,i,u,c,l,d,h),k;if(m)k=gt({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){x.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=It.computeOutShape(v,y,w),N=Xa({inputs:{x:r},backend:n,attrs:{begin:v,size:S}});k=gt({inputs:{x:N},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(N)}else{let S=n.bufferSync(r),N=yI(p,S,w,v);k=n.makeTensorInfo(f,N.dtype,N.values)}return k}var fH={kernelName:Yo,backendName:"cpu",kernelFunc:pH};function mH(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=s,{data:l,dataSplits:d}=t,h=n.data.get(l.dataId).values,p=n.data.get(d.dataId).values,[f,m]=vI(h,p,r,a,o,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var gH={kernelName:Sc,backendName:"cpu",kernelFunc:mH};function bH(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values[0],[c,l,d]=xI(i,u,r),h=l.length;return[n.makeTensorInfo([h,2],"int32",c),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var yH={kernelName:vf,backendName:"cpu",kernelFunc:bH};function vH(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=wI(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var xH={kernelName:xf,backendName:"cpu",kernelFunc:vH},wH=nt(Qo,e=>Math.tan(e)),kH={kernelName:Qo,backendName:"cpu",kernelFunc:wH},IH=nt(ya,e=>Math.tanh(e)),SH={kernelName:ya,backendName:"cpu",kernelFunc:IH};function CH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;ve(r,"tile");let o=II(n.bufferSync(r),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var NH={kernelName:Js,backendName:"cpu",kernelFunc:CH};function TH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s;ve(r,"topk");let i=n.data.get(r.dataId).values,[u,c]=CI(i,r.shape,r.dtype,a,o);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}var $H={kernelName:Zo,backendName:"cpu",kernelFunc:TH};function AH(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=n,[l,d,h,p]=r.shape,[f,m]=c??[d,h],g=[l,f,m,p],b=x.computeStrides(r.shape),v=b[0],y=b[1],w=b[2],k=x.getTypedArrayFromDType(r.dtype,x.sizeFromShape(g));k.fill(u);let S=s.data.get(r.dataId).values,N=s.data.get(a.dataId).values;for(let _=0;_<l;++_){let O=a.shape[0]===1?N:N.subarray(_*8,_*8+8);for(let R=0;R<f;++R)for(let D=0;D<m;++D)for(let C=0;C<p;++C){let P,V=O[6]*D+O[7]*R+1;if(V===0)continue;let G=(O[0]*D+O[1]*R+O[2])/V,U=(O[3]*D+O[4]*R+O[5])/V,q=HI(G,h,i),Y=HI(U,d,i);switch(o){case"nearest":P=OH(S,d,h,v,y,w,_,Y,q,C,u);break;case"bilinear":P=PH(S,d,h,v,y,w,_,Y,q,C,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let Z=_*v+R*y+D*w+C;k[Z]=P}return s.makeTensorInfo(g,r.dtype,k)}return{dataId:s.write(k,g,r.dtype),shape:r.shape,dtype:r.dtype}}var EH={kernelName:Jo,backendName:"cpu",kernelFunc:AH};function HI(e,t,n){switch(n){case"reflect":return _H(e,t);case"wrap":return RH(e,t);case"nearest":return FH(e,t);case"constant":default:return DH(e,t)}}function _H(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return x.clamp(0,n,t-1)}function RH(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return x.clamp(0,n,t-1)}function DH(e,t){return e}function FH(e,t){return x.clamp(0,e,t-1)}function fl(e,t,n,s,r,a,o,i,u,c,l){let d=o*s+i*r+u*a+c;return 0<=i&&i<t&&0<=u&&u<n?e[d]:l}function OH(e,t,n,s,r,a,o,i,u,c,l){let d=Math.round(i),h=Math.round(u);return fl(e,t,n,s,r,a,o,d,h,c,l)}function PH(e,t,n,s,r,a,o,i,u,c,l){let d=Math.floor(i),h=Math.floor(u),p=d+1,f=h+1,m=(f-u)*fl(e,t,n,s,r,a,o,d,h,c,l)+(u-h)*fl(e,t,n,s,r,a,o,d,f,c,l),g=(f-u)*fl(e,t,n,s,r,a,o,p,h,c,l)+(u-h)*fl(e,t,n,s,r,a,o,p,f,c,l);return(p-i)*m+(i-d)*g}function LH(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;ve(a,"unique");let o=s.data.get(a.dataId).values,{outputValues:i,outputShape:u,indices:c}=NI(o,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var zH={kernelName:wf,backendName:"cpu",kernelFunc:LH};function MH(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape.length,i=r.shape[a],u=new Array(o-1),c=0;for(let p=0;p<o;p++)p!==a&&(u[c++]=r.shape[p]);let l=new Array(o).fill(0),d=r.shape.slice();d[a]=1;let h=new Array(i);for(let p=0;p<h.length;p++){l[a]=p;let f=Xa({inputs:{x:r},backend:n,attrs:{begin:l,size:d}});h[p]=gt({inputs:{x:f},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(f)}return h}var BH={kernelName:ei,backendName:"cpu",kernelFunc:MH};function VH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s;ve(r,"unsortedSegmentSum");let i=r.shape.length,u=a.shape.length,c=[],l=[],d=i-u,h=a;for(let f=0;f<d;++f){let m=Gd({inputs:{input:h},backend:n,attrs:{dim:f+1}});h=m,l.push(m)}for(let f=0;f<o;++f){let m=x.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),b=Kk({inputs:{a:g,b:h},backend:n}),v=br({inputs:{x:b},backend:n,attrs:{dtype:"float32"}}),y=Wd({inputs:{a:v,b:r},backend:n}),w=pl({inputs:{x:y},backend:n,attrs:{axis:0,keepDims:!1}});c.push(w),l.push(g),l.push(b),l.push(v),l.push(y),l.push(w)}let p=VI({inputs:c,backend:n,attrs:{axis:0}});return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}var WH={kernelName:Cc,backendName:"cpu",kernelFunc:VH},UH=[Y4,UB,Z4,eV,XB,nV,rV,oV,uV,cV,hV,fV,gV,vV,wV,SV,NV,$V,EV,K4,RV,FV,PV,zV,jB,QB,BV,GB,WV,GV,jV,XV,HV,JV,tW,QV,sW,aW,iW,lW,dW,pW,fW,gW,yW,xW,wW,IW,kW,_b,NW,V4,$W,ZB,PW,JB,LW,t4,UW,GW,qW,s4,XW,QW,JW,tU,sU,a4,i4,HB,aU,UV,iU,lU,dU,W4,l4,d4,pU,p4,mU,yU,xU,IU,CU,TU,m4,EU,RU,FU,PU,zU,$U,BU,WU,b4,GU,jU,QU,v4,w4,eG,sG,oG,I4,uG,cG,dG,WI,mG,G4,N4,bG,qB,vG,H4,q4,j4,wG,IG,CG,TG,AG,EG,RG,$4,FG,PG,BG,E4,WG,GG,qG,_4,XU,XG,QG,JG,tH,sH,aH,iH,lH,F4,cH,P4,hH,fH,gH,yH,xH,B4,SW,kH,SH,NH,$H,S4,EH,zH,BH,WH,lG];for(let e of UH)Ac(e);var GH={};$e(GH,{assertNotComplex:()=>Ai,bindCanvasToFramebuffer:()=>s6,bindColorTextureToFramebuffer:()=>Kd,bindTextureToProgramUniformSampler:()=>oS,bindTextureUnit:()=>sS,bindVertexBufferToProgramAttribute:()=>Pb,callAndCheck:()=>me,canBeRepresented:()=>qI,createFragmentShader:()=>XI,createFramebuffer:()=>nS,createProgram:()=>YI,createStaticIndexBuffer:()=>JI,createStaticVertexBuffer:()=>ZI,createTexture:()=>eS,createVertexShader:()=>KI,getBatchDim:()=>Qa,getExtensionOrThrow:()=>bl,getFramebufferErrorMessage:()=>iS,getMaxTexturesInShader:()=>dS,getNumChannels:()=>t6,getProgramUniformLocation:()=>aS,getProgramUniformLocationOrThrow:()=>rS,getRowsCols:()=>Za,getShapeAs3D:()=>Xd,getTextureShapeFromLogicalShape:()=>lS,getWebGLDisjointQueryTimerVersion:()=>hS,getWebGLErrorMessage:()=>jI,getWebGLMaxTextureSize:()=>cS,hasExtension:()=>On,isCapableOfRenderingToFloatTexture:()=>pS,isDownloadFloatTextureEnabled:()=>fS,isReshapeFree:()=>vl,isWebGLFenceEnabled:()=>mS,isWebGLVersionEnabled:()=>zb,linkProgram:()=>QI,resetMaxTextureSize:()=>r6,resetMaxTexturesInShader:()=>a6,unbindColorTextureFromFramebuffer:()=>Lb,unbindTextureUnit:()=>n6,validateFramebuffer:()=>yl,validateProgram:()=>jd,validateTextureSize:()=>tS});var Ya={},Fb={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function HH(e,t){Ya[e]=t}function Ts(e){if(!(e in Ya)){let n=jH(e);if(n!==null)Ya[e]=n;else return console.log("Could not get context for WebGL version",e),null}let t=Ya[e];return t.isContextLost()?(delete Ya[e],Ts(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Ya[e])}function qH(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function jH(e){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=qH(e);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Ya[e]},!1),e===1?t.getContext("webgl",Fb)||t.getContext("experimental-webgl",Fb):t.getContext("webgl2",Fb)}var ml;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(ml||(ml={}));var Fn;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(Fn||(Fn={}));var Xt;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Xt||(Xt={}));function gl(e,t){return[t,e]}function KH(e,t){return e*t}function qd(e){let t=x.sizeFromShape(e),n=Math.ceil(t/4);return x.sizeToSquarishShape(n)}function $i(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function XH(e,t){let[n,s]=$i(e,t);return n*s*4}function Ob(e,t){let n=e,s,r,a,o,i,u,c,l,d,h;return X().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,c=4,l=1,d=n.HALF_FLOAT,h=n.FLOAT):(s=e.RGBA,r=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,c=4,l=4,d=t!=null?t.HALF_FLOAT_OES:null,h=e.FLOAT),u=e.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}function me(e,t){let n=t();return X().getBool("DEBUG")&&YH(e),n}function YH(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+jI(e,t))}var QH=596e-10,ZH=65504;function qI(e){return!!(X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||QH<Math.abs(e)&&Math.abs(e)<ZH)}function jI(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function bl(e,t){return Ms(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function KI(e,t){let n=Ms(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(me(e,()=>e.shaderSource(n,t)),me(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function XI(e,t){let n=Ms(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(me(e,()=>e.shaderSource(n,t)),me(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw e6(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var JH=/ERROR: [0-9]+:([0-9]+):/g;function e6(e,t){let n=JH.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,o=r.map((d,h)=>x.rightPad((h+1).toString(),a)+d),i=0;for(let d=0;d<o.length;d++)i=Math.max(o[d].length,i);let u=o.slice(0,s-1),c=o.slice(s-1,s),l=o.slice(s);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${x.rightPad(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function YI(e){return Ms(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function QI(e,t){if(me(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function jd(e,t){if(me(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function ZI(e,t){let n=Ms(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return me(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),me(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function JI(e,t){let n=Ms(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return me(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),me(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function t6(){return X().getNumber("WEBGL_VERSION")===2?1:4}function eS(e){return Ms(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function tS(e,t){let n=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function nS(e){return Ms(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Pb(e,t,n,s,r,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(me(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),me(e,()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,a,o)),me(e,()=>e.enableVertexAttribArray(i)),!0)}function sS(e,t,n){uS(e,n),me(e,()=>e.activeTexture(e.TEXTURE0+n)),me(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function n6(e,t){uS(e,t),me(e,()=>e.activeTexture(e.TEXTURE0+t)),me(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function rS(e,t,n){return Ms(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function aS(e,t,n){return e.getUniformLocation(t,n)}function oS(e,t,n,s){me(e,()=>sS(e,t,s)),me(e,()=>e.uniform1i(n,s))}function s6(e){me(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),me(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),me(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Kd(e,t,n){me(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),me(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Lb(e,t){me(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),me(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function yl(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+iS(e,t))}function iS(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Ms(e,t,n){let s=me(e,()=>t());if(s==null)throw new Error(n);return s}function uS(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Qa(e,t=2){return x.sizeFromShape(e.slice(0,e.length-t))}function Za(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Xd(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Qa(e),...Za(e)]),t}function lS(e,t=!1){let n=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?x.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=x.squeezeShape(e).newShape);let s=x.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=Qa(e),a=2,o=2;return e.length&&([a,o]=Za(e)),s=r*(a/2)*(o/2),x.sizeToSquarishShape(s).map(i=>i*2)}return x.sizeToSquarishShape(s)}function Yd(e){return e%2==0}function vl(e,t){if(e=e.slice(-2),t=t.slice(-2),x.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||Yd(n)&&Yd(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Yd(e[0])&&Yd(t[0])}var Qd,Zd;function cS(e){if(Qd==null){let t=Ts(e);Qd=t.getParameter(t.MAX_TEXTURE_SIZE)}return Qd}function r6(){Qd=null}function a6(){Zd=null}function dS(e){if(Zd==null){let t=Ts(e);Zd=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Zd)}function hS(e){if(e===0)return 0;let t,n=Ts(e);return On(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:On(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function On(e,t){return e.getExtension(t)!=null}function zb(e){try{if(Ts(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function pS(e){if(e===0)return!1;let t=Ts(e);if(e===1){if(!On(t,"OES_texture_float"))return!1}else if(!On(t,"EXT_color_buffer_float"))return!1;return Mb(t)}function fS(e){if(e===0)return!1;let t=Ts(e);if(e===1){if(!On(t,"OES_texture_float")||!On(t,"WEBGL_color_buffer_float"))return!1}else{if(On(t,"EXT_color_buffer_float"))return Mb(t);let s="EXT_color_buffer_half_float";if(On(t,s)){let r=t.getExtension(s);return o6(t,r)}return!1}return Mb(t)}function Mb(e){let t=Ob(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function o6(e,t){let n=Ob(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),i}function mS(e){return e!==2?!1:Ts(e).fenceSync!=null}function Ai(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&x.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Se=X();Se.registerFlag("HAS_WEBGL",()=>Se.getNumber("WEBGL_VERSION")>0);Se.registerFlag("WEBGL_VERSION",()=>zb(2)?2:zb(1)?1:0);Se.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Se.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Se.get("WEBGL_VERSION")===2);Se.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Se.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Se.registerFlag("WEBGL_PACK",()=>Se.getBool("HAS_WEBGL"));Se.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_CLIP",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_PACK_REDUCE",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_LAZILY_UNPACK",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_CONV_IM2COL",()=>Se.getBool("WEBGL_PACK"));Se.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>cS(Se.getNumber("WEBGL_VERSION")));Se.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>dS(Se.getNumber("WEBGL_VERSION")));Se.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Se.getNumber("WEBGL_VERSION");return e===0?0:hS(e)});Se.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Se.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Bu.isMobile());Se.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>pS(Se.getNumber("WEBGL_VERSION")));Se.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Se.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Se.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Se.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>fS(Se.getNumber("WEBGL_VERSION")));Se.registerFlag("WEBGL_FENCE_API_ENABLED",()=>mS(Se.getNumber("WEBGL_VERSION")));Se.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Se.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Se.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Se.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Bu.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});Se.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Se.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Se.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Se.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function on(){let e,t,n,s,r,a,o,i,u,c;return X().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}function Ja(e,t,n="index"){let s=x.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / ${r}`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${o}; ${i};`}).join("")}function Jd(e,t,n="index"){let s=x.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function i6(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function u6(e,t,n="index"){let s=e.map((a,o)=>o),r=i6(s,t);return r.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${r[o]}`,u=o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`;return`${i}; ${u};`}).join("")}function Bb(e){let t=x.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Vb(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var gS=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:bS}=T;function l6(e,t,n){let s=[];if(e.forEach(p=>{let f=x.sizeFromShape(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),n.enableShapeUniforms){let{uniformShape:m}=Wb(n.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(p=>c6(p,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=on(),u=p6(i),c,l,d=g6(i);return t.isPacked?(c=d6(t.logicalShape,o,n.enableShapeUniforms),l=m6(i)):(c=h6(t.logicalShape,o,n.enableShapeUniforms),l=f6(i)),n.packedInputs&&(d+=x6),[d,u,l,r,c,a,n.userCode].join(`
`)}function Ei(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return R6(e,t);case 1:return F6(e,t);case 2:return P6(e,t);case 3:return z6(e,t);case 4:return B6(e,t);case 5:return V6(e);case 6:return W6(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function yS(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return _6(e);case 1:return D6(e,t);case 2:return O6(e,t);case 3:return L6(e,t);default:return M6(e,t)}}function c6(e,t,n=!1,s){let r="";n?r+=yS(e,s):r+=Ei(e,s);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?r+=U6(e,t):r+=G6(e,t)),r}function d6(e,t,n){switch(e.length){case 0:return vS();case 1:return w6(e,t,n);case 2:return A6(e,t,n);case 3:return I6(e,t,n);default:return C6(e,t,n)}}function h6(e,t,n){switch(e.length){case 0:return vS();case 1:return k6(e,t,n);case 2:return E6(e,t,n);case 3:return S6(e,t,n);case 4:return N6(e,t,n);case 5:return T6(e,t);case 6:return $6(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function p6(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function f6(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function m6(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function g6(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${b6}
    ${y6}
    ${v6}
  `}var b6=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,y6=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,v6=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,x6=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function vS(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function w6(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function k6(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function I6(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function S6(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Jd(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=Ja(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function C6(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),o=a,i="",u="b, r, c";for(let c=2;c<e.length-1;c++)o*=e[e.length-c-1],i=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+i,u=`b${c}, `+u;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${u});
    }
  `}function N6(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Jd(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=Ja(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function T6(e,t){let n=Ja(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function $6(e,t){let n=Ja(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function A6(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(x.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function E6(e,t,n){return x.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function eo(e){return`offset${e}`}function _6(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=on();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function R6(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=eo(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,u]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function D6(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=on();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function F6(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${_i(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],o=r[1];if(o===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=eo(n);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function O6(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],u=on();if(a!=null&&x.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;let c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function P6(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&x.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let h=a[0],p=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:o,keptDims:i}=x.squeezeShape(n),u=o;if(u.length<n.length){let h=Ri(e,u),p=["row","col"];return`
      ${Ei(h,t)}
      float ${r}(int row, int col) {
        return ${r}(${Di(p,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${_i(e)}
      }
    `;let c=a[0],l=a[1],d=eo(s);return l===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${l}, index);
    return sampleTexture(${s}, uv);
  }
`}function L6(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let h=n.slice(1),p=[1,2],f=Ri(e,h),m=["b","row","col"];return`
        ${yS(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Di(m,p)});
        }
      `}let i=on();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;let u=o[0],c=o[1],l=Math.ceil(n[2]/2),d=l*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${c}, ${d}, ${l}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function z6(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:u}=x.squeezeShape(n),c=i;if(c.length<n.length){let m=Ri(e,c),g=["row","col","depth"];return`
        ${Ei(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Di(g,u)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${_i(e)}
      }
    `;let l=e.shapeInfo.texShape,d=l[0],h=l[1],p=e.shapeInfo.flatOffset;if(h===a&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(h===o&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=eo(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${s}, uv);
      }
  `}function M6(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=on();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=u[0],l=u[1],d=Math.ceil(a[o-1]/2),h=d*Math.ceil(a[o-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<o-1;m++)p=`int b${m}, `+p,h*=a[o-m-1],f=`b${m} * ${h} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});
      return ${r.texture2D}(${n}, uv);
    }
  `}function B6(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:u,keptDims:c}=x.squeezeShape(n);if(u.length<n.length){let v=Ri(e,u),y=["row","col","depth","depth2"];return`
      ${Ei(v,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Di(y,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${_i(e)}
      }
    `;let l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===i&&l==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===a&&l==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;let b=eo(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${h}, ${p}, index + ${b});
      return sampleTexture(${s}, uv);
    }
  `}function V6(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,i=t[1]*o,{newShape:u,keptDims:c}=x.squeezeShape(t);if(u.length<t.length){let m=Ri(e,u),g=["row","col","depth","depth2","depth3"];return`
      ${Ei(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Di(g,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${r})) +
          depth3;
        ${_i(e)}
      }
    `;let l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(p===r&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=eo(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${p}, index);
      return sampleTexture(${n}, uv);
    }
  `}function W6(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=x.squeezeShape(t);if(r.length<t.length){let g=Ri(e,r),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${Ei(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Di(b,a)});
      }
    `}let o=t[5],i=t[4]*o,u=t[3]*i,c=t[2]*u,l=t[1]*c;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${c}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${_i(e)}
      }
    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===l&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${u}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=eo(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${c} + depth * ${u} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function _i(e){let t=e.name,n=x.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function U6(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=bS(e.shapeInfo.logicalShape,t.logicalShape),u=ot(o),c=o-a,l,d=["x","y","z","w","u","v"];a===0?l="":o<2&&i.length>=1?l="coords = 0;":l=i.map(v=>`coords.${d[v+c]} = 0;`).join(`
`);let h="";o<2&&a>0?h="coords":h=e.shapeInfo.logicalShape.map((v,y)=>`coords.${d[y+c]}`).join(", ");let p="return outputValue;",m=x.sizeFromShape(e.shapeInfo.logicalShape)===1,b=x.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!b)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!b)o===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){let v=a-2,y=a-1;i.indexOf(v)>-1&&i.indexOf(y)>-1?p="return vec4(outputValue.x);":i.indexOf(v)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(y)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${s}(${h});
      ${p}
    }
  `}function G6(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===u&&e.shapeInfo.flatOffset==null&&x.arraysEqual(o,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let c=ot(u),l=bS(e.shapeInfo.logicalShape,t.logicalShape),d=u-i,h,p=["x","y","z","w","u","v"];i===0?h="":u<2&&l.length>=1?h="coords = 0;":h=l.map(m=>`coords.${p[m+d]} = 0;`).join(`
`);let f="";return u<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+d]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${h}
      return get${s}(${f});
    }
  `}function ot(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Wb(e,t,n){let{newShape:s,keptDims:r}=x.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):s,u=!e&&a>1&&!x.arraysEqual(t,n)&&s.length<a||o;return{useSqueezeShape:u,uniformShape:u?i:t,keptDims:r}}function Ri(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Di(e,t){return t.map(n=>e[n]).join(", ")}function H6(e,t,n,s){let r=n.map((y,w)=>{let k={logicalShape:y.shape,texShape:y.isUniform?null:y.texData.texShape,isUniform:y.isUniform,isPacked:y.isUniform?!1:y.texData.isPacked,flatOffset:null};return y.texData!=null&&y.texData.slice!=null&&y.texData.slice.flatOffset>0&&(k.flatOffset=y.texData.slice.flatOffset),{name:t.variableNames[w],shapeInfo:k}}),a=r.map(y=>y.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=l6(r,o,t),u=e.createProgram(i),c=null,l=e.getUniformLocation(u,"NAN",!1);X().getNumber("WEBGL_VERSION")===1&&(c=e.getUniformLocation(u,"INFINITY",!1));let d=!1,h={},p={},f={};for(let y=0;y<t.variableNames.length;y++){let w=t.variableNames[y];h[w]=e.getUniformLocation(u,w,d),h[`offset${w}`]=e.getUniformLocation(u,`offset${w}`,d),t.enableShapeUniforms&&(p[`${w}Shape`]=e.getUniformLocation(u,`${w}Shape`,d),f[`${w}TexShape`]=e.getUniformLocation(u,`${w}TexShape`,d))}let m,g,b;t.enableShapeUniforms&&(m=e.getUniformLocation(u,"outShape",d),b=e.getUniformLocation(u,"outShapeStrides",d),g=e.getUniformLocation(u,"outTexShape",d));let v=[];return t.customUniforms&&t.customUniforms.forEach((y,w)=>{v[w]=e.getUniformLocation(u,y.name,d)}),{program:t,source:i,webGLProgram:u,uniformLocations:h,customUniformLocations:v,inShapeInfos:a,outShapeInfo:o,infLoc:c,nanLoc:l,inShapesLocations:p,inTexShapesLocations:f,outShapeLocation:m,outShapeStridesLocation:b,outTexShapeLocation:g}}function xS(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],o=a.shape;if(!x.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,u=a.isUniform?null:a.texData.texShape;if(!x.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function q6(e,t,n,s,r){t.program.enableShapeUniforms||(xS(t.inShapeInfos,n),xS([t.outShapeInfo],[s]));let a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a,o[0],o[1]):e.setOutputMatrixTexture(a,o[0],o[1]),e.setProgram(t.webGLProgram),X().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((u,c)=>{let l=t.program.variableNames[c],d=t.uniformLocations[l],h=t.uniformLocations[`offset${l}`],p=t.inShapesLocations[`${l}Shape`],f=t.inTexShapesLocations[`${l}TexShape`];if(p){let{uniformShape:m}=Wb(t.program.packedInputs,u.shape,u.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(p,new Int32Array(m));break;case 2:e.gl.uniform2iv(p,new Int32Array(m));break;case 3:e.gl.uniform3iv(p,new Int32Array(m));break;case 4:e.gl.uniform4iv(p,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),d!=null){if(u.isUniform){if(x.sizeFromShape(u.shape)<2)e.gl.uniform1f(d,u.uniformValues[0]);else{let m=u.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(d,m)}return}u.texData.slice!=null&&h!=null&&e.gl.uniform1i(h,u.texData.slice.flatOffset),e.setInputMatrixTexture(u.texData.texture,d,c)}});let i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let u=x.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((u,c)=>{let l=t.customUniformLocations[c],d=r[c];if(u.type==="float")e.gl.uniform1fv(l,d);else if(u.type==="vec2")e.gl.uniform2fv(l,d);else if(u.type==="vec3")e.gl.uniform3fv(l,d);else if(u.type==="vec4")e.gl.uniform4fv(l,d);else if(u.type==="int")e.gl.uniform1iv(l,d);else if(u.type==="ivec2")e.gl.uniform2iv(l,d);else if(u.type==="ivec3")e.gl.uniform3iv(l,d);else if(u.type==="ivec4")e.gl.uniform4iv(l,d);else throw Error(`uniform type ${u.type} is not supported yet.`)}),e.executeProgram()}function j6(e,t,n){let s="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let u=o.texData.texShape,{useSqueezeShape:c,uniformShape:l,keptDims:d}=Wb(e.packedInputs,o.shape,u),h="",p="",f="";if(l.length===1&&e.packedInputs){let k=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];h=`${k[0]>1}_${k[1]>1}`}else if(l.length===2&&!e.packedInputs)p=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!e.packedInputs){let k=x.computeStrides(l);f=`${k[0]===u[1]}_${k[k.length-1]===u[1]}`}let m=o.shape.length,g=l.length===2&&x.arraysEqual(o.shape,u),b=x.sizeFromShape(o.shape)===1,v=T.getBroadcastDims(o.shape,n.shape),y=!e.packedInputs&&m===n.shape.length&&x.arraysEqual(u,n.texData.texShape),w=e.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${m}_${y}_${c?d:""}_${l.length}_${b}_${v}_${g}_${h}_${p}_${f}_${w}_${i}`}else{let u=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${u}_${i}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${X().getNumber("WEBGL_VERSION")}`,a}function Pn(e){return X().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var K6=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ml.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=on();this.outputShape=e,this.enableShapeUniforms=Pn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Jd(["r","c","d"],e):Ja(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},X6=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ml.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=on();this.outputShape=e,this.enableShapeUniforms=Pn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Jd(["r","c","d"],e):Ja(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},Y6=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Fn.DOWNLOAD;let t=on();this.outputShape=e,this.userCode=`
      ${gS}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},Q6=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Fn.DOWNLOAD;let t=on();this.outputShape=e,this.userCode=`
      ${gS}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},Z6=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=on();this.outputShape=e,this.enableShapeUniforms=Pn(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Vb():Bb(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},J6=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=on();this.outputShape=e,this.enableShapeUniforms=Pn(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Vb():Bb(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},eq={};$e(eq,{bindVertexProgramAttributeStreams:()=>AS,createBufferFromOutputTexture:()=>RS,createFloat16MatrixTexture:()=>CS,createFloat16PackedMatrixTexture:()=>$S,createFloat32MatrixTexture:()=>SS,createIndexBuffer:()=>IS,createPackedMatrixTexture:()=>TS,createUnsignedBytesMatrixTexture:()=>NS,createVertexBuffer:()=>kS,createVertexShader:()=>wS,downloadByteEncodedFloatMatrixFromOutputTexture:()=>FS,downloadFloat32MatrixFromBuffer:()=>DS,downloadMatrixFromPackedOutputTexture:()=>PS,downloadPackedMatrixFromBuffer:()=>OS,getInternalFormatForFloat16MatrixTexture:()=>Gb,getInternalFormatForFloat16PackedMatrixTexture:()=>jb,getInternalFormatForFloat32MatrixTexture:()=>Ub,getInternalFormatForPackedMatrixTexture:()=>qb,getInternalFormatForUnsignedBytesMatrixTexture:()=>Hb,uploadDenseMatrixToTexture:()=>ES,uploadPixelDataToTexture:()=>_S});function wS(e){let t=on(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return KI(e,n)}function kS(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return ZI(e,t)}function IS(e){let t=new Uint16Array([0,1,2,2,1,3]);return JI(e,t)}function xl(e,t,n,s,r,a){tS(t,n);let o=eS(e),i=e.TEXTURE_2D;return me(e,()=>e.bindTexture(i,o)),me(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),me(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),me(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),me(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),me(e,()=>e.texImage2D(i,0,s,t,n,0,r,a,null)),me(e,()=>e.bindTexture(e.TEXTURE_2D,null)),o}function Ub(e){return e.internalFormatFloat}function SS(e,t,n,s){let[r,a]=gl(t,n);return xl(e,r,a,Ub(s),s.textureFormatFloat,e.FLOAT)}function Gb(e){return e.internalFormatHalfFloat}function CS(e,t,n,s){let[r,a]=gl(t,n);return xl(e,r,a,Gb(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function Hb(e){return e.downloadTextureFormat}function NS(e,t,n,s){let[r,a]=gl(t,n);return xl(e,r,a,Hb(s),e.RGBA,e.UNSIGNED_BYTE)}function qb(e){return e.internalFormatPackedFloat}function TS(e,t,n,s){let[r,a]=$i(t,n);return xl(e,r,a,qb(s),e.RGBA,e.FLOAT)}function jb(e){return e.internalFormatPackedHalfFloat}function $S(e,t,n,s){let[r,a]=$i(t,n);return xl(e,r,a,jb(s),e.RGBA,s.textureTypeHalfFloat)}function AS(e,t,n){let s=0,r=3*4,a=3*4+2*4;return me(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Pb(e,t,"clipSpacePos",n,3,a,s)&&Pb(e,t,"uv",n,2,a,r)}function ES(e,t,n,s,r,a){me(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,u;r instanceof Uint8Array?(o=new Uint8Array(n*s*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*s*4),i=e.FLOAT,u=a.internalFormatPackedFloat),o.set(r),me(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,s,0,e.RGBA,i,o)),me(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function _S(e,t,n){me(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?me(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):me(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),me(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function RS(e,t,n,s){let r=e.createBuffer();me(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=4*4*t*n;return me(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),me(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),me(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function DS(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function FS(e,t,n,s){let[r,a]=gl(t,n),o=4,i=new Uint8Array(KH(t*n,o));return me(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function OS(e,t,n,s,r,a,o,i){let u=e,c=new Float32Array(XH(a,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function PS(e,t,n){let s=new Float32Array(t*n*4);return me(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var tq=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=X().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,HH(t,e)):this.gl=Ts(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(X().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=bl(this.gl,r),On(this.gl,a))this.textureHalfFloatExtension=bl(this.gl,a);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),On(this.gl,s))this.colorBufferHalfFloatExtension=bl(this.gl,s);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",On(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(On(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=kS(this.gl),this.indexBuffer=IS(this.gl),this.framebuffer=nS(this.gl),this.textureConfig=Ob(this.gl,this.textureHalfFloatExtension)}get debug(){return X().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;me(e,()=>e.finish()),me(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),me(e,()=>e.deleteFramebuffer(this.framebuffer)),me(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),me(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),me(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),SS(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),CS(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),NS(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),_S(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),ES(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),$S(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),TS(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Lb(this.gl,this.framebuffer),this.outputTexture=null),me(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>FS(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return OS(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return DS(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=RS(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(X().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>PS(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl,n=XI(t,e);this.vertexShader==null&&(this.vertexShader=wS(t));let s=YI(t);return me(t,()=>t.attachShader(s,this.vertexShader)),me(t,()=>t.attachShader(s,n)),QI(t,s),this.debug&&jd(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=AS(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&me(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&jd(this.gl,this.program),me(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?rS(this.gl,e,t):aS(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),me(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),oS(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=$i(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&jd(this.gl,this.program),yl(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),me(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),me(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=bl(this.gl,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await x.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=nq(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&x.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Kd(this.gl,e,this.framebuffer),this.debug&&yl(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Kd(this.gl,this.outputTexture,this.framebuffer),this.debug&&yl(this.gl)):Lb(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;Kd(s,e,this.framebuffer),this.debug&&yl(s),this.outputTexture=e,me(s,()=>s.viewport(0,0,t,n)),me(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),me(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function nq(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:sq,bincountImpl:LS,bincountReduceImpl:rq,ceilImpl:aq,concatImpl:oq,equalImpl:iq,expImpl:uq,expm1Impl:lq,floorImpl:cq,gatherNdImpl:dq,gatherV2Impl:hq,greaterImpl:pq,greaterEqualImpl:fq,lessImpl:mq,lessEqualImpl:gq,linSpaceImpl:bq,logImpl:yq,maxImpl:vq,maximumImpl:xq,minimumImpl:wq,multiplyImpl:kq,negImpl:Iq,notEqualImpl:Sq,prodImpl:Cq,rangeImpl:Nq,rsqrtImpl:Tq,sigmoidImpl:$q,simpleAbsImpl:zS,sliceImpl:Aq,sparseFillEmptyRowsImpl:Eq,sparseReshapeImpl:_q,sparseSegmentReductionImpl:MS,sqrtImpl:Rq,stridedSliceImpl:Dq,stringNGramsImpl:Fq,stringSplitImpl:Oq,stringToHashBucketFastImpl:Pq,subImpl:Lq,tileImpl:zq,topKImpl:Mq,transposeImpl:Kb,uniqueImpl:Bq}=vb;function BS(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function un(e,t){return t===1?[e]:BS(e,t)}function Vq(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var Wq=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let n=un("rc",t),s=ot(t),r=Gq(t,e,n),a=Hq(t,e[e.length-1],e[e.length-2],n),o=qq(e,n);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${o}));
          }
        }
      `}}};function Uq(e,t){let n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let o=2;o<e;o++)a=`${t[t.length-1-o]},`+a;n.push(a)}return n}function Gq(e,t,n){if(e===1)return`rc > ${t[0]}`;let s="";for(let r=e-2;r<e;r++)s+=`${n[r]} >= ${t[r]}`,r<e-1&&(s+="||");return s}function Hq(e,t,n,s){if(e===1)return"";let r=s.slice(-2);return`
    int r = ${r[0]};
    int c = ${r[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${t};
    bool rEdge = rp1 >= ${n};
  `}function qq(e,t){let n=e.length,s=Uq(n,t);return n===1?`getA(rc),
            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${s[0]}),
          cEdge ? 0. : getA(${s[1]}),
          rEdge ? 0. : getA(${s[2]}),
          rEdge || cEdge ? 0. : getA(${s[3]})`}var VS=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Pn(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2==1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${jq(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Vb():Bb(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function jq(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?u6(["r","c","d"],"inputShape"):Ja(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var Kq=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=US(t,n),r=GS(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=WS(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[r].shift();return this.usedTextures[r].push(i),i}let o;return s===Xt.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===Xt.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===Xt.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===Xt.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===Xt.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=US(n,s),a=GS(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let o=WS(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),i=X().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let u=this.usedTextures[a],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Xq(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}function WS(e,t,n,s,r){let a=Yq(t,s),o;if(r){let[u,c]=$i(e[0],e[1]);o=u*c}else{let[u,c]=gl(e[0],e[1]);o=u*c}let i=Xq(n,a);return o*i}function Yq(e,t){switch(e){case Xt.PACKED_2X2_FLOAT32:return qb(t);case Xt.PACKED_2X2_FLOAT16:return jb(t);case Xt.UNPACKED_FLOAT32:return Ub(t);case Xt.UNPACKED_FLOAT16:return Gb(t);case Xt.PACKED_4X1_UNSIGNED_BYTE:return Hb(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function Qq(e){return X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Xt.PACKED_2X2_FLOAT32:Xt.UNPACKED_FLOAT32:e?Xt.PACKED_2X2_FLOAT16:Xt.UNPACKED_FLOAT16}function US(e,t){if(e===Fn.UPLOAD)return Xt.PACKED_2X2_FLOAT32;if(e===Fn.RENDER||e==null)return Qq(t);if(e===Fn.DOWNLOAD||e===Fn.PIXELS)return Xt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function GS(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var vr=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Pn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},ls="if (isnan(x)) return x;",Zq="return x;",HS="return abs(x);",Jq="return (x >= 0.0) ? x : (exp(x) - 1.0);",ej=ls+`
  return (x < 0.0) ? 0.0 : x;
`,tj=ls+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,eh="return x;",nj="return 1.0 / (1.0 + exp(-1.0 * x));",sj="return x;",rj=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,aj=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,oj=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ij="return 1.0 / (1.0 + exp(-1.0 * x));",Fi=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Pn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},uj=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,n=un("rc",t),s=ot(t),r=Vq(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},lj=ss.whereImpl,cj=1e-7,dj=1e-4,th={};function hj(e){return e in th||(th[e]={}),th[e]}var pj=X().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),fj=600;function mj(){return X().global.screen==null?1024:X().global.screen.height*X().global.screen.width*window.devicePixelRatio*fj/1024/1024}var qS=class extends au{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!X().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=Ts(X().getNumber("WEBGL_VERSION"));this.binaryCache=hj(X().getNumber("WEBGL_VERSION")),this.gpgpu=new tq(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new Kq(this.gpgpu),this.numMBBeforeWarning=mj(),this.texData=new ac(this,Ds())}nextDataId(){return qS.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((X().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||X().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:Fn.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(X().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:Fn.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:o,isPacked:i}=t;if(a!=null){let d;i?d=new Fi(o,eh):d=new vr(o,eh);let h=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:s}],s),p=this.readSync(h.dataId);return this.disposeIntermediateTensorInfo(h),p}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let u=this.activeTimers!=null,c;u&&(c=x.now());let l;if(s==="complex64"){let d=this.readSync(r.real.dataId),h=this.readSync(r.imag.dataId);l=T.mergeRealAndImagArrays(d,h)}else l=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=x.now()-c),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){let p=this.pendingRead.get(e);return new Promise(f=>p.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(r!=null){let p;i?p=new Fi(s,eh):p=new vr(s,eh);let f=this.runWebGLProgram(p,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(X().getBool("DEBUG")&&!X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&X().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(a!=="complex64"&&X().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let p=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(p.texture,...qd(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let l;if(a==="complex64"){let p=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=p[0],m=p[1];l=T.mergeRealAndImagArrays(f,m)}else if(u==null)l=this.getValuesFromTexture(e);else{let p=x.sizeFromShape(s);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,p)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){let p=this.gpgpu.gl;me(p,()=>p.deleteBuffer(u))}let d=this.convertAndCacheOnCPU(e,l),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach(p=>p(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ds().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>x.decodeString(s))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return _e(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!qI(n))throw X().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=x.sizeFromShape(t);if(X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),h=this.texData.get(d.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(h.texture,...qd(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),p}let a=X().getBool("WEBGL_PACK")&&s===!0,o=a?Xd(t):t,i=a?new Q6(o):new Y6(o),u=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),l}timerAvailable(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=x.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=x.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(r);o.kernelMs=x.sum(i),o.getExtraProfileInfo=()=>i.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:x.now(),endMs:null}}endTimer(e){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=x.now(),e)}async getQueryTime(e){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=pj){return X().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&x.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return lj(e.shape,t)}packedUnaryOp(e,t,n){let s=new Fi(e.shape,t),r=this.compileAndRun(s,[e],n);return Ds().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=zS(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(X().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,HS,e.dtype);let t=new vr(e.shape,HS),n=this.compileAndRun(t,[e]);return Ds().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&x.isString(n[0])){let r=n.map(a=>x.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:s}=this.makeTensorInfo(e,t,n);return Ds().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){let t=new uj(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new Wq(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Qa(e.shape),...Za(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[Qa(t),...Za(t)],a=new VS(r,n),o=!0,i=[n],u=this.runWebGLProgram(a,[s],e.dtype,i,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:s,dtype:r}=t,a=Xd(s),o,i=qd(a);n?o=new X6(a):o=new K6(a);let u=!0,c=[i],l=this.runWebGLProgram(o,[{shape:a,dtype:r,dataId:e}],r,c,u);return{dtype:r,shape:s,dataId:l.dataId}}runWebGLProgram(e,t,n,s,r=!1){let a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===ml.DENSE){let m=qd(e.outputShape);o.texShape=m.map(g=>g*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),x.sizeFromShape(a.shape)===0)return o.values=x.getTypedArrayFromDType(a.dtype,0),a;let i=[],u=t.map(m=>{if(m.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let g=this.texData.get(m.dataId);if(g.texture==null){if(!e.packedInputs&&x.sizeFromShape(m.shape)<=X().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:m.shape,texData:null,isUniform:!0,uniformValues:g.values};e.packedInputs&&(g.isPacked=!0,g.shape=m.shape)}else if(!!g.isPacked!=!!e.packedInputs)m=g.isPacked?this.unpackTensor(m):this.packTensor(m),i.push(m),g=this.texData.get(m.dataId);else if(g.isPacked&&!vl(g.shape,m.shape)){let b=m,v=m.shape;m.shape=g.shape,m=this.packedReshape(m,v),i.push(m),g=this.texData.get(m.dataId),b.shape=v}return this.uploadToGPU(m.dataId),{shape:m.shape,texData:g,isUniform:!1}});this.uploadToGPU(a.dataId);let c={shape:a.shape,texData:o,isUniform:!1},l=j6(e,u,c),d=this.getAndSaveBinary(l,()=>H6(this.gpgpu,e,u,c)),h=this.activeTimers!=null,p;h&&(p=this.startTimer()),q6(this.gpgpu,d,u,c,s),i.forEach(m=>this.disposeIntermediateTensorInfo(m)),h&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));let f=X().get("WEBGL_FLUSH_THRESHOLD");if(f>0){let m=x.now();m-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=m)}if(!X().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&r===!1){let m=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),m}return a}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(X().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=K(()=>{if(!X().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=X().getBool("DEBUG");X().set("DEBUG",!1);let t=this.abs(Te(1e-8)).dataSync()[0];if(X().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?cj:dj}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let u=this.activeTimers!=null,c;u&&(c=x.now());let l=t.texShape;if(l==null&&(l=lS(n,i),t.texShape=l),r!=null){let d=Xd(n),h,p=l[1],f=l[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;i?([p,f]=$i(l[0],l[1]),h=new J6(d,m)):h=new Z6(d,m);let g=this.makeTensorInfo([f,p],s);m?this.texData.get(g.dataId).usage=Fn.PIXELS:this.texData.get(g.dataId).usage=Fn.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),p,f,r);let b=[[f,p]],v=!0,y=this.runWebGLProgram(h,[g],s,b,v),w=this.texData.get(y.dataId);t.texture=w.texture,t.texShape=w.texShape,t.isPacked=w.isPacked,t.usage=w.usage,this.disposeIntermediateTensorInfo(g),this.texData.delete(y.dataId),t.values=null,u&&(this.uploadWaitMs+=x.now()-c)}else{let d=this.acquireTexture(l,o,s,i);t.texture=d}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=gj(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*x.bytesPerElement(t)}},jS=qS;jS.nextDataId=0;function gj(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}Bu.isBrowser()&&Bc("webgl",()=>new jS,2);var KS=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Oi=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Pn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},nh=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,wl=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=Pn(r);let a="";if(s)if(r===0||x.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${ot(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=un("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function $n(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var bj={kernelName:Kr,backendName:"webgl",kernelFunc:$n};function xr(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(a.dataId),i=$n({inputs:{x:s},backend:n}),u=$n({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:u},a}var yj={kernelName:pc,backendName:"webgl",kernelFunc:xr},XS="return (a < 0.) ? b * a : a;",YS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function vj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=n.makeTensorInfo([],"float32",x.createScalarValue(a,"float32")),i=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wl(YS,r.shape,o.shape):new Oi(XS,r.shape,o.shape),u=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),u}var xj={kernelName:Ao,backendName:"webgl",kernelFunc:vj},QS="return (a < 0.) ? b * a : a;",ZS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function wj(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wl(ZS,s.shape,r.shape):new Oi(QS,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var kj={kernelName:oa,backendName:"webgl",kernelFunc:wj},JS="if (isnan(x)) return x;",Ij=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Sj=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ge({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:o}=r,i=a,u=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let d=i.texData.get(o.dataId),h=n(d.values,u);return i.makeTensorInfo(o.shape,u,h)}let c=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,l;return c?l=new Fi(o.shape,t):l=new vr(o.shape,e),i.runWebGLProgram(l,[o],u)}}function Yt({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{let{a:u,b:c}=o,l=i;if(s&&u.dtype==="complex64"){let f=l.texData.get(u.dataId),m=l.texData.get(c.dataId),[g,b]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(y=>{let[w,k]=y,S={dataId:w.dataId,dtype:w.dtype,shape:u.shape},N={dataId:k.dataId,dtype:k.dtype,shape:c.shape},A=new Oi(e,u.shape,c.shape);return l.runWebGLProgram(A,[S,N],mn(w.dtype,k.dtype))}),v=xr({inputs:{real:g,imag:b},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(b),v}let d=a||mn(u.dtype,c.dtype);if((u.dtype==="string"||c.dtype==="string"||l.shouldExecuteOnCPU([u,c]))&&r!=null){let f=l.texData.get(u.dataId).values,m=l.texData.get(c.dataId).values,g=u.dtype==="string"?T.fromUint8ToStringArray(f):f,b=u.dtype==="string"?T.fromUint8ToStringArray(m):m,[v,y]=r(u.shape,c.shape,g,b,d),w=l.makeTensorInfo(y,d),k=l.texData.get(w.dataId);return k.values=v,w}let h=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,p;return h?p=new wl(t,u.shape,c.shape,n):p=new Oi(e,u.shape,c.shape),l.runWebGLProgram(p,[u,c],d)}}function sh(e,t=!1){if(e==="linear")return t?sj:Zq;if(e==="relu")return t?aj:ej;if(e==="elu")return t?rj:Jq;if(e==="relu6")return t?oj:tj;if(e==="prelu")return t?ZS:QS;if(e==="leakyrelu")return t?YS:XS;if(e==="sigmoid")return t?ij:nj;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var e0=class{constructor(e,t,n,s=!1,r=!1,a=!1,o=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Pn(this.outputShape.length);let c=s?e[1]:e[2],l=Math.ceil(c/2),d=s?"i * 2, rc.y":"rc.y, i * 2",h=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:u?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let v="rc.x",y="rc.x";e[0]<t[0]?v=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${l}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${l}; i++) {
          int batchA = ${v};
          int batchB = ${y};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${h});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${f[0]});
          result += (${p[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${g}

        setOutput(result);
      }
    `}},t0={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},n0=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},s0="return a * b;";function Xb(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=T.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let i=n.texData.get(s.dataId),u=n.texData.get(r.dataId),c=new n0(t0.REAL,s.shape,r.shape),l=new n0(t0.IMAG,s.shape,r.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:r.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:r.shape}],h=n.runWebGLProgram(c,d,"float32"),p=n.runWebGLProgram(l,d,"float32"),f=xr({inputs:{real:h,imag:p},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}if(n.shouldExecuteOnCPU([s,r])){let i=n.texData.get(s.dataId),u=n.texData.get(r.dataId),[c,l]=kq(s.shape,r.shape,i.values,u.values,a),d=n.makeTensorInfo(l,a),h=n.texData.get(d.dataId);return h.values=c,d}let o;return X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new wl(s0,s.shape,r.shape):o=new Oi(s0,s.shape,r.shape),n.runWebGLProgram(o,[s,r],a)}var Cj={kernelName:sa,backendName:"webgl",kernelFunc:Xb};function Nj(e,t,n){let s=[Qa(e.shape),...Za(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[Qa(t),...Za(t)],o=new VS(a,s),i=!0,u=[s],c=n.runWebGLProgram(o,[r],e.dtype,u,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}function he(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=n,i=x.sizeFromShape(r.shape),u=x.inferFromImplicitShape(a,i),c=x.sizeFromShape(u);x.assert(i===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let l=o.texData.get(r.dataId);return l.isPacked&&!vl(r.shape,u)&&!(l.texture!==null&&vl(l.shape,u))?Nj(r,u,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype})}var Tj={kernelName:Vo,backendName:"webgl",kernelFunc:he},r0=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o=Math.floor(n/4)*4,i=n%4,u="sumValue += dot(values, ones);";if(t!=null){let l=1/t;u=`sumValue += dot(values * ${x.isInt(l)?l.toPrecision(2):l}, ones);`}let c="";r%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}},$j=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let c=Math.floor(n/4)*4,l=n%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,h="vec4";t==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,h="bvec4"):t==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,h="bvec4");let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${l===1}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${l===2}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${l===3}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function Aj(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=T.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function to(e,t,n,s){let r=Aj(e.shape),a=e;for(let o=0;o<r.length;o++){let{inSize:i,windowSize:u,outSize:c}=r[o],l,d;n==="mean"?l=o===0?new r0({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},i):new r0({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c}):l=new $j({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},n),d=a,a=s.runWebGLProgram(l,[a],t),d.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(d)}return a}var Ej=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=ot(this.rank),r=_j(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function _j(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var Rj=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=ot(this.rank),r=BS("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=r[c];let o=`vec2(${a.slice(-2).join()})`,i=`++${r[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${i}) {
        result[1] = ${u};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${i}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function rh(e,t,n){let s=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Rj(e.shape,t):new Ej(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function Dj(e,t,n,s){let r=t,a=e.shape.length,o=x.parseAxisParam(r,e.shape),i=o,u=T.getAxesPermutation(i,a),c=u!=null,l=e;c&&(l=rh(e,u,s),i=T.getInnerMostAxes(i.length,a)),T.assertAxesAreInnerMostDims("sum",i,a);let[d,h]=T.computeOutAndReduceShapes(l.shape,i),p=d;n&&(p=T.expandShapeToKeepDim(d,o));let f=x.sizeFromShape(h),g=x.sizeFromShape(e.shape)/f,b=he({inputs:{x:l},attrs:{shape:[g,f]},backend:s}),v=Oc(e.dtype),y=to(b,v,"sum",s),w=he({inputs:{x:y},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(y),c&&s.disposeIntermediateTensorInfo(l),w}function ah(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Dj(r,a,o,n)}var Fj={kernelName:fa,backendName:"webgl",kernelFunc:ah};function ln(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=r.shape[a[l]];let c;if(o.shouldExecuteOnCPU([r])){let d=o.texData.get(r.dataId).values,h=Kb(d,r.shape,r.dtype,a,u);c=o.makeTensorInfo(u,r.dtype);let p=o.texData.get(c.dataId);p.values=h}else c=rh(r,a,o);return c}var Oj={kernelName:va,backendName:"webgl",kernelFunc:ln},a0=1e3;function oh({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){let c=e.shape.length,l=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],h=s?t.shape[l-1]:t.shape[l-2],p=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=x.sizeFromShape(m),v=x.sizeFromShape(g),w=li.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);x.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let k=n?[b,d,p]:[b,p,d],S=s?[v,f,h]:[v,h,f],N=he({inputs:{x:e},backend:r,attrs:{shape:k}}),A=he({inputs:{x:t},backend:r,attrs:{shape:S}}),_=[N,A],O=Math.max(b,v),R=n?N.shape[1]:N.shape[2],D=a!=null,C=o!=null,P=u==="leakyrelu",V=u!=null?sh(u,!0):null,G=D||C||P||V!=null,U;if((p===1||f===1)&&R>a0&&G===!1){let Y=N,Z=A;n&&(Y=ln({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),_.push(Y)),s&&(Z=ln({inputs:{x:A},backend:r,attrs:{perm:[0,2,1]}}),_.push(Z));let J=f!==1,ne=f===1,ee=Y;J&&(ee=he({inputs:{x:Y},backend:r,attrs:{shape:[O,R,1]}}),_.push(ee));let te=f===1?2:1,re=Z;ne&&(re=he({inputs:{x:Z},backend:r,attrs:{shape:[O,1,R]}}),_.push(re));let ce=Xb({inputs:{a:ee,b:re},backend:r});U=ah({inputs:{x:ce},backend:r,attrs:{axis:te,keepDims:!0}}),_.push(ce)}else{let Y=mn(e.dtype,t.dtype),Z=new e0(k,S,[O,p,f],n,s,D,V,C,P),J=[N,A];if(a!=null&&J.push(a),C&&J.push(o),P){let ne=r.makeTensorInfo([],"float32",x.createScalarValue(i,"float32"));J.push(ne),_.push(ne)}U=r.runWebGLProgram(Z,J,Y)}let q=he({inputs:{x:U},backend:r,attrs:{shape:w}});_.push(U);for(let Y of _)r.disposeIntermediateTensorInfo(Y);return q}function Pj(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s;return oh({a:r,b:a,transposeA:u,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}var Lj={kernelName:wa,backendName:"webgl",kernelFunc:Pj},o0="return abs(x);";function zj(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),o=zS(a.values);return n.makeTensorInfo(s.shape,s.dtype,o)}let r;return X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Fi(s.shape,o0):r=new vr(s.shape,o0),n.runWebGLProgram(r,[s],s.dtype)}var Mj={kernelName:go,backendName:"webgl",kernelFunc:zj},Bj=ls+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Vj=Ge({opSnippet:Bj}),Wj={kernelName:uu,backendName:"webgl",kernelFunc:Vj},Uj=ls+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Gj=Ge({opSnippet:Uj}),Hj={kernelName:lu,backendName:"webgl",kernelFunc:Gj},i0="return a + b;",qj=Yt({opSnippet:i0,packedOpSnippet:i0,supportsComplex:!0,cpuKernelImpl:sq}),jj={kernelName:Qs,backendName:"webgl",kernelFunc:qj},Kj=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},Xj=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function ih(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return $n({inputs:{x:s[0]},backend:n});if(s.length>X().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(s.length/2),c=ih({inputs:s.slice(0,u),backend:n}),l=ih({inputs:s.slice(u),backend:n});return ih({inputs:[c,l],backend:n})}let r=s.map(u=>u.dtype).reduce((u,c)=>mn(u,c)),a=s.map(u=>u.shape),i=X().getBool("WEBGL_PACK")?new Xj(s[0].shape,a):new Kj(s[0].shape,a);return n.runWebGLProgram(i,s,r)}var Yj={kernelName:Er,backendName:"webgl",kernelFunc:ih};function Qj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,u=x.parseAxisParam(a,r.shape),c=u,l=T.getAxesPermutation(c,i),d=r;l!=null&&(d=ln({inputs:{x:r},backend:n,attrs:{perm:l}}),c=T.getInnerMostAxes(c.length,i)),T.assertAxesAreInnerMostDims("all",c,i);let[h,p]=T.computeOutAndReduceShapes(d.shape,c),f=x.sizeFromShape(p),m=he({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=to(m,m.dtype,"all",n),b;if(o){let v=T.expandShapeToKeepDim(h,u);b=he({inputs:{x:g},backend:n,attrs:{shape:v}})}else b=he({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),l!=null&&n.disposeIntermediateTensorInfo(d),b}var Zj={kernelName:cu,backendName:"webgl",kernelFunc:Qj};function Jj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,u=x.parseAxisParam(a,r.shape),c=u,l=T.getAxesPermutation(c,i),d=r;l!=null&&(d=ln({inputs:{x:r},backend:n,attrs:{perm:l}}),c=T.getInnerMostAxes(c.length,i)),T.assertAxesAreInnerMostDims("any",c,i);let[h,p]=T.computeOutAndReduceShapes(d.shape,c),f=x.sizeFromShape(p),m=he({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=to(m,m.dtype,"any",n),b;if(o){let v=T.expandShapeToKeepDim(h,u);b=he({inputs:{x:g},backend:n,attrs:{shape:v}})}else b=he({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),l!=null&&n.disposeIntermediateTensorInfo(d),b}var e5={kernelName:du,backendName:"webgl",kernelFunc:Jj},t5=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},n5=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,x.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,u=ot(i),c=un("coords",i),l,d;if(a===1){d=i+1;let N=ot(d);l=`
        ${N} sourceLocR = ${N}(${c.join()}, 0);
        ++${c[i-1]};
        ${N} sourceLocG = ${N}(${c.join()}, 0);
        ++${c[i-2]};
        ${N} sourceLocA = ${N}(${c.join()}, 0);
        --${c[i-1]};
        ${N} sourceLocB = ${N}(${c.join()}, 0);
        --${c[i-2]};`}else d=i,l=`
        ${u} sourceLocR = coords;
        ++${c[i-1]};
        ${u} sourceLocG = coords;
        ++${c[i-2]};
        ${u} sourceLocA = coords;
        --${c[i-1]};
        ${u} sourceLocB = coords;
        --${c[i-2]};`;let h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],f=h.map(N=>"int "+N),m=un("sourceLocR",d-1).concat("inIdx.r"),g=un("sourceLocG",d-1).concat("inIdx.g"),b=un("sourceLocB",d-1).concat("inIdx.b"),v=un("sourceLocA",d-1).concat("inIdx.a"),y=n==="max"?"greaterThan":"lessThan",w=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${v.join()})));`,k=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,S=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${h.join()}),
                                          vec2(${h.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${h.join()}),
                               vec2(${h.slice(-2).join()}));
      }
      ${S}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${c[i-2]} < ${o[i-2]-1};
        ${l}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function u0(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let o=T.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},u=new t5(i,n,s==null),c=[t];s!=null&&c.push(s);let l=e.runWebGLProgram(u,c,"int32");if(l.shape[1]===1)return l;let d=u0(e,t,n,l);return e.disposeIntermediateTensorInfo(l),d}function l0(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],o=T.computeOptimalWindowSize(a),i=new n5(r,o,n,s==null),u=s==null?[t]:[t,s],c=e.runWebGLProgram(i,u,"int32");if(c.shape.length===t.shape.length){let l=l0(e,t,n,c);return e.disposeIntermediateTensorInfo(c),l}return c}function c0(e,t,n,s){let r=[n];if(T.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!X().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,u=t;i&&(u=e.unpackTensor(t),a.push(u));let[c,l]=T.computeOutAndReduceShapes(u.shape,r),d=x.sizeFromShape(l),h=he({inputs:{x:u},backend:e,attrs:{shape:[-1,d]}});a.push(h);let p=u0(e,h,s);a.push(p);let f=he({inputs:{x:p},backend:e,attrs:{shape:c}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return l0(e,t,s)}function s5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=x.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),u=r,c=[];i!=null&&(u=ln({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=T.getInnerMostAxes(o.length,u.shape.length)),T.assertAxesAreInnerMostDims("argMax",[o[0]],u.shape.length);let l=c0(n,u,o[0],"max");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),l}var r5={kernelName:_r,backendName:"webgl",kernelFunc:s5};function a5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=x.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),u=r,c=[];i!=null&&(u=ln({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=T.getInnerMostAxes(o.length,u.shape.length)),T.assertAxesAreInnerMostDims("argMin",[o[0]],u.shape.length);let l=c0(n,u,o[0],"min");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),l}var o5={kernelName:hu,backendName:"webgl",kernelFunc:a5},i5=ls+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,u5=Ge({opSnippet:i5}),l5={kernelName:pu,backendName:"webgl",kernelFunc:u5},c5=ls+"return log(x + sqrt(x * x + 1.0));",d5=Ge({opSnippet:c5}),h5={kernelName:fu,backendName:"webgl",kernelFunc:d5},p5=ls+`
  return atan(x);
`,f5=Ge({opSnippet:p5}),m5={kernelName:mu,backendName:"webgl",kernelFunc:f5},g5=Ij+`
  return atan(a, b);
`,b5=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Sj+`
  return result;
`,y5=Yt({opSnippet:g5,packedOpSnippet:b5}),v5={kernelName:bu,backendName:"webgl",kernelFunc:y5},x5=ls+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,w5=Ge({opSnippet:x5}),k5={kernelName:gu,backendName:"webgl",kernelFunc:w5},kl=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,b="0.0";if(f||(b="-1.0 / 1e-20"),n){let N=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${h}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${l};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${N} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(y="avgValue / count");let w=Math.floor(a/4)*4,k=a%4,S=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${h}, ${p});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${l};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${S}
          }

          int xC = xCCorner + ${w};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${S}
          }
        }
        setOutput(${y});
      }
    `}},Yb=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;let v=t==="avg",y="0.0";if(v||(y="-1.0 / 1e-20"),n){let _=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${u});
        const ivec3 pads = ivec3(${m}, ${g}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${h};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${l}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${_} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w="max",k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / count");let S=Math.floor(a/4)*4,N=a%4,A=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${u});
      const ivec3 pads = ivec3(${m}, ${g}, ${b});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${S}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${A}
            }

            int xC = xCCorner + ${S};
            if (${N===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${A}
            } else if (${N===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${A}
            } else if (${N===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${A}
            }
          }
          setOutput(${k});
        }
      }
    `}};function I5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ai(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=s,c=1;x.assert(T.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let l=T.computePool2DInfo(r.shape,a,o,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&x.arraysEqual(l.inShape,l.outShape))return $n({inputs:{x:r},backend:n});let d=new kl(l,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var S5={kernelName:Rr,backendName:"webgl",kernelFunc:I5};function C5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=s,l=[1,1,1],d=T.computePool3DInfo(r.shape,a,o,l,i,u,c),h=new Yb(d,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}var N5={kernelName:hc,backendName:"webgl",kernelFunc:C5},T5=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.top,l=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${l});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},$5=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function A5(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=s,d=[1,1,1],h=T.computePool3DInfo(o.shape,i,u,d,c,l),p=new $5(h);return n.runWebGLProgram(p,[r],o.dtype)}var E5={kernelName:qp,backendName:"webgl",kernelFunc:A5};function _5(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Ai([r,a],"avgPoolGrad");let{filterSize:i,strides:u,pad:c}=s,l=T.computePool2DInfo(o.shape,i,u,1,c),d=new T5(l);return n.runWebGLProgram(d,[r],o.dtype)}var R5={kernelName:Hp,backendName:"webgl",kernelFunc:_5};function D5(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return oh({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var F5={kernelName:Dr,backendName:"webgl",kernelFunc:D5},O5=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let o="0.0";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},P5=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},L5=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:o,scale:i}=e;x.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),x.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),x.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;u==null&&(u=.001);let c=[s,r,a],l=null;o!=null&&(l=o.shape,c.push(o));let d=null;i!=null&&(d=i.shape,c.push(i));let h=X().getBool("WEBGL_PACK_NORMALIZATION")?new P5(s.shape,r.shape,a.shape,l,d,u):new O5(s.shape,r.shape,a.shape,l,d,u);return t.runWebGLProgram(h,c,c[0].dtype)},z5={kernelName:qr,backendName:"webgl",kernelFunc:L5},M5=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=ot(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=B5(this.rank),s,r=e.map((a,o)=>`sourceLoc.${Qb[o]} = start[${o}] + coords.${Qb[o]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},Qb=["x","y","z","w","u","v"];function B5(e){if(e===1)return"sourceLoc";if(e<=6)return Qb.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var V5=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=ot(this.rank),n=un("coords",this.rank),s=un("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,l)=>`start[${l}]`).join()});`:e.map((c,l)=>`${s[l]} = ${n[l]} + start[${l}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function W5(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=It.computeFlatOffset(t,x.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};let u=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,u+1),a}function Pi(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,u]=It.parseSliceParams(r,a,o);if(It.assertParamsValid(r,i,u),x.sizeFromShape(u)===0)return n.makeTensorInfo(u,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.texData.get(r.dataId),h=Aq(d.values,i,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,h)}let{isPacked:c}=n.texData.get(r.dataId),l=It.isSliceContinous(r.shape,i,u);if(c||!l){let d=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new V5(u):new M5(u),h=[i];return n.runWebGLProgram(d,[r],r.dtype,h)}return n.uploadToGPU(r.dataId),W5(r,i,u,n)}var U5={kernelName:qo,backendName:"webgl",kernelFunc:Pi},G5=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;x.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((v,y)=>v*y),u=T.getReshaped(r.shape,a,i),c=T.getPermuted(u.length,a.length),l=T.getReshapedPermuted(r.shape,a,i),d=T.getSliceBeginCoords(o,a.length),h=T.getSliceSize(l,o,a.length),p=[],f=he({inputs:{x:r},backend:n,attrs:{shape:u}}),m=ln({inputs:{x:f},backend:n,attrs:{perm:c}}),g=he({inputs:{x:m},backend:n,attrs:{shape:l}}),b=Pi({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(v=>n.disposeIntermediateTensorInfo(v)),b},H5={kernelName:bo,backendName:"webgl",kernelFunc:G5};function q5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.readSync(r.dataId),u=n.readSync(a.dataId),c=LS(i,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var j5={kernelName:jp,backendName:"webgl",kernelFunc:q5};function K5(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),i=T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var X5={kernelName:Kp,backendName:"webgl",kernelFunc:K5},Y5="return float(a != b);",d0=Yt({opSnippet:Y5,cpuKernelImpl:Sq,dtype:"bool"}),Q5={kernelName:Fo,backendName:"webgl",kernelFunc:d0};function Il(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return $n({inputs:{x:r.complexTensorInfos.real},backend:n})}var Z5={kernelName:kc,backendName:"webgl",kernelFunc:Il},J5="return float(int(x));";function eK(e,t){let n=new vr(e.shape,J5),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Zb(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return $n({inputs:{x:r},backend:n});let o=Ft(r.shape),i=Zb({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=xr({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),u}if(r.dtype==="complex64"){let o=Il({inputs:{input:r},backend:n}),i=Zb({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!x.hasEncodingLoss(r.dtype,a)){let o=$n({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return eK(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",x.getTypedArrayFromDType("bool",1)),u=d0({inputs:{a:r,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var tK={kernelName:Fr,backendName:"webgl",kernelFunc:Zb},h0="return ceil(x);",nK=Ge({opSnippet:h0,packedOpSnippet:h0,cpuKernelImpl:aq}),sK={kernelName:Or,backendName:"webgl",kernelFunc:nK},rK=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},aK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function oK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i;X().getBool("WEBGL_PACK_CLIP")?i=new aK(r.shape):i=new rK(r.shape);let u=[[a],[o]];return n.runWebGLProgram(i,[r],r.dtype,u)}var iK={kernelName:Zs,backendName:"webgl",kernelFunc:oK},uK=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function p0(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function lK(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new uK(s.shape),o=[p0(s,r.complexTensorInfos.real),p0(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var cK={kernelName:fc,backendName:"webgl",kernelFunc:lK},dK=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},hK=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=ot(s),a=un("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let u=o[t],c=o.slice(-2),l=o.join(),d=`if (${u} < ${i[0]}) {
        return getChannel(
            getT0(${l}), vec2(${c.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];d+=`
        if (${u} < ${i[f]}  && ${u} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${uh(o,u,m)}),
            vec2(${uh(c,u,m)}));
        }`}let h=i.length,p=i[i.length-1];d+=`
        return getChannel(
          getT${h}(${uh(o,u,p)}),
          vec2(${uh(c,u,p)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function uh(e,t,n){let s=e.indexOf(t);return e.map((a,o)=>o===s?`${a} - ${n}`:a).join()}function lh(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return $n({inputs:{x:r.complexTensorInfos.imag},backend:n})}var pK={kernelName:yc,backendName:"webgl",kernelFunc:lh};function Li(e,t,n){let s=e[0].dtype;if(s==="complex64"){let l=e.map(m=>Il({inputs:{input:m},backend:n})),d=e.map(m=>lh({inputs:{input:m},backend:n})),h=Li(l,t,n),p=Li(d,t,n),f=xr({inputs:{real:h,imag:p},backend:n});return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),d.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let l=e.map(b=>{let v=x.sizeFromShape(b.shape.slice(t));return he({inputs:{x:b},backend:n,attrs:{shape:[-1,v]}})}),d=l.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),h=T.computeOutShape(l.map(b=>b.shape),1),p=l[0].shape[0]===1,f=oq(d,h,s,p),m=T.computeOutShape(e.map(b=>b.shape),t),g=n.makeTensorInfo(m,s,f);return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),g}if(e.length>X().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(e.length/2),d=Li(e.slice(0,l),t,n),h=Li(e.slice(l),t,n),p=Li([d,h],t,n);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),p}if(X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let l=new hK(e.map(d=>d.shape),t);return n.runWebGLProgram(l,e,s)}let{tensors2D:a,outShape:o}=fK(e,t,n),i=new dK(a.map(l=>l.shape)),u=n.runWebGLProgram(i,a,s);a.forEach(l=>n.disposeIntermediateTensorInfo(l));let c=he({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),c}function fK(e,t,n){let s=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>he({inputs:{x:a},attrs:{shape:[-1,x.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function f0(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=x.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(c=>c.shape),a);if(x.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>x.sizeFromShape(c.shape)>0);if(i.length===1)return $n({inputs:{x:i[0]},backend:n});let u=i.map(c=>c.shape);return T.assertParamsConsistent(u,a),Li(i,a,n)}var mK={kernelName:yo,backendName:"webgl",kernelFunc:f0},m0=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,b=m?2:3,v=m?3:1,y="",w="";n&&(s?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:y=`
          float activation(float x) {
            ${n}
          }
        `,w="result = activation(result);");let k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${v}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${l};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${w}
        setOutput(result);
      }
    `}},gK=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${l}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},bK=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Pn(this.outputShape.length);let{dataFormat:n}=t,s=on(),r=n==="channelsLast",a=r?0:1,o=r?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,u="";for(let c=0;c<=1;c++)for(let l=0;l<=1;l++)u+=`
          blockIndex = rc.y + ${l};
          pos = rc.x + ${c};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+l}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+l}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${s.output} = result;
      }
    `}};function g0({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let u=e.shape,c=s.texData.get(e.dataId),l=n.inChannels,d=u[0]*u[1]*u[2],h=n.outChannels,p=n.dataFormat==="channelsLast",f=!1,m=!1,g,b=[];if(!((d===1||h===1)&&l>a0)&&c.isPacked&&p&&c.texture!=null&&u[2]%2!=0&&x.arraysEqual(c.shape.slice(-3),u.slice(-3))){let w=u[0]*u[1]*(u[2]+1),k={dataId:e.dataId,shape:[1,w,n.inChannels],dtype:e.dtype},S=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,x.assert(vl(c.shape,k.shape),()=>`packed reshape ${c.shape} to ${k.shape} isn't free`);let N=he({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(N);let A=oh({a:k,b:N,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),_=s.texData.get(A.dataId);x.assert(_.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=S,_.shape=n.outShape,g=$n({inputs:{x:A},backend:s}),g.shape=n.outShape,b.push(A)}else{let w=p?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],k=he({inputs:{x:e},backend:s,attrs:{shape:[1,w,n.inChannels]}}),S=he({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),N=oh({a:k,b:S,transposeA:f,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=he({inputs:{x:N},backend:s,attrs:{shape:n.outShape}}),b.push(k),b.push(S),b.push(N)}for(let w of b)s.disposeIntermediateTensorInfo(w);return g}function b0({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:u,filterHeight:c,inChannels:l,outWidth:d,outHeight:h,dataFormat:p}=n,f=p==="channelsLast",m=u*c*l,g=h*d,b=[m,g],v=!0,y=!1,w=[],k=he({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),S=he({inputs:{x:t},backend:s,attrs:{shape:[1,m,x.sizeFromShape(t.shape)/m]}});w.push(k),w.push(S);let N=new bK(b,n),A=[k.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],_=s.runWebGLProgram(N,[k],"float32",A),O=he({inputs:{x:_},backend:s,attrs:{shape:[1,b[0],b[1]]}});w.push(_),w.push(O);let R=r!=null,D=a!=null,C=i==="leakyrelu",P=i?sh(i,!0):null,V=new e0(O.shape,S.shape,[1,g,n.outChannels],v,y,R,P,D,C),G=[O,S];if(r&&G.push(r),D&&G.push(a),C){let Z=s.makeTensorInfo([],"float32",x.createScalarValue(o,"float32"));G.push(Z),w.push(Z)}let U=s.runWebGLProgram(V,G,"float32"),q=f?[1,h,d,n.outChannels]:[1,n.outChannels,h,d],Y=he({inputs:{x:U},backend:s,attrs:{shape:q}});w.push(U);for(let Z of w)s.disposeIntermediateTensorInfo(Z);return Y}function yK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=s,d=T.convertConv2DDataFormat(u),h=T.computeConv2DInfo(r.shape,a.shape,o,c,i,l,!1,d),p;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))p=g0({x:r,filter:a,convInfo:h,backend:n});else if(X().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)p=b0({x:r,filter:a,convInfo:h,backend:n});else{let m=new m0(h);p=n.runWebGLProgram(m,[r,a],"float32")}let f=he({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),f}var vK={kernelName:Pr,backendName:"webgl",kernelFunc:yK},xK=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},wK=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=a?1:2,c=a?2:3,l=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${l}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},kK=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},IK=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function SK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=s,d=T.convertConv2DDataFormat(u),h=T.computeConv2DInfo(r.shape,l,o,1,i,c,!1,d),p=new xK(h);return n.runWebGLProgram(p,[r,a],"float32")}var CK={kernelName:Xp,backendName:"webgl",kernelFunc:SK};function NK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=s,d=T.convertConv2DDataFormat(c),h=T.computeConv2DInfo(o,a.shape,i,1,u,l,!1,d),p=new wK(h);return n.runWebGLProgram(p,[r,a],"float32")}var TK={kernelName:Lr,backendName:"webgl",kernelFunc:NK};function $K(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:u}=s,c=T.computeConv3DInfo(r.shape,a.shape,o,u,i),l=new gK(c);return n.runWebGLProgram(l,[r,a],"float32")}var AK={kernelName:mc,backendName:"webgl",kernelFunc:$K};function EK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:u}=s,c=T.computeConv3DInfo(r.shape,u,o,1,i),l=new kK(c);return n.runWebGLProgram(l,[r,a],"float32")}var _K={kernelName:Yp,backendName:"webgl",kernelFunc:EK};function RK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:u}=s,c=T.computeConv3DInfo(u,a.shape,i,1,o),l=new IK(c);return n.runWebGLProgram(l,[r,a],"float32")}var DK={kernelName:Qp,backendName:"webgl",kernelFunc:RK},FK=JS+`
  return cos(x);
`,OK=Ge({opSnippet:FK}),PK={kernelName:zr,backendName:"webgl",kernelFunc:OK},LK=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,zK=Ge({opSnippet:LK}),MK={kernelName:Mr,backendName:"webgl",kernelFunc:zK},BK=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,u]=e,[c]=t,[l,d]=n;this.outputShape=[c,l,d,u];let h=s==="bilinear"?1:0,[p,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,b]=l>1?[`${(o-1)/(l-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[v,y,w]=d>1?[`${(i-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${v});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${y};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${h} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},VK=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:c}=s,l=new BK(r.shape,a.shape,i,u,c);return n.runWebGLProgram(l,[r,a,o],"float32")},WK={kernelName:xo,backendName:"webgl",kernelFunc:VK},y0=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let s=e.length,r=t?"0.0":`getX(${v0(s,"coords")})`,a=e[e.length-1],o="",i="";t?(o=n?`end != ${a-1}`:"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${a}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ot(s)} coords = getOutputCoords();
        int end = ${x0(s,"coords")};
        float val = ${r};
        int pow2 = int(pow(2.0, index));
        if (${o}) {
          int idx = ${i};
          ${x0(s,"coords")} = idx;
          val += getX(${v0(s,"coords")});
        }
        setOutput(val);
      }
    `}};function v0(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function x0(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function UK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,u=r.shape.length,c=T.getAxesPermutation([a],u),l=r;c!=null&&(l=ln({inputs:{x:r},backend:n,attrs:{perm:c}}));let d=T.getInnerMostAxes(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);let h=l.shape[d],p=$n({inputs:{x:l},backend:n});for(let f=0;f<=Math.ceil(Math.log2(h))-1;f++){let m=new y0(l.shape,!1,i),g=[[f]],b=p;p=n.runWebGLProgram(m,[p],p.dtype,g),n.disposeIntermediateTensorInfo(b)}if(o){let f=new y0(l.shape,o,i),m=p;p=n.runWebGLProgram(f,[p],p.dtype),n.disposeIntermediateTensorInfo(m)}if(c!=null){let f=T.getUndoAxesPermutation(c),m=ln({inputs:{x:p},backend:n,attrs:{perm:f}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),m}return p}var GK={kernelName:vo,backendName:"webgl",kernelFunc:UK};function HK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let u=n.readSync(r.dataId),c=n.readSync(a.dataId),l=LS(u,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,l)}else if(r.shape.length===2){let u=n.bufferSync(r),c=n.bufferSync(a),l=rq(u,c,o,i);return n.makeTensorInfo(l.shape,a.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var qK={kernelName:Zp,backendName:"webgl",kernelFunc:HK},jK=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function KK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],u=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],l=o==="NHWC"?r.shape[3]:r.shape[1],d=u*a,h=c*a,p=l/(a*a),f=o==="NHWC"?[i,d,h,p]:[i,p,d,h],m=new jK(f,a,o);return n.runWebGLProgram(m,[r],r.dtype)}var XK={kernelName:wo,backendName:"webgl",kernelFunc:KK},w0=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Pn(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,u="",c="";n&&(s?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:u=`
          float activation(float x) {
            ${n}
          }
        `,c="result = activation(result);");let l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${l}
        ${c}
        setOutput(result);
      }
    `}},k0=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Pn(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,d=l,h=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)h+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;h+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<l;g++)h+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;h+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){let b=g*2;if(h+=`
          xC = xCCorner + ${b*u};
          `,i===1){if(b<l&&(o%2==1?(h+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,u===1&&b>0?h+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:h+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):h+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<l)){let v=o%2==0?x.nearestLargerEven(u):u;u%2==0&&o%2==1||u%2!=0&&o%2!=1?(h+=`
                  xCOffset = xC + imod(pads[1], 2) + ${v};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,u>1&&(h+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                      xTexelC${b} = getX(batch, xR, xCOffset, d1);
                      xTexelC${b}Ready = 1;
                    }
                    `),h+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                  `):v===1?h+=`
                    xC${b+1} = xTexelC${b};
                    `:h+=`
                    xCOffset = xC + ${v};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<l&&(o%2==1?(h+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<l&&(h+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(h+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<l&&(h+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<l&&(h+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<l&&(h+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}h+=`
    }
  `,h+=`
      }
    `;let p="",f="";n&&(s?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:p=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${h}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function YK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:c}=s,l=u;l==null&&(l=[1,1]),x.assert(T.eitherStridesOrDilationsAreOne(o,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);let d=T.computeConv2DInfo(r.shape,a.shape,o,l,i,c,!0),h;X().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?h=new k0(d):h=new w0(d);let p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[r,a],"float32",p)}var QK={kernelName:Br,backendName:"webgl",kernelFunc:YK},ZK=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},JK=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function eX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=s,d=T.computeConv2DInfo(r.shape,l,o,i,u,c,!0),h=new ZK(d);return n.runWebGLProgram(h,[r,a],"float32")}var tX={kernelName:Jp,backendName:"webgl",kernelFunc:eX};function nX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=s,d=T.computeConv2DInfo(l,a.shape,o,i,u,c,!0),h=new JK(d);return n.runWebGLProgram(h,[r,a],"float32")}var sX={kernelName:ef,backendName:"webgl",kernelFunc:nX},rX=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function aX(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=x.sizeFromShape(s.shape),o=he({inputs:{x:s},backend:n,attrs:{shape:[a]}}),i=new rX(a),u=n.runWebGLProgram(i,[o],o.dtype),c=he({inputs:{x:u},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}var oX={kernelName:tf,backendName:"webgl",kernelFunc:aX},iX=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:c}=e,{top:l,left:d}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${l}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function uX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:u}=s,c=T.computeDilation2DInfo(r.shape,a.shape,o,i,"NHWC",u),l,d=new iX(c);l=n.runWebGLProgram(d,[r,a],"float32");let h=he({inputs:{x:l},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(l),h}var lX={kernelName:gc,backendName:"webgl",kernelFunc:uX};function cX(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:u}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,u,a);let{path:c,steps:l}=T.getEinsumComputePath(i,u),d=l.length,h=null,p=o.length,f=[];for(let m=0;m<d;++m){for(let g of l[m]){let{permutationIndices:b,expandDims:v}=T.getEinsumPermutation(p,u[g]),y;T.isIdentityPermutation(b)?y=a[g]:(y=ln({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(y));let w=y.shape.slice();for(let k=0;k<v.length;++k)w.splice(v[k],0,1);x.arraysEqual(y.shape,w)||(y=he({inputs:{x:y},backend:n,attrs:{shape:w}}),f.push(y)),h===null?h=y:(h=Xb({inputs:{a:y,b:h},backend:n}),f.push(h))}m<d-1&&(c[m]>=0&&(h=ah({inputs:{x:h},backend:n,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(h)),p--)}for(let m of f)m!==h&&n.disposeIntermediateTensorInfo(m);return h}var dX={kernelName:bc,backendName:"webgl",kernelFunc:cX},hX="return (x >= 0.0) ? x : (exp(x) - 1.0);",pX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,fX=Ge({opSnippet:hX,packedOpSnippet:pX}),mX={kernelName:Wr,backendName:"webgl",kernelFunc:fX},gX="return (b >= 1.0) ? a : a * (b + 1.0);",bX=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,yX=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wl(bX,s.shape,r.shape):new Oi(gX,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},vX={kernelName:rf,backendName:"webgl",kernelFunc:yX},xX=`
  return vec4(equal(a, b));
`,wX="return float(a == b);",kX=Yt({opSnippet:wX,packedOpSnippet:xX,dtype:"bool",cpuKernelImpl:iq}),IX={kernelName:ko,backendName:"webgl",kernelFunc:kX},SX=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,CX=Ge({opSnippet:SX}),NX={kernelName:yu,backendName:"webgl",kernelFunc:CX},I0="return exp(x);",S0=Ge({opSnippet:I0,packedOpSnippet:I0,cpuKernelImpl:uq,dtype:"float32"}),TX={kernelName:Ur,backendName:"webgl",kernelFunc:S0};function Jb(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),u=r;return r<0&&(x.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+r+1),i.splice(u,0,1),he({inputs:{x:a},backend:s,attrs:{shape:i}})}var $X={kernelName:Io,backendName:"webgl",kernelFunc:Jb},C0="return exp(x) - 1.0;",AX=Ge({opSnippet:C0,packedOpSnippet:C0,cpuKernelImpl:lq}),EX={kernelName:So,backendName:"webgl",kernelFunc:AX},N0=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function T0(e,t,n){let s=n.texData.get(e.dataId),r=x.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=r/a,i=he({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),u=i.shape,c=new N0("real",u,t),l=new N0("imag",u,t),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],h=n.runWebGLProgram(c,d,"float32"),p=n.runWebGLProgram(l,d,"float32"),f=xr({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);let m=he({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function _X(e){let{inputs:t,backend:n}=e,{input:s}=t;return T0(s,!1,n)}var RX={kernelName:af,backendName:"webgl",kernelFunc:_X},DX=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Sl(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||x.inferDtype(r),a==="string"){let o=x.getArrayFromDType(a,x.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new DX(s,r),i=[[r]];return t.runWebGLProgram(o,[],a,i)}}var FX={kernelName:vu,backendName:"webgl",kernelFunc:Sl},OX=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},PX={kernelName:Co,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new OX(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},$0="return floor(x);",LX=Ge({opSnippet:$0,packedOpSnippet:$0,cpuKernelImpl:cq}),zX={kernelName:Gr,backendName:"webgl",kernelFunc:LX},MX=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,BX=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,VX=Yt({opSnippet:MX,packedOpSnippet:BX,dtype:"int32"}),WX={kernelName:Hr,backendName:"webgl",kernelFunc:VX},UX=class{constructor(e){this.variableNames=["A"];let t=on(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},GX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=on(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},HX={kernelName:Nc,backendName:"webgl",kernelFunc:qX},zi;function qX(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[u,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],l=[c,u],d=[c,u,a];(i||o)&&(zi==null&&(zi=document.createElement("canvas").getContext("2d")),zi.canvas.width=u,zi.canvas.height=c,zi.drawImage(r,0,0,u,c),r=zi.canvas);let h=n.makeTensorInfo(l,"int32");n.texData.get(h.dataId).usage=Fn.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),r);let p=X().getBool("WEBGL_PACK")?new GX(d):new UX(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}function jX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=T.convertConv2DDataFormat(l),g=T.computeConv2DInfo(r.shape,a.shape,u,d,c,h,!1,m),b,v=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=g0({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(X().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)b=b0({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{let w=o!=null,k=i!=null,S=p==="leakyrelu",N=p?sh(p,!1):null,A=new m0(g,w,N,k,S),_=[r,a];if(o&&_.push(o),i&&_.push(i),S){let O=n.makeTensorInfo([],"float32",x.createScalarValue(f,"float32"));_.push(O),v.push(O)}b=n.runWebGLProgram(A,_,"float32")}let y=he({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return v.push(b),v.forEach(w=>n.disposeIntermediateTensorInfo(w)),y}var KX={kernelName:ka,backendName:"webgl",kernelFunc:jX};function XX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s,f=[],m=l;m==null&&(m=[1,1]),x.assert(T.eitherStridesOrDilationsAreOne(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);let g=T.computeConv2DInfo(r.shape,a.shape,u,m,c,d,!0),b=X().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,v=h?sh(h,b):null,y=[r,a],w=o!=null,k=i!=null,S=h==="leakyrelu";if(w&&y.push(o),k&&y.push(i),S){let O=n.makeTensorInfo([],"float32",x.createScalarValue(p,"float32"));y.push(O),f.push(O)}let N;b?N=new k0(g,w,v,k,S):N=new w0(g,w,v,k,S);let A=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],_=n.runWebGLProgram(N,y,"float32",A);return f.forEach(O=>n.disposeIntermediateTensorInfo(O)),_}var YX={kernelName:Ia,backendName:"webgl",kernelFunc:XX},QX=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let s=ot(t.length),r=ot(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${s} strides = ${s}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function ZX(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=x.sizeFromShape(s.shape),[u,c,l,d]=T.prepareAndValidate(s,r),h=he({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),p=he({inputs:{x:s},backend:n,attrs:{shape:[x.sizeFromShape(s.shape)/l,l]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let b=n.readSync(r.dataId),v=n.bufferSync(s),y=dq(b,v,s.dtype,c,o,l,d,s.shape,i);return n.makeTensorInfo(u,s.dtype,y.values)}let f=new QX(o,d,[c,l]),m=n.runWebGLProgram(f,[p,h],p.dtype),g=he({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}var JX={kernelName:To,backendName:"webgl",kernelFunc:ZX},e8=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=ot(this.rank),s=t8(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function t8(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${n[r]}`);return s.join()}function A0(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,u=x.parseAxisParam(o,r.shape)[0],c=n.readSync(a.dataId),l=r.shape[u];for(let w=0;w<c.length;++w){let k=c[w];x.assert(k<=l-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${l-1}]`)}let d=T.segment_util.collectGatherOpShapeInfo(r,a,u,i),h=x.sizeFromShape(a.shape),p=[],f=he({inputs:{x:r},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=he({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,h/d.batchSize]}});p.push(f),p.push(m);let g=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let w=n.bufferSync(m),k=n.bufferSync(f),S=hq(k,w,g);return p.forEach(N=>n.disposeIntermediateTensorInfo(N)),n.makeTensorInfo(d.outputShape,S.dtype,S.values)}let b=new e8(f.shape,g),v=n.runWebGLProgram(b,[f,m],f.dtype);p.push(v);let y=he({inputs:{x:v},backend:n,attrs:{shape:d.outputShape}});return p.forEach(w=>n.disposeIntermediateTensorInfo(w)),y}var n8={kernelName:No,backendName:"webgl",kernelFunc:A0},s8="return float(a > b);",r8=`
  return vec4(greaterThan(a, b));
`,a8=Yt({opSnippet:s8,packedOpSnippet:r8,cpuKernelImpl:pq,dtype:"bool"}),o8={kernelName:$o,backendName:"webgl",kernelFunc:a8},i8="return float(a >= b);",u8=`
  return vec4(greaterThanEqual(a, b));
`,l8=Yt({opSnippet:i8,packedOpSnippet:u8,dtype:"bool",cpuKernelImpl:fq}),c8={kernelName:jr,backendName:"webgl",kernelFunc:l8};function d8(e){let{inputs:t,backend:n}=e,{input:s}=t;return T0(s,!0,n)}var h8={kernelName:of,backendName:"webgl",kernelFunc:d8},p8="return float(!isnan(x) && !isinf(x));",f8=Ge({opSnippet:p8,dtype:"bool"}),m8={kernelName:xu,backendName:"webgl",kernelFunc:f8},g8="return float(isinf(x));",b8=Ge({opSnippet:g8,dtype:"bool"}),y8={kernelName:wu,backendName:"webgl",kernelFunc:b8},v8="return float(isnan(x));",x8=Ge({opSnippet:v8,dtype:"bool"}),w8={kernelName:ku,backendName:"webgl",kernelFunc:x8},k8="return float(a < b);",I8=`
  return vec4(lessThan(a, b));
`,S8=Yt({opSnippet:k8,packedOpSnippet:I8,cpuKernelImpl:mq,dtype:"bool"}),C8={kernelName:Eo,backendName:"webgl",kernelFunc:S8},N8="return float(a <= b);",T8=`
  return vec4(lessThanEqual(a, b));
`,$8=Yt({opSnippet:N8,packedOpSnippet:T8,cpuKernelImpl:gq,dtype:"bool"}),A8={kernelName:_o,backendName:"webgl",kernelFunc:$8};function E8(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=bq(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var _8={kernelName:Ky,backendName:"webgl",kernelFunc:E8},R8=`if (x < 0.0) return NAN;
  return log(x);`,D8=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,F8=Ge({opSnippet:R8,packedOpSnippet:D8,cpuKernelImpl:yq}),O8={kernelName:Xr,backendName:"webgl",kernelFunc:F8},P8="return log(1.0 + x);",L8=Ge({opSnippet:P8}),z8={kernelName:Iu,backendName:"webgl",kernelFunc:L8},M8="return float(a >= 1.0 && b >= 1.0);",B8=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,V8=Yt({opSnippet:M8,packedOpSnippet:B8,dtype:"bool"}),W8={kernelName:Ro,backendName:"webgl",kernelFunc:V8},U8="return float(!(x >= 1.0));",G8=Ge({opSnippet:U8}),H8={kernelName:Su,backendName:"webgl",kernelFunc:G8},q8="return float(a >= 1.0 || b >= 1.0);",j8=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,K8=Yt({opSnippet:q8,packedOpSnippet:j8,dtype:"bool"}),X8={kernelName:vc,backendName:"webgl",kernelFunc:K8},Y8=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,u=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${u})`:r===1?i=`1.0/(${u})`:i=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},Q8=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,u=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${u})`:r===1?i=`1.0/(${u})`:i=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},Z8=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:u}=s,c=X().getBool("WEBGL_PACK_NORMALIZATION")?new Q8(r.shape,a,o,i,u):new Y8(r.shape,a,o,i,u);return n.runWebGLProgram(c,[r],r.dtype)},J8={kernelName:xc,backendName:"webgl",kernelFunc:Z8},e7=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},t7=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=s,d=new e7(r.shape,i,u,c,l);return n.runWebGLProgram(d,[r,a,o],r.dtype)},n7={kernelName:uf,backendName:"webgl",kernelFunc:t7};function s7(e,t,n,s){let r=x.sizeFromShape(t),o=x.sizeFromShape(e.shape)/r,i=he({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),u=to(i,e.dtype,"max",s),c=he({inputs:{x:u},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(u),c}function E0(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,u=x.parseAxisParam(a,r.shape),c=u,l=T.getAxesPermutation(c,i),d=l!=null,h=n.shouldExecuteOnCPU([r]),p=r;if(d){if(h){let y=n.texData.get(p.dataId).values,w=new Array(i);for(let N=0;N<w.length;N++)w[N]=r.shape[l[N]];let k=Kb(y,r.shape,r.dtype,l,w);p=n.makeTensorInfo(w,r.dtype);let S=n.texData.get(p.dataId);S.values=k}else p=rh(r,l,n);c=T.getInnerMostAxes(c.length,i)}T.assertAxesAreInnerMostDims("max",c,i);let[f,m]=T.computeOutAndReduceShapes(p.shape,c),g=f;o&&(g=T.expandShapeToKeepDim(f,u));let b;if(h){let y=n.texData.get(p.dataId).values,w=vq(y,x.sizeFromShape(m),g,r.dtype);b=n.makeTensorInfo(g,r.dtype);let k=n.texData.get(b.dataId);k.values=w}else b=s7(p,m,g,n);return d&&n.disposeIntermediateTensorInfo(p),b}var r7={kernelName:Yr,backendName:"webgl",kernelFunc:E0},a7=KS+`
  return max(a, b);
`,o7=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+nh+`
  return result;
`,i7=Yt({opSnippet:a7,packedOpSnippet:o7,cpuKernelImpl:xq}),u7={kernelName:Qr,backendName:"webgl",kernelFunc:i7};function l7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ai(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=s,c=1;x.assert(T.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let l=T.computePool2DInfo(r.shape,a,o,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&x.arraysEqual(l.inShape,l.outShape))return $n({inputs:{x:r},backend:n});let d=new kl(l,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var c7={kernelName:Zr,backendName:"webgl",kernelFunc:l7};function d7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dataFormat:u,dimRoundingMode:c}=s,l=[1,1,1],d=T.computePool3DInfo(r.shape,a,o,l,i,c,u),h=new Yb(d,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}var h7={kernelName:wc,backendName:"webgl",kernelFunc:d7},p7=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=a-1-e.padInfo.left,u=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},f7=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.front,d=u-1-e.padInfo.top,h=c-1-e.padInfo.left,p=i*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${d}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function m7(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=s,d=[1,1,1],h=T.computePool3DInfo(o.shape,i,u,d,c,l),p=new Yb(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new f7(h),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var g7={kernelName:cf,backendName:"webgl",kernelFunc:m7};function b7(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Ai([a,o],"maxPoolGrad");let{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s,h=T.computePool2DInfo(i.shape,u,c,1,l,d),p=!0,f=new kl(h,"max",p),m=n.runWebGLProgram(f,[i],i.dtype),g=new p7(h),b=n.runWebGLProgram(g,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),b}var y7={kernelName:lf,backendName:"webgl",kernelFunc:b7};function v7(e,t,n,s){let r=new kl(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new kl(n,"max",!0,!0,t);let o=s.runWebGLProgram(r,[e],"float32");return[a,o]}var x7={kernelName:df,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,u=n;x.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let c=[1,1];x.assert(T.eitherStridesOrDilationsAreOne(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let l=T.computePool2DInfo(s.shape,r,a,c,o),[d,h]=v7(s,i,l,u);return[d,h]}};function w7(e,t,n,s){let r=x.sizeFromShape(t),o=x.sizeFromShape(e.shape)/r,i=he({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),u=to(i,"float32","mean",s),c=he({inputs:{x:u},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(u),c}var k7={kernelName:Jr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,o=n,i=s.shape.length,u=x.parseAxisParam(a,s.shape),c=u,l=T.getAxesPermutation(c,i),d=l!=null,h=o.shouldExecuteOnCPU([s]),p=[],f=s;if(d){if(h){let w=o.texData.get(f.dataId).values,k=new Array(i);for(let A=0;A<k.length;A++)k[A]=s.shape[l[A]];let S=Kb(w,s.shape,s.dtype,l,k);f=o.makeTensorInfo(k,s.dtype);let N=o.texData.get(f.dataId);N.values=S}else f=rh(s,l,o);p.push(f),c=T.getInnerMostAxes(c.length,i)}T.assertAxesAreInnerMostDims("sum",c,i);let[m,g]=T.computeOutAndReduceShapes(f.shape,c),b=m;r&&(b=T.expandShapeToKeepDim(m,u));let v=w7(f,g,b,o);for(let y of p)o.disposeIntermediateTensorInfo(y);return v}};function I7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,u=x.parseAxisParam(a,r.shape),c=u,l=T.getAxesPermutation(c,i),d=r;l!=null&&(d=ln({inputs:{x:r},backend:n,attrs:{perm:l}}),c=T.getInnerMostAxes(c.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",c,i);let[h,p]=T.computeOutAndReduceShapes(d.shape,c),f=x.sizeFromShape(p),m=he({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=to(m,m.dtype,"min",n),b;if(o){let v=T.expandShapeToKeepDim(h,u);b=he({inputs:{x:g},backend:n,attrs:{shape:v}})}else b=he({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),l!=null&&n.disposeIntermediateTensorInfo(d),b}var S7={kernelName:ea,backendName:"webgl",kernelFunc:I7},C7=KS+`
  return min(a, b);
`,N7=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+nh+`
  return result;
`,T7=Yt({opSnippet:C7,packedOpSnippet:N7,cpuKernelImpl:wq}),$7={kernelName:ta,backendName:"webgl",kernelFunc:T7},A7=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,l)=>c[0]+e[l]+c[1]);let s=e.length,r=ot(s),a=t.map(c=>c[0]).join(","),o=t.map((c,l)=>c[0]+e[l]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),u=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},E7=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((p,f)=>p[0]+e[f]+p[1]);let s=e.length,r=ot(s),a=t.map(p=>p[0]).join(","),o=t.map((p,f)=>p[0]+e[f]).join(","),i=un("rc",s),u=un("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,l=s===1?"source":`vec2(${u.slice(-2).join()})`,d=n==="reflect"?0:1,h="";if(s===1){let p=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;h=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${u.join()}), ${l});
        ${i[s-1]} += 1;
        if(${c}) {
          ${p}
          result[1] = getChannel(getX(${u.join()}), ${l});
        }
      `}else{let p=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;h=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${u.join()}), ${l});
        ${i[s-1]} += 1;
        if(${c}) {
          ${p}
          result[1] = getChannel(getX(${u.join()}), ${l});
        }
        rc = outputLoc;
        ${i[s-2]} += 1;
        if(${i[s-2]} < ${this.outputShape[s-2]}) {
          ${p}
          result[2] = getChannel(getX(${u.join()}), ${l});
          ${i[s-1]} += 1;
          if(${c}) {
            ${p}
            result[3] = getChannel(getX(${u.join()}), ${l});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},_7=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,o=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new E7(s.shape,r,a):new A7(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)},R7={kernelName:na,backendName:"webgl",kernelFunc:_7},D7=`if (b == 0.0) return NAN;
  return mod(a, b);`,F7=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+nh+`
  return result;
`,O7=Yt({opSnippet:D7,packedOpSnippet:F7}),P7={kernelName:Cu,backendName:"webgl",kernelFunc:O7},L7=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},z7=`
if (a == b) {
  return 1.0;
};
return a / b;`,M7=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,_0=Yt({opSnippet:z7,packedOpSnippet:M7,checkOutOfBounds:!0}),B7={kernelName:Vr,backendName:"webgl",kernelFunc:_0},R0="return a - b;",D0=Yt({opSnippet:R0,packedOpSnippet:R0,supportsComplex:!0,cpuKernelImpl:Lq}),V7={kernelName:ba,backendName:"webgl",kernelFunc:D0};function F0(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=x.parseAxisParam([a],r.shape),i=E0({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=T.expandShapeToKeepDim(i.shape,o),c=he({inputs:{x:i},backend:n,attrs:{shape:u}}),l=D0({inputs:{a:r,b:c},backend:n}),d=S0({inputs:{x:l},backend:n}),h=ah({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),p=he({inputs:{x:h},backend:n,attrs:{shape:u}}),f=_0({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}var W7={kernelName:ma,backendName:"webgl",kernelFunc:F0};function U7(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s,u=i?r:F0({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new L7(c,l,a),h=[[o]],p=n.runWebGLProgram(d,[u],"int32",h);return i||n.disposeIntermediateTensorInfo(u),p}var G7={kernelName:hf,backendName:"webgl",kernelFunc:U7},O0="return -x;";function H7(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[o,i]=Iq(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r;return X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Fi(s.shape,O0):r=new vr(s.shape,O0),n.runWebGLProgram(r,[s],s.dtype)}var q7={kernelName:Do,backendName:"webgl",kernelFunc:H7},j7=ss.nonMaxSuppressionV3Impl;function K7(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=s,c=n.readSync(r.dataId),l=n.readSync(a.dataId),{selectedIndices:d}=j7(c,l,o,i,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var X7={kernelName:Oo,backendName:"webgl",kernelFunc:K7},Y7=ss.nonMaxSuppressionV4Impl;function Q7(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=s,l=n.readSync(r.dataId),d=n.readSync(a.dataId),{selectedIndices:h,validOutputs:p}=Y7(l,d,o,i,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}var Z7={kernelName:Nu,backendName:"webgl",kernelFunc:Q7},J7=ss.nonMaxSuppressionV5Impl;function eY(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=s,l=n.readSync(r.dataId),d=n.readSync(a.dataId),h=o,p=i,f=u,m=c,{selectedIndices:g,selectedScores:b}=J7(l,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var tY={kernelName:Po,backendName:"webgl",kernelFunc:eY},nY=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},sY=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,u=x.sizeFromShape(r.shape),c=new nY(u,a,o,i),l=he({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[l],r.dtype);n.disposeIntermediateTensorInfo(l);let h=[...r.shape,a],p=he({inputs:{x:d},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(d),p},rY={kernelName:zo,backendName:"webgl",kernelFunc:sY};function ch(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Il({inputs:{input:s},backend:n}),a=ch({inputs:{x:r},backend:n}),o=lh({inputs:{input:s},backend:n}),i=ch({inputs:{x:o},backend:n}),u=xr({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}else return Sl({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var aY={kernelName:ti,backendName:"webgl",kernelFunc:ch};function P0(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Il({inputs:{input:s},backend:n}),a=P0({inputs:{x:r},backend:n}),o=lh({inputs:{input:s},backend:n}),i=ch({inputs:{x:o},backend:n}),u=xr({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}else return Sl({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var oY={kernelName:Lo,backendName:"webgl",kernelFunc:P0};function iY(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Jb({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(l=>{x.assertShapesMatch(a,l.shape,"All tensors passed to stack must have matching shapes"),x.assert(o===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(l=>{let d=Jb({inputs:{input:l},backend:n,attrs:{dim:r}});return i.push(d),d}),c=f0({inputs:u,backend:n,attrs:{axis:r}});return i.forEach(l=>n.disposeIntermediateTensorInfo(l)),c}var uY={kernelName:Mo,backendName:"webgl",kernelFunc:iY},lY=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);let s=e.length,r=ot(s),a=t.map(u=>u[0]).join(","),o=t.map((u,c)=>u[0]+e[c]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},cY=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=ot(s),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=un("rc",s),u=un("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,l=s===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${i[s-1]} += 1;
       if(${c}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${i[s-2]} += 1;
       if(${i[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${i[s-1]} += 1;
         if(${c}) {`],h=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",p="";for(let f=0,m=s===1?2:4;f<m;f++)p+=`
        ${d[f]}
        if (${h}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${u.join()}), ${l});
        }
      `;p+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},L0=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(x.sizeFromShape(r.shape)===0){let c=a.map((l,d)=>l[0]+r.shape[d]+l[1]);return Sl({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new cY(r.shape,a,o):new lY(r.shape,a,o),u=[[o]];return n.runWebGLProgram(i,[r],r.dtype,u)},dY={kernelName:ra,backendName:"webgl",kernelFunc:L0},hY=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,pY=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+nh+`
  return result;
`,fY=Yt({opSnippet:hY,packedOpSnippet:pY}),mY={kernelName:aa,backendName:"webgl",kernelFunc:fY};function gY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,u=[],c=x.parseAxisParam(a,r.shape),l=c,d=T.getAxesPermutation(l,i),h=r;d!=null&&(h=ln({inputs:{x:r},backend:n,attrs:{perm:d}}),l=T.getInnerMostAxes(l.length,i),u.push(h)),T.assertAxesAreInnerMostDims("prod",l,i);let p;if(n.shouldExecuteOnCPU([h])){let f=n.texData.get(h.dataId).values,{outVals:m,outShape:g,outDtype:b}=Cq(h.shape,h.dtype,f,l);p=n.makeTensorInfo(g,b,m)}else{let[f,m]=T.computeOutAndReduceShapes(h.shape,l),g=x.sizeFromShape(m),b=he({inputs:{x:h},backend:n,attrs:{shape:[-1,g]}}),v=Oc(r.dtype),y=to(b,v,"prod",n);p=he({inputs:{x:y},backend:n,attrs:{shape:f}}),u.push(b),u.push(y)}if(o){u.push(p);let f=T.expandShapeToKeepDim(p.shape,c);p=he({inputs:{x:p},backend:n,attrs:{shape:f}})}return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}var bY={kernelName:Bo,backendName:"webgl",kernelFunc:gY},z0=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=Nq(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},yY={kernelName:Tu,backendName:"webgl",kernelFunc:z0},vY="return 1.0 / x;",xY=Ge({opSnippet:vY}),wY={kernelName:$u,backendName:"webgl",kernelFunc:xY},kY=ls+`
  return (x < 0.0) ? 0.0 : x;
`,IY=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,SY=Ge({opSnippet:kY,packedOpSnippet:IY}),CY={kernelName:ia,backendName:"webgl",kernelFunc:SY},NY=ls+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,TY=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$Y=Ge({opSnippet:NY,packedOpSnippet:TY}),AY={kernelName:la,backendName:"webgl",kernelFunc:$Y},EY=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,u]=e;this.outputShape=[a,t,n,u];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],l=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/l[0]},
          ${c[1]/l[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},_Y=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,u]=e;this.outputShape=[a,t,n,u];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],l=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/l[0]},
          ${c[1]/l[1]},
          ${c[1]/l[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function RY(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[u,c]=i,l=X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new _Y(r.shape,u,c,a,o):new EY(r.shape,u,c,a,o);return n.runWebGLProgram(l,[r],"float32")}var DY={kernelName:ua,backendName:"webgl",kernelFunc:RY},FY=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],u=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],d=1/c,h=1/l,p=Math.ceil(d)*2+2,f=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${l});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${h});

        const int winHeight = int(${p});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function OY(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new FY(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var PY={kernelName:ff,backendName:"webgl",kernelFunc:OY},LY=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,u]=e;this.outputShape=[a,t,n,u];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],l=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",h;r?h="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/l[0]},
          ${c[1]/l[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},zY=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,u]=e;this.outputShape=[a,t,n,u];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],l=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",h;r?h="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/l[0]},
          ${c[1]/l[1]},
          ${c[1]/l[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function MY(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[u,c]=i,l=X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zY(r.shape,u,c,a,o):new LY(r.shape,u,c,a,o);return n.runWebGLProgram(l,[r],r.dtype)}var BY={kernelName:Au,backendName:"webgl",kernelFunc:MY},VY=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],u=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],d=1/c,h=1/l,p=Math.ceil(d)*2+2,f=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${l});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${h});

        const int winHeight = int(${p});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function WY(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new VY(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var UY={kernelName:pf,backendName:"webgl",kernelFunc:WY},GY=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,i)=>s(i)).join(","),a=ot(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},HY=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=un("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,o=ot(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(s.slice())};
          if(${r}){
            result.g = ${u(s.slice())};
          }
          if(${a}) {
            result.b = ${c(s.slice())};
            if(${r}) {
              result.a = ${l(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(p){return d(p)}function u(p){return p[n-1]="("+p[n-1]+" + 1)",d(p)}function c(p){return p[n-2]="("+p[n-2]+" + 1)",d(p)}function l(p){return p[n-1]="("+p[n-1]+" + 1)",p[n-2]="("+p[n-2]+" + 1)",d(p)}function d(p){let f=e.map((b,v)=>h(v,p)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function h(p,f){return t.indexOf(p)!==-1&&e[p]!==1?`${e[p]} - ${f[p]} - 1`:`${f[p]}`}}};function qY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=r.shape.length,i=x.parseAxisParam(a,r.shape);if(o===0)return $n({inputs:{x:r},backend:n});let u=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HY(r.shape,i):new GY(r.shape,i);return n.runWebGLProgram(u,[r],r.dtype)}var jY={kernelName:Wo,backendName:"webgl",kernelFunc:qY},KY=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},XY={kernelName:ni,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,u=new KY(s.shape,a),[c,l]=T.getImageCenter(o,s.shape[1],s.shape[2]),d=[[c,l,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(u,[s],s.dtype,d)}},YY=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,QY=Ge({opSnippet:YY}),ZY={kernelName:Uo,backendName:"webgl",kernelFunc:QY},JY="return inversesqrt(x);",e9=Ge({opSnippet:JY,cpuKernelImpl:Tq}),t9={kernelName:ca,backendName:"webgl",kernelFunc:e9},M0=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=ot(r.length),u=ot(a.length),c="";n===1?c="i":n===2&&(c="i, j");let l=`getIndices(${c})`,d="";s===1?d="i":s===2&&(d="i, coords[1]");let h=`getUpdates(${d})`,p=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${l});
              flattenedIndex += index * ${p};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${h};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function n9(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=T.calculateShapes(a,r,o),h=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let p=he({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),f=he({inputs:{x:a},backend:n,attrs:{shape:[u,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new M0(u,i,p.shape.length,f.shape.length,l,h),b=n.runWebGLProgram(g,[f,p,m],f.dtype),v=he({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),v}var s9={kernelName:Go,backendName:"webgl",kernelFunc:n9},r9=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],u=[];for(let c=0;c<t.length;c++)u.push(`${o[c]}`),c<e&&i.push(`${o[c]}`);s=i.join(),r=u.join()}let a=ot(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function a9(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new r9(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,a],mn(r.dtype,a.dtype))}var o9={kernelName:Ho,backendName:"webgl",kernelFunc:a9},i9=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,u9=Ge({opSnippet:i9}),l9={kernelName:Eu,backendName:"webgl",kernelFunc:u9},B0="return 1.0 / (1.0 + exp(-1.0 * x));",c9=Ge({opSnippet:B0,packedOpSnippet:B0,cpuKernelImpl:$q}),d9={kernelName:ha,backendName:"webgl",kernelFunc:c9},h9=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,p9=Ge({opSnippet:h9}),f9={kernelName:_u,backendName:"webgl",kernelFunc:p9},m9=JS+`
  return sin(x);
`,g9=Ge({opSnippet:m9}),b9={kernelName:da,backendName:"webgl",kernelFunc:g9},y9=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,v9=Ge({opSnippet:y9}),x9={kernelName:jo,backendName:"webgl",kernelFunc:v9},w9=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,k9=Ge({opSnippet:w9}),I9={kernelName:Ru,backendName:"webgl",kernelFunc:k9},S9=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;x.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((b,v)=>b*v),u=[[0,0]];u.push(...o);for(let b=1+a.length;b<r.shape.length;++b)u.push([0,0]);let c=[],l=L0({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),d=T.getReshaped(l.shape,a,i,!1),h=T.getPermuted(d.length,a.length,!1),p=T.getReshapedPermuted(l.shape,a,i,!1),f=he({inputs:{x:l},backend:n,attrs:{shape:d}}),m=ln({inputs:{x:f},backend:n,attrs:{perm:h}}),g=he({inputs:{x:m},backend:n,attrs:{shape:p}});return c.push(l),c.push(f),c.push(m),c.forEach(b=>n.disposeIntermediateTensorInfo(b)),g},C9={kernelName:Ko,backendName:"webgl",kernelFunc:S9};function N9(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(s.dataId),u=n.readSync(r.dataId),c=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[d,h,p,f,m]=Eq(i,s.shape,s.dtype,u,r.dtype,c,l);return[n.makeTensorInfo(h,s.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var T9={kernelName:mf,backendName:"webgl",kernelFunc:N9};function $9(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(r.dataId)),i=n.readSync(s.dataId),u=Array.from(n.readSync(a.dataId)),[c,l,d]=_q(i,s.shape,s.dtype,o,u);return[n.makeTensorInfo(l,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var A9={kernelName:gf,backendName:"webgl",kernelFunc:$9};function E9(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),u=n.readSync(a.dataId),[c,l]=MS(o,s.shape,s.dtype,i,u,!0);return n.makeTensorInfo(l,s.dtype,c)}var _9={kernelName:bf,backendName:"webgl",kernelFunc:E9};function R9(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),u=n.readSync(a.dataId),[c,l]=MS(o,s.shape,s.dtype,i,u);return n.makeTensorInfo(l,s.dtype,c)}var D9={kernelName:yf,backendName:"webgl",kernelFunc:R9};function F9(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:u,numUpdates:c,strides:l,outputSize:d}=T.calculateShapes(a,r,i),h=!1,p=new M0(c,u,r.shape.length,a.shape.length,l,[d,1],h),f=n.runWebGLProgram(p,[a,r,o],a.dtype),m=he({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}var O9={kernelName:Ic,backendName:"webgl",kernelFunc:F9};function P9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=x.parseAxisParam(o,r.shape)[0],u=T.prepareSplitSize(r,a,i),c=r.shape.length,l=new Array(c).fill(0),d=r.shape.slice();return u.map(h=>{let p=[...d];p[i]=h;let f=Pi({inputs:{x:r},backend:n,attrs:{begin:l,size:p}});return l[i]+=h,f})}var L9={kernelName:Xo,backendName:"webgl",kernelFunc:P9},V0="return sqrt(x);",z9=Ge({opSnippet:V0,packedOpSnippet:V0,cpuKernelImpl:Rq}),M9={kernelName:pa,backendName:"webgl",kernelFunc:z9},B9="return x * x;",V9=Ge({opSnippet:B9}),W9={kernelName:Du,backendName:"webgl",kernelFunc:V9},W0="return (a - b) * (a - b);",U9=Yt({opSnippet:W0,packedOpSnippet:W0}),G9={kernelName:ga,backendName:"webgl",kernelFunc:U9};function H9({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=ls+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new vr(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var q9={kernelName:xa,backendName:"webgl",kernelFunc:H9},j9=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=ot(n.length),a=ot(n.length),o="";if(s===1)o="coords * strides + begin";else{let i=0;o=n.map((u,c)=>(i++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${i-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function K9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:v,end:y,strides:w}=It.sliceInfo(r.shape,a,o,i,u,c,l,d,h),k;if(m)k=he({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){x.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let N=It.computeOutShape(v,y,w),A=Pi({inputs:{x:r},backend:n,attrs:{begin:v,size:N}});k=he({inputs:{x:A},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(A)}else if(n.shouldExecuteOnCPU([r])){let A=n.readSync(r.dataId),_=_e(r.shape,r.dtype,A),O=Dq(p,_,w,v);k=n.makeTensorInfo(f,r.dtype,O.values)}else{let A=new j9(v,w,p);k=n.runWebGLProgram(A,[r],r.dtype)}let S=he({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(k),S}var X9={kernelName:Yo,backendName:"webgl",kernelFunc:K9};function Y9(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=s,{data:l,dataSplits:d}=t,h=n.readSync(l.dataId),p=n.readSync(d.dataId),[f,m]=Fq(h,p,r,a,o,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var Q9={kernelName:Sc,backendName:"webgl",kernelFunc:Y9};function Z9(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[c,l,d]=Oq(i,u,r),h=l.length;return[n.makeTensorInfo([h,2],"int32",c),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var J9={kernelName:vf,backendName:"webgl",kernelFunc:Z9};function eQ(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=Pq(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var tQ={kernelName:xf,backendName:"webgl",kernelFunc:eQ},nQ="return tan(x);",sQ=Ge({opSnippet:nQ}),rQ={kernelName:Qo,backendName:"webgl",kernelFunc:sQ},aQ=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,oQ=Ge({opSnippet:aQ}),iQ={kernelName:ya,backendName:"webgl",kernelFunc:oQ},uQ=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=ot(this.rank),r=lQ(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function lQ(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function U0(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let u=n.readSync(r.dataId),c=r.dtype==="string"?u.map(h=>x.decodeString(h)):u,l=_e(r.shape,r.dtype,c),d=zq(l,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new uQ(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}var cQ={kernelName:Js,backendName:"webgl",kernelFunc:U0},dQ=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},hQ=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function no(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function G0(e){let t=1;for(;t<e;)t*=2;return t}function pQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=X().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=X().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,l=c[c.length-1];if(n.shouldExecuteOnCPU([r])||l<i||a>u){let O=n.readSync(r.dataId),[R,D]=Mq(O,c,r.dtype,a,o);return[n.makeTensorInfo(R.shape,R.dtype,R.values),n.makeTensorInfo(D.shape,D.dtype,D.values)]}if(a===0)return c[c.length-1]=0,[n.makeTensorInfo(c,r.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(l===1)return[r,Sl({attrs:{shape:c,dtype:"int32",value:0},backend:n})];let d=n.texData.get(r.dataId),h=d!==null&&d.isPacked,p=h?n.unpackTensor(r):r,m=x.sizeFromShape(c)/l,g=he({inputs:{x:p},attrs:{shape:[m,l]},backend:n});h&&no(n,p);let b=G0(a),v=G0(l),y=null,w=()=>y===null?[g,g]:[g,y],k=(O,R,D)=>{let C=w(),P=new dQ(D),G=[[l],[y===null?1:0],[Number.NEGATIVE_INFINITY],[O],[R]],U=y;y=n.runWebGLProgram(P,C,"int32",G),no(n,U)};for(let O=1;O<b;O*=2){let R=O*2;for(let D=O;D>=1;D/=2)k(R,D,[m,v])}for(let O=v;O>b;O/=2){let R=w(),D=new hQ([m,O/2]),P=[[l],[y===null?1:0],[b]],V=y;y=n.runWebGLProgram(D,R,"int32",P),no(n,V);let G=b/2,U=G*2;for(let q=G;q>=1;q/=2)k(U,q,y.shape)}let S=y;y=Pi({inputs:{x:y},backend:n,attrs:{begin:0,size:[m,a]}}),no(n,S);let N=A0({inputs:{x:g,indices:y},backend:n,attrs:{axis:1,batchDims:1}});no(n,g);let A=c.slice(0,-1);A.push(a),S=y,y=he({inputs:{x:y},attrs:{shape:A},backend:n}),no(n,S);let _=N;return N=he({inputs:{x:N},attrs:{shape:A},backend:n}),no(n,_),[N,y]}var fQ={kernelName:Zo,backendName:"webgl",kernelFunc:pQ},mQ=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(s){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function gQ(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=s,[l,d,h,p]=r.shape,[f,m]=c??[d,h],g=[l,f,m,p],b=new mQ(d,h,o,i,u,g);return n.runWebGLProgram(b,[r,a],"float32")}var bQ={kernelName:Jo,backendName:"webgl",kernelFunc:gQ};function yQ(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Ai(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=s.readSync(a.dataId),{outputValues:i,outputShape:u,indices:c}=Bq(o,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var vQ={kernelName:wf,backendName:"webgl",kernelFunc:yQ};function xQ(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,u=r.shape[a],c=new Array(i-1),l=0;for(let m=0;m<i;m++)m!==a&&(c[l++]=o.shape[m]);let d=[],h=new Array(i).fill(0),p=o.shape.slice();p[a]=1;let f=new Array(u);for(let m=0;m<f.length;m++){h[a]=m;let g=Pi({inputs:{x:o},backend:n,attrs:{begin:h,size:p}}),b=he({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=b,d.push(g)}return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var wQ={kernelName:ei,backendName:"webgl",kernelFunc:xQ},kQ=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,o=a*Math.ceil(r/n);this.outputShape=[s,o];let i="0.0",u="sumValue",c=Math.floor(n/4)*4,l=n%4,d=`
        sumValue += dot(values, segFilter);
    `,h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${l===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function IQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s,i=r.shape.length,u=[],c=0,l=T.getAxesPermutation([c],i),d=r;l!=null&&(d=ln({inputs:{x:r},backend:n,attrs:{perm:l}}),u.push(d),c=T.getInnerMostAxes(1,i)[0]);let h=T.segment_util.computeOutShape(d.shape,c,o),p=x.sizeFromShape([d.shape[c]]),f=he({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});u.push(f);let m=Oc(r.dtype),g=(w,k,S,N,A)=>{let _=w.shape[0],O=w.shape[1],R=T.segment_util.segOpComputeOptimalWindowSize(O,A),D={windowSize:R,inSize:O,batchSize:_,numSegments:A},C=new kQ(D,k),P=n.compileAndRun(C,[w,S],N);if(u.push(P),P.shape[1]===A)return P;let V=z0({backend:n,attrs:{start:0,stop:A,step:1,dtype:"float32"}}),G=U0({inputs:{x:V},backend:n,attrs:{reps:[O/R]}});return u.push(V),u.push(G),g(P,k,G,N,A)},b=g(f,"unsortedSegmentSum",a,m,o),v=he({inputs:{x:b},backend:n,attrs:{shape:h}}),y=v;if(l!=null){u.push(v);let w=T.getUndoAxesPermutation(l);y=ln({inputs:{x:y},backend:n,attrs:{perm:w}})}return u.forEach(w=>n.disposeIntermediateTensorInfo(w)),y}var SQ={kernelName:Cc,backendName:"webgl",kernelFunc:IQ},CQ=[J8,n7,Lj,Mj,Wj,Hj,jj,Yj,Zj,e5,r5,o5,l5,h5,v5,m5,k5,N5,S5,E5,R5,F5,z5,H5,j5,X5,tK,sK,iK,cK,yj,mK,CK,TK,vK,_K,DK,AK,PK,MK,WK,GK,qK,XK,tX,sX,QK,oX,lX,dX,mX,vX,IX,NX,TX,$X,EX,RX,FX,PX,zX,WX,HX,KX,YX,JX,n8,o8,c8,bj,h8,pK,m8,y8,w8,xj,C8,A8,_8,z8,O8,W8,H8,X8,r7,h7,c7,g7,y7,x7,u7,k7,S7,$7,R7,P7,G7,Cj,q7,X7,Z7,tY,Q5,rY,oY,uY,dY,mY,kj,bY,yY,Z5,B7,wY,AY,CY,Tj,DY,PY,BY,UY,jY,XY,ZY,t9,s9,o9,l9,d9,f9,b9,x9,U5,W7,I9,C9,T9,A9,_9,D9,O9,L9,M9,W9,G9,q9,X9,Q9,J9,tQ,V7,Fj,rQ,iQ,cQ,fQ,bQ,Oj,vQ,wQ,SQ,aY];for(let e of CQ)Ac(e);var $s=X();$s.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);$s.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);$s.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);$s.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);$s.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);$s.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);$s.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);$s.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);$s.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);$s.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function NQ(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function Et(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function dh(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function Ee(){return`
  let index = getGlobalIndex(globalId, localId);
`}function Ce(){return`
  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]
  fn main([[builtin(local_invocation_id)]] localId : vec3<u32>, [[builtin(global_invocation_id)]] globalId : vec3<u32>)
`}function TQ(e,t,n,s=!1){let r=`
    let workGroupSizeX = ${n.workGroupSize[0]}u;
    let workGroupSizeY = ${n.workGroupSize[1]}u;
    let workGroupSizeZ = ${n.workGroupSize[2]}u;`;if(s===!0){let p=j0(t.shape),f=`
      [[block]] struct Matrix0 {
        numbers: array<${dh(t.dtype,n.isVec4)}>;
      };
      [[block]] struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      [[group(0), binding(0)]] var<storage, write> result : Matrix0;
      [[group(0), binding(2)]] var<uniform> uniforms: Uniform;
    `;return[H0,f,r,q0,p,n.getUserCode()].join(`
`)}let a=[],o="[[block]] struct Uniforms { NAN : f32; ";n.variableNames.forEach((p,f)=>{o+=`${p.charAt(0).toLowerCase()+p.slice(1)}Shape : ${Et(e[f].shape.length)}; `}),o+=`outShape : ${Et(t.shape.length)} ; `;let i=t.shape.length-1;o+=`
       outShapeStrides: ${Et(i)}; `,n.size!=null&&(o+="size : i32; "),o+="dispatchSize : vec3<u32>; ",n.uniforms&&(o+=n.uniforms),o+="};",a.push(o),n.atomic?a.push(`
    [[block]] struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    [[group(0), binding(0)]] var<storage, read_write> result : Matrix0;
  `):a.push(`
    [[block]] struct Matrix0 {
        numbers: array<${dh(t.dtype,n.isVec4)}>;
    };

    [[group(0), binding(0)]] var<storage, write> result : Matrix0;
  `),n.variableNames.forEach((p,f)=>{a.push(`
    [[block]] struct Matrix${1+f} {
      numbers: array<${dh(e[f].dtype,n.isVec4)}>;
    };
    [[group(0), binding(${1+f})]] var<storage, read> ${p} : Matrix${1+f};
    `)}),o!==""&&a.push(`
    [[group(0), binding(${1+n.variableNames.length})]] var<uniform> uniforms : Uniforms;
    `),a.push(r);let[u,c]=DQ(t.shape,n.dispatchLayout),l=j0(t.shape),d=[H0,a.join(`
`),q0,l,u,$Q(t.shape.length)];if(n.atomic||d.push(AQ(t.shape,t.dtype,n.isVec4)),c===t.shape.length){let p=e.map(f=>EQ(f,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);d.push(p)}return d.push(n.getUserCode()),d.join(`
`)}var H0=`
  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }

  fn isNanCustomVec4F32(val : vec4<f32>) -> vec4<f32> {
    var res = vec4<f32> (0.0);
    for (var i = 0u; i < 4u; i = i + 1u) {
      if (isNanCustom(val[i])) {
        res[i] = 1.0;
      } else {
        res[i] = 0.0;
      }
    }
    return res;
  }

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) &&
        all(coord < shape);
  }
  `,q0=`
  fn getFlatIndex1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }

  fn getFlatIndex2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return i32(dot(vec2<f32>(coords), vec2<f32>(f32(shape.y), 1.0)));
  }

  fn getFlatIndex3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return i32(dot(vec3<f32>(coords), vec3<f32>(f32(shape.y) * f32(shape.z), f32(shape.z), 1.0)));
  }

  fn getFlatIndex4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return i32(dot(vec4<f32>(coords), vec4<f32>(
        f32(shape.y) * f32(shape.z) * f32(shape.w), f32(shape.z) * f32(shape.w), f32(shape.w), 1.0)));
  }

  // Only used when the y/z dimension of workgroup size is 1.
  fn getGlobalIndex(globalId : vec3<u32>, localId : vec3<u32>) -> i32 {
    if (uniforms.dispatchSize.y == 1u && uniforms.dispatchSize.z == 1u) {
      return i32(globalId.x);
    }
    let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
      localId.y * workGroupSizeX + localId.x;
    let workGroupID = (globalId - localId)/vec3<u32>(
      workGroupSizeX, workGroupSizeY, workGroupSizeZ);
    return i32((workGroupID.z * uniforms.dispatchSize.x * uniforms.dispatchSize.y +
      workGroupID.y * uniforms.dispatchSize.x + workGroupID.x) *
      (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
      localInvocationIndex);
  }
`;function $Q(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputFlatIndex(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputFlatIndex(coords : vec2<i32>) -> i32 {
          return i32(dot(vec2<f32>(coords), vec2<f32>(f32(uniforms.outShapeStrides), 1.0)));
        }
        `;break;case 3:t+=`
        fn getOutputFlatIndex(coords : vec3<i32>) -> i32 {
          return i32(dot(vec3<f32>(coords), vec3<f32>(f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), 1.0)));
        }
        `;break;case 4:t+=`
        fn getOutputFlatIndex(coords : vec4<i32>) -> i32 {
          return i32(dot(vec4<f32>(coords), vec4<f32>(
            f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), f32(uniforms.outShapeStrides.z), 1.0)));
        }
        `;break;default:x.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function AQ(e,t,n){let s=e.length,r=dh(t,n),a;if(n?a=`fn setOutputFlat(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${r}(value);
    }`:a=`fn setOutputFlat(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${r}(value);
    }`,s>=2){let o=["d0","d1","d2","d3"].slice(0,s),i=Et(s);n?a+=`
      fn setOutput(${o.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlat(flatIndex / 4, value);
      }
      fn setOutputI32(${o.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlatI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutput(${o.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlat(flatIndex, value);
      }
      fn setOutputI32(${o.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlatI32(flatIndex, value);
      }
    `}return a}function EQ(e,t,n,s){let r=_Q(e,n);return e.shape.length<=t.length&&(r+=RQ(e,t,n,s)),r}function _Q(e,t){let n=e.name,s=e.shape.length,r=Et(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=["d0","d1","d2","d3"].slice(0,s),i=o.map(l=>`${l} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}.numbers[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}.numbers[0]);
      }
    `;let u=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,c=`${s}D`;return s===0&&(c="1D"),t?`
      fn ${a}(${i}) -> vec4<f32> {
        return vec4<f32>(${n}.numbers[getFlatIndex${c}(${r}(${o.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${a}(${i}) -> f32 {
      return f32(${n}.numbers[getFlatIndex${c}(${r}(${o.join(",")}),
        ${u})]);
    }
   `}function RQ(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),o="get"+a+"AtOutCoords",i=e.shape.length,u=t.length,c=Et(u);if(x.arraysEqual(e.shape,t)&&s)return n?`
        fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[globalIndex]);
        }

        fn ${o}ByCoords(coords : ${c}) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[${u>1?"getOutputFlatIndex(coords)":"coords"} / 4]);
        }
        `:`
      fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32 {
        return f32(${r}.numbers[globalIndex]);
      }

      fn ${o}ByCoords(coords : ${c}) -> f32 {
        return f32(${r}.numbers[${u>1?"getOutputFlatIndex(coords)":"coords"}]);
      }
      `;let l=T.getBroadcastDims(e.shape,t),d=u-i,h="";if(i===0)return n?`
      fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
        return get${a}();
      }

      fn ${o}ByCoords(coords : ${c}) -> vec4<f32> {
        return get${a}();
      }
    `:`
      fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32{
        return get${a}();
      }

      fn ${o}ByCoords(coords : ${c}) -> f32{
        return get${a}();
      }
    `;u<2&&l.length>=1?h="coords = 0;":h=l.map(g=>`coords[${g+d}] = 0;`).join(`
`);let p="";if(u<2&&i>0)p="coords";else if(u>1){let g=Et(i),b=e.shape.map((v,y)=>`coords[${y+d}]`).join(", ");p=`${g}(${b})`}else p="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${i}D`;return n?`
      fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
        var coords = getOutputCoords(globalId, globalIndex);
        ${h}
        return ${r}.numbers[getFlatIndex${m}(${p}, ${f}) / 4];
      }

      fn ${o}ByCoords(coordsIn : ${c}) -> vec4<f32> {
        var coords = coordsIn;
        ${h}
        return ${r}.numbers[getFlatIndex${m}(${p}, ${f}) / 4];
      }
    `:`
    fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32 {
      var coords = getOutputCoords(globalId, globalIndex);
      ${h}
      return f32(${r}.numbers[getFlatIndex${m}(${p}, ${f})]);
    }

    fn ${o}ByCoords(coordsIn : ${c}) -> f32 {
      var coords = coordsIn;
      ${h}
      return f32(${r}.numbers[getFlatIndex${m}(${p}, ${f})]);
    }
  `}function DQ(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return[`fn getOutputCoords(globalId : vec3<u32>, globalIndex : i32) -> ${Et(a)}{
      return getCoordsFromFlatIndex(i32(globalIndex));
    }
    `,a];let o="",i=[n,s,r],u=0;for(let h=0;h<i.length;h++){let p=i[h];if(p.length!==0)if(u+=p.length,p.length===1)o+=`let d${p[0]} = i32(globalId[${h}]);`;else{let f=NQ(p,"uniforms.outShape");o+=`var index${h} = i32(globalId[${h}]);`;for(let m=0;m<f.length;m++)o+=`let d${p[m]} = index${h} / ${f[m]};`,m===f.length-1?o+=`let d${p[m+1]} = index${h} - d${p[m]} * ${f[m]};`:o+=`index${h} = index${h} - d${p[m]} * ${f[m]};`}}let c=[];for(let h=0;h<u;h++)c.push(`d${h}`);let l=Et(u),d=`fn getOutputCoords(globalId : vec3<u32>, globalIndex : i32) -> ${l} {
    ${o}
  `;return c.length===0?d+=`return ${l}(0); }`:d+=`return ${l}(${c.join(",")}); }`,[d,u]}function j0(e){let t=e.length;if(t<=1)return"fn getCoordsFromFlatIndex(index : i32) -> i32 { return index; }";let n=x.computeStrides(e),s=Et(t),r=[];for(let o=0;o<t;o++)r.push(`d${o}`);if(n.length===1)return`    fn getCoordsFromFlatIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a="var index2 = index;"+n.map((o,i)=>{let u=`let ${r[i]} = index2 / uniforms.outShapeStrides[${i}]`,c=i===n.length-1?`let ${r[i+1]} = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`:`index2 = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`;return`${u}; ${c};`}).join("");return`
    fn getCoordsFromFlatIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}var K0={};$e(K0,{ArrayBufferToTypedArray:()=>X0,GPUBytesPerElement:()=>sy,computeDispatch:()=>Ne,computeWorkGroupSizeForConv2d:()=>ey,computeWorkGroupSizeForMatMul:()=>ty,computeWorkPerThreadForConv2d:()=>ny,flatDispatchLayout:()=>ze,isWebGPUSupported:()=>ry,tilesFitEvenlyIntoShape:()=>Bs});var Mi=65535,so=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function Bs(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]==0)}function Ne(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,o]=[Math.ceil(so(e.x.map(u=>t[u]))/(n[0]*s[0])),e.y?Math.ceil(so(e.y.map(u=>t[u]))/(n[1]*s[1])):1,e.z?Math.ceil(so(e.z.map(u=>t[u]))/(n[2]*s[2])):1];if(r<=Mi&&a<=Mi&&o<=Mi)return[r,a,o];x.assert(r>Mi&&e.y===void 0&&e.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(r));return i>Mi?(i=Math.ceil(Math.cbrt(r)),x.assert(i<=Mi,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]}function ey(e,t){let n=so(e.x.map(r=>t[r])),s=so(e.y.map(r=>t[r]));return n<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function ty(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function ny(e,t){let n=so(e.x.map(r=>t[r])),s=so(e.y.map(r=>t[r]));return n<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function ze(e){return{x:e.map((t,n)=>n)}}function sy(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function X0(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string"){let n=new Int32Array(e),s=new ArrayBuffer(n.length),r=new Uint8Array(s);for(let a=0;a<n.length;a++)r[a]=n[a];return r}else throw new Error(`Unknown dtype ${t}`)}function ry(){return!!navigator.gpu}var St;(function(e){e[e.MUL=0]="MUL",e[e.ADD=1]="ADD",e[e.SUB=2]="SUB",e[e.DIV=3]="DIV",e[e.EQUAL=4]="EQUAL",e[e.GREATER=5]="GREATER",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.LESS=7]="LESS",e[e.LESS_EQUAL=8]="LESS_EQUAL",e[e.LOGICAL_AND=9]="LOGICAL_AND",e[e.NOT_EQUAL=10]="NOT_EQUAL",e[e.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",e[e.INT_DIV=12]="INT_DIV",e[e.POW=13]="POW",e[e.PRELU=14]="PRELU",e[e.MAX=15]="MAX",e[e.MIN=16]="MIN",e[e.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",e[e.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG"})(St||(St={}));var FQ="return a + b;",OQ="return areal * breal - aimag * bimag;",PQ="return areal * bimag + aimag * breal;",LQ="return a / b;",zQ="return a * b;",MQ="return (a - b) * (a - b);",BQ="return a - b;",VQ="return f32(a == b);",WQ="return vec4<f32>(a == b);",UQ="return f32(a > b);",GQ="return vec4<f32>(a > b);",HQ="return f32(a >= b);",qQ="return vec4<f32>(a >= b);",jQ="return f32(a < b);",KQ="return vec4<f32>(a < b);",XQ="return f32(a <= b);",YQ="return vec4<f32>(a <= b);",QQ="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",ZQ=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,JQ=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,Y0=`
  if (isNaN.r > 0.) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g > 0.) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b > 0.) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a > 0.) {
    resultTemp.a = uniforms.NAN;
  }
  `,eZ=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,tZ=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,nZ="return f32(a != b);",sZ="return vec4<f32>(a != b);",rZ=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,aZ=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = vec4<f32>(a < vec4<f32>(0.0)) * vec4<f32>(floor(b) < b);
  ${Y0}
  return resultTemp;
  `,oZ="if (a < 0.0) { return b * a; }  return a;",iZ=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function Q0(e,t){let n=t?Y0:JQ;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = min(vec4<f32>(isNanCustomVec4F32(a)) + vec4<f32>(isNanCustomVec4F32(b)), vec4<f32>(1.0));
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function Cl(e,t){switch(e){case 0:return zQ;case 1:return FQ;case 2:return BQ;case 3:return LQ;case 4:return t?WQ:VQ;case 5:return t?GQ:UQ;case 6:return t?qQ:HQ;case 7:return t?KQ:jQ;case 8:return t?YQ:XQ;case 9:return t?ZQ:QQ;case 10:return t?sZ:nZ;case 11:return MQ;case 12:return t?tZ:eZ;case 14:return t?iZ:oZ;case 15:return Q0("max",t);case 16:return Q0("min",t);case 13:return t?aZ:rZ;case 17:return OQ;case 18:return PQ;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var it;(function(e){e[e.ABS=0]="ABS",e[e.CEIL=1]="CEIL",e[e.COS=2]="COS",e[e.COSH=3]="COSH",e[e.ELU=4]="ELU",e[e.EXP=5]="EXP",e[e.EXPM1=6]="EXPM1",e[e.FLOOR=7]="FLOOR",e[e.LINEAR=8]="LINEAR",e[e.LOG=9]="LOG",e[e.LOGICAL_NOT=10]="LOGICAL_NOT",e[e.NEG=11]="NEG",e[e.PRELU=12]="PRELU",e[e.RELU=13]="RELU",e[e.RELU6=14]="RELU6",e[e.RSQRT=15]="RSQRT",e[e.SIN=16]="SIN",e[e.SINH=17]="SINH",e[e.SIGMOID=18]="SIGMOID",e[e.SQRT=19]="SQRT",e[e.SQUARE=20]="SQUARE",e[e.TANH=21]="TANH",e[e.TO_INT=22]="TO_INT"})(it||(it={}));var uZ="return abs(a);",lZ="return ceil(a);",cZ="return cos(a);",dZ=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,hZ="return exp(a) - 1.0;",pZ="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",fZ=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,mZ="return exp(a);",gZ="return floor(a);",bZ="return a;",yZ=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,vZ="return f32(!(a >= 1.0));",xZ="return -a;",wZ="return (a < 0.0) ? b * a : a;",kZ="return max(a, 0.0);",IZ="return clamp(a, 0.0, 6.0);",SZ="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",CZ=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNan(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,NZ="return 1.0/sqrt(a);",TZ="return 1.0 / (1.0 + exp(-1.0 * a));",$Z="return sin(a);",AZ=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,EZ="return sqrt(a);",_Z="return a * a;",RZ=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,DZ="return f32(i32((a)));";function Bi(e,t){switch(e){case 0:return uZ;case 2:return cZ;case 3:return dZ;case 1:return lZ;case 4:return t?fZ:pZ;case 5:return mZ;case 6:return hZ;case 7:return gZ;case 8:return bZ;case 9:return yZ;case 10:return vZ;case 11:return xZ;case 12:return wZ;case 13:return t?CZ:kZ;case 14:return t?SZ:IZ;case 15:return NZ;case 18:return TZ;case 16:return $Z;case 17:return AZ;case 19:return EZ;case 20:return _Z;case 21:return RZ;case 22:return DZ;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function Vs(e,t=!1){if(e===null)return null;if(e==="linear")return Bi(it.LINEAR);if(e==="relu")return Bi(it.RELU,t);if(e==="elu")return Bi(it.ELU,t);if(e==="relu6")return Bi(it.RELU6,t);if(e==="prelu")return Cl(St.PRELU,t);if(e==="sigmoid")return Bi(it.SIGMOID);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function Z0(e,t){let n={RowPerThread:e[1],ColPerThread:e[0],TileAOuter:t[1]*e[1],TileBOuter:t[0]*e[0],TileInner:t[0]*e[0]};return`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${n.TileInner/n.ColPerThread}>, ${n.TileAOuter}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n.TileBOuter/n.ColPerThread}>, ${n.TileInner}>;

  let RowPerThread = ${n.RowPerThread};
  let ColPerThread = ${n.ColPerThread}; // only support ColPerThread = 4
  let TileAOuter = ${n.TileAOuter};
  let TileBOuter = ${n.TileBOuter};
  let TileInner = ${n.TileInner};

  ${Ce()} {

    let tileRow = i32(localId.y) * RowPerThread;
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * RowPerThread;
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, ${n.RowPerThread}>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / ${t[1]};
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
}`}function FZ(e){return`
  var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;
  let tileSize = ${e[0]*4};
  ${Ce()} {
    let tileCol = i32(localId.x);
    let globalCol = i32(globalId.x);
    let globalRow = i32(globalId.y);

    let numTiles = (uniforms.dimInner - 1) / tileSize + 1;

    // Without this initialization strange values show up in acc.
    var acc = vec4<f32>(0.0);

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      let colA = t * tileSize / 4 + tileCol;
      mm_Asub[tileCol] = mm_readA(globalRow, colA, globalId);

      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileSize / 4; k = k + 1) {
        let rowB = t * tileSize + k * 4;
        let BCached0 = mm_readB(rowB, globalCol, globalId);
        let BCached1 = mm_readB(rowB + 1, globalCol, globalId);
        let BCached2 = mm_readB(rowB + 2, globalCol, globalId);
        let BCached3 = mm_readB(rowB + 3, globalCol, globalId);

        let ACached = mm_Asub[k];
        acc = acc + BCached0 * ACached.x;
        acc = acc + BCached1 * ACached.y;
        acc = acc + BCached2 * ACached.z;
        acc = acc + BCached3 * ACached.w;
      }

      workgroupBarrier();
    }

    if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
      mm_write(globalRow, globalCol, acc, globalId);
    }
  }
`}var OZ=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.isVec4=!0,this.vecSize=4,this.outputShape=t,this.workGroupSize=ty(t[1],e[2],t[2]),this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&(n=1),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.vecSize,n,1]);let o=s!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],s=this.workGroupSize[1]*this.workPerThread,r=this.workGroupSize[0]*this.vecSize,a=r,o=[s,a],i=[a,r];return[Bs(o,this.aShape.slice(1)),Bs(i,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",s="";if(this.activation){let o=Vs(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${o}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${o}
            }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${r}
          ${s}
          setOutput(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${this.outputShape[1]>1?Z0([this.vecSize,this.workPerThread,1],this.workGroupSize):FZ(this.workGroupSize)}

    `}};function ay(e,t){let n=t[1]*e[1],s=t[0]*e[0],r=n>s?n:s;return`
    var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${r}>;
    ${Ce()} {
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${r} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${r} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${r} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${r} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${r} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${r}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function PZ(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Ce()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var J0=class{constructor(e,t,n,s=!1,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let u=s?e[1]:e[2];this.workGroupSize=ty(t[1],u,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),x.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let c=a!=null,l=i!=null;c&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=s,this.transposeB=r,this.addBias=c,this.activation=o,this.hasPreluActivationWeights=l;let d=this.outputShape[2],h=this.transposeB?[this.outputShape[0],d,u]:[this.outputShape[0],u,d];[this.fitA,this.fitB]=this.getShapeFit(h),this.shaderKey=`matMulPacked_${this.workPerThread}_${s}_${r}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,s=t>n?t:n;this.outputShape[1]===1&&(s*=4),x.assert(s%this.workGroupSize[0]==0&&s%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[t,s],a=[s,n];return[Bs(r,this.aShape.slice(1)),Bs(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",s="";if(this.activation){let o=Vs(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutput(batch, row, col, value);
      }
      ${this.outputShape[1]>1?ay([this.workPerThread,this.workPerThread,1],this.workGroupSize):PZ(this.workGroupSize)}
    `}};function LZ(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Ce()} {
      ${Ee()}
      let coords = getOutputCoords(globalId, index);
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var zZ=class{constructor(e,t=!1,n=!1,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize);let o=s!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e;this.transposeA===!1?e="return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":e="return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",s="";if(this.activation){let o=Vs(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutput(batch, row, col, value);
      }
      ${LZ()}
    `}};function MZ(e){let t=e[1]/2,n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${s}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${Ce()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var BZ=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,16,1],x.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let o=s!=null;o&&this.variableNames.push("bias");let i=a!=null;i&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",s="";if(this.activation){let o=Vs(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
            ${o}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${o}
        }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${r}
          ${s}
          setOutput(batch, row, col, value);
        }
      }
      ${MZ(this.workGroupSize)}
    `}};function Me(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=x.sizeFromShape(s.shape),o=x.inferFromImplicitShape(r,a),i=x.sizeFromShape(o);return x.assert(a===i,()=>`The new shape (${o}) has ${i} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var VZ={kernelName:Vo,backendName:"webgpu",kernelFunc:Me};function oy({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){let c=e.shape.length,l=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],h=s?t.shape[l-1]:t.shape[l-2],p=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=x.sizeFromShape(m),v=x.sizeFromShape(g),w=li.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);x.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let k=n?[b,d,p]:[b,p,d],S=s?[v,f,h]:[v,h,f],N=Me({inputs:{x:e},backend:r,attrs:{shape:k}}),A=Me({inputs:{x:t},backend:r,attrs:{shape:S}}),_=[N,A],O=Math.max(b,v),R=d%4==0&&f%4==0&&!n&&!s&&f>=32,D;p*f<=32?D=new zZ([O,p,f],n,s,a,u,o):!n&&!s&&(p<=16&&(f<=512||h>=2*f)||f<=16&&(p<=512||d>=2*p))?D=new BZ(k,S,[O,p,f],a,u,o):R?D=new OZ(k,[O,p,f],X().get("WEBGPU_MATMUL_WORK_PER_THREAD"),a,u,o):D=new J0(k,[O,p,f],X().get("WEBGPU_MATMUL_WORK_PER_THREAD"),n,s,a,u,o);let C=[N,A];a&&C.push(a),o&&C.push(o);let P=[{type:"int32",data:[p]},{type:"int32",data:[f]},{type:"int32",data:[d]}],V=r.runWebGPUProgram(D,C,e.dtype,P),G=Me({inputs:{x:V},backend:r,attrs:{shape:w}});_.push(V);for(let U of _)r.disposeData(U.dataId);return G}function WZ(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s;return oy({a:r,b:a,transposeA:u,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}var UZ={kernelName:wa,backendName:"webgpu",kernelFunc:WZ},eC=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e,this.size=x.sizeFromShape(this.outputShape)}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Cl(this.op,!1)}
      }

      ${Ce()} {
        ${Ee()}
        if(index < uniforms.size) {
          let areal = getARealAtOutCoordsByGlobalId(globalId, index);
          let aimag = getAImagAtOutCoordsByGlobalId(globalId, index);
          let breal = getBRealAtOutCoordsByGlobalId(globalId, index);
          let bimag = getBImagAtOutCoordsByGlobalId(globalId, index);
          setOutputFlat(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},GZ=class{constructor(e,t,n,s){this.variableNames=["A","B"];let r=256;this.workGroupSize=[r,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ze(this.outputShape),this.lastDimensionSize=s?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=s,this.op=e,this.size=x.sizeFromShape(this.outputShape),this.sizeFit=this.size%(this.workGroupSize[0]*this.workPerThread)==0,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}_${this.sizeFit}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAAtOutCoordsByCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBAtOutCoordsByCoords(coords);`,n=this.sizeFit?`let coords = getCoordsFromFlatIndex(flatIndex);

         ${t}
         setOutputFlat(flatIndex, binaryOperation(a, b));`:`if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);

            ${t}
            setOutputFlat(flatIndex, binaryOperation(a, b));
          }`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Cl(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Ce()} {
          ${Ee()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;

            ${n}
          }
        }
        `}},HZ=class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.fitShape=this.size%this.workGroupSize[0]==0,this.shaderKey=`binaryVec4_${e}_${this.fitShape}`,this.size=x.sizeFromShape(this.outputShape)/this.workPerThread}getUserCode(){let e,n=`fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
          ${Cl(this.op,this.isVec4)}
        }`;return this.fitShape?e=`
      ${n}
      ${Ce()} {
        ${Ee()}
        let a = vec4<f32>(A.numbers[index]);
        let b = vec4<f32>(B.numbers[index]);
        setOutputFlat(index, binaryOperation(a, b));
      }
    `:e=`
      ${n}
      ${Ce()} {
        ${Ee()}
        if (index < uniforms.size) {
          let a = vec4<f32>(A.numbers[index]);
          let b = vec4<f32>(B.numbers[index]);
          setOutputFlat(index, binaryOperation(a, b));
        }
      }
    `,e}},tC=class{constructor(e,t,n){this.variableNames=["A","B"];let s=128;this.workGroupSize=[s,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ze(this.outputShape),this.size=x.sizeFromShape(this.outputShape),this.sizeFit=this.size%s==0,this.shapesFit=x.arraysEqual(t,n)&&this.sizeFit,this.workPerThread=this.sizeFit||this.shapesFit?1:2,this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey=`binary_${e}_${this.sizeFit}_${this.shapesFit}`,this.op=e}getUserCode(){let e,n=`          fn binaryOperation(a : f32, b : f32) -> f32 {
      ${Cl(this.op,!1)}
    }`;return this.shapesFit?e=`
          ${n}
          ${Ce()} {
            ${Ee()}

            let a = f32(A[index]);
            let b = f32(B[index]);
            setOutputFlat(index, binaryOperation(a, b));
          }
        `:this.sizeFit?e=`
      ${n}
      ${Ce()} {
        ${Ee()}

        let coords = getCoordsFromFlatIndex(index);

        let a = getAAtOutCoordsByCoords(coords);
        let b = getBAtOutCoordsByCoords(coords);
        setOutputFlat(index, binaryOperation(a, b));
      }
      `:e=`
      ${n}
      ${Ce()} {
        ${Ee()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1 ) {
          let flatIndex = index * ${this.workPerThread} + i;

          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);

            let a = getAAtOutCoordsByCoords(coords);
            let b = getBAtOutCoordsByCoords(coords);
            setOutputFlat(flatIndex, binaryOperation(a, b));
          }
        }
      }
      `,e}};function nC(e,t,n){if(x.arraysEqual(t,n)&&x.sizeFromShape(t)%4==0)return new HZ(e,t,n);let r=t.length===1&&n.length>1&&t[0]<1024,a=n.length===1&&t.length>1&&n[0]<1024;return r||a?new GZ(e,t,n,a):new tC(e,t,n)}function Kn(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var qZ={kernelName:Kr,backendName:"webgpu",kernelFunc:Kn};function Vi(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.tensorMap.get(a.dataId),i=Kn({inputs:{x:s},backend:n}),u=Kn({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:u},a}var jZ={kernelName:pc,backendName:"webgpu",kernelFunc:Vi},hh=class{constructor(e,t){this.variableNames=["A"];let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.size=x.sizeFromShape(this.outputShape),this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Bi(this.op,!1)}
      }
      ${Ce()} {
        ${Ee()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalId(globalId, index);
          setOutputFlat(index, unaryOperation(a));
        }
      }
      `}};function Qt({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,o=r,i=n||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){let c=o.tensorMap.get(a.dataId),l=t(c.values,i);return o.makeTensorInfo(a.shape,i,l)}let u=new hh(a.shape,e);return o.runWebGPUProgram(u,[a],i)}}function cn({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:o,b:i}=r,u=a;if(n&&o.dtype==="complex64"){let d=u.tensorMap.get(o.dataId),h=u.tensorMap.get(i.dataId),p,f;if(e!==St.MUL)[p,f]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(g=>{let[b,v]=g,y={dataId:b.dataId,dtype:b.dtype,shape:o.shape},w={dataId:v.dataId,dtype:v.dtype,shape:i.shape},k=nC(e,o.shape,i.shape);return u.runWebGPUProgram(k,[y,w],mn(b.dtype,v.dtype))});else{let g=new eC(St.COMPLEX_MULTIPLY_REAL,o.shape,i.shape),b=new eC(St.COMPLEX_MULTIPLY_IMAG,o.shape,i.shape),v=[{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:i.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:i.shape}];p=u.runWebGPUProgram(g,v,"float32"),f=u.runWebGPUProgram(b,v,"float32")}let m=Vi({inputs:{real:p,imag:f},backend:u});return u.disposeData(p.dataId),u.disposeData(f.dataId),m}let c=s||mn(o.dtype,i.dtype);if((o.dtype==="string"||i.dtype==="string"||u.shouldExecuteOnCPU([o,i]))&&t!=null){let d=u.tensorMap.get(o.dataId).values,h=u.tensorMap.get(i.dataId).values,p=o.dtype==="string"?T.fromUint8ToStringArray(d):d,f=o.dtype==="string"?T.fromUint8ToStringArray(h):h,[m,g]=t(o.shape,i.shape,p,f,c);return u.makeTensorInfo(g,c,m)}let l=nC(e,o.shape,i.shape);return u.runWebGPUProgram(l,[o,i],c)}}var{addImpl:KZ,ceilImpl:XZ,concatImpl:YZ,equalImpl:QZ,expImpl:ZZ,expm1Impl:JZ,floorImpl:eJ,gatherNdImpl:tJ,gatherV2Impl:nJ,greaterEqualImpl:sJ,greaterImpl:rJ,lessEqualImpl:aJ,lessImpl:oJ,logImpl:iJ,maxImpl:uJ,maximumImpl:lJ,minimumImpl:cJ,multiplyImpl:dJ,negImpl:hJ,notEqualImpl:pJ,prodImpl:fJ,rangeImpl:mJ,rsqrtImpl:gJ,simpleAbsImpl:bJ,sliceImpl:yJ,stridedSliceImpl:vJ,stringNGramsImpl:xJ,subImpl:wJ,tileImpl:kJ,topKImpl:IJ,transposeImpl:SJ,uniqueImpl:Zue}=vb,CJ=Qt({opType:it.ABS,cpuKernelImpl:bJ}),NJ={kernelName:go,backendName:"webgpu",kernelFunc:CJ},TJ=cn({opSnippet:St.ADD,cpuKernelImpl:KZ,supportsComplex:!0}),$J={kernelName:Qs,backendName:"webgpu",kernelFunc:TJ},AJ=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN",this.size=x.sizeFromShape(this.outputShape)}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}AtOutCoordsByCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${Ce()} {
        ${Ee()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputFlat(flatIndex, ${t});
          }
        }
      }
    `}};function EJ(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Kn({inputs:{x:s[0]},backend:n});let r=s.map(i=>i.dtype).reduce((i,u)=>mn(i,u)),a=s.map(i=>i.shape),o=new AJ(a);return n.runWebGPUProgram(o,s,r)}var _J={kernelName:Er,backendName:"webgpu",kernelFunc:EJ},sC=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="axis : i32;";let s=[t];T.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r,a]=T.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r;let o=x.sizeFromShape(a);this.reductionFactor=2;let i=256,u=Math.min(Math.ceil(o/this.reductionFactor),i);this.workGroupSize=[u,1,1],this.dispatchLayout={x:[],y:this.outputShape.map((c,l)=>l)},this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=this.workGroupSize[0]>1,t=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,n=`
      xBestIndices[localId.x] = bestIndex;
      xBestValues[localId.x] = bestValue;

      for(var currentSize = WorkGroupSize; currentSize > 1; currentSize = DIV_CEIL(currentSize, ${this.reductionFactor})) {
        workgroupBarrier();

        for (var w = 0; w < ${this.reductionFactor}; w = w + 1) {
          let i = i32(localId.x) * ${this.reductionFactor} + w;
          if (i < currentSize) {
            let candidateIndex = xBestIndices[i];
            let candidate = xBestValues[i];
            if(candidate ${this.op} bestValue && !isNanCustom(candidate)) {
              bestValue = candidate;
              bestIndex = candidateIndex;
            }
          }
        }

        xBestIndices[localId.x] = bestIndex;
        xBestValues[localId.x] = bestValue;
      }

      if (localId.x == 0u) {
        setOutputFlatI32(flatOutputIndex, i32(bestIndex));
      }
    `,s=Et(this.outputShape.length),r=(i,u)=>this.outputShape.length===1?i:`${i}[${u}]`,a=i=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${i}]`;return`
      fn DIV_CEIL(a : i32, b : i32) -> i32 {
        return ((a - 1) / b + 1);
      }

      let WorkGroupSize = ${this.workGroupSize[0]};

      ${e?t:""}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(globalId : vec3<u32>, globalIndex : i32) -> vec2<i32>{
        let outputCoords : ${s} = getOutputCoords(globalId, globalIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${a(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${r("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${Ce()} {
        ${Ee()}
        let coordInfo = getInputCoordInfo(globalId, index);

        var bestIndex = 0;
        var bestValue = f32(x.numbers[getInputIndex(coordInfo, bestIndex)]);

        let Length = ${a("uniforms.axis")};
        let WorkPerThread = DIV_CEIL(Length, WorkGroupSize);

        for (var w = 0; w < WorkPerThread; w = w + 1) {
          let i = i32(globalId.x) * WorkPerThread + w;
          if (i < Length) {
            let candidate = f32(x.numbers[getInputIndex(coordInfo, i)]);
            if (candidate ${this.op} bestValue && !isNanCustom(f32(candidate))) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
        }

        let flatOutputIndex = i32(globalId.y);
        ${e?n:"setOutputFlatI32(flatOutputIndex, bestIndex);"}
      }
    `}},RJ=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Ce()} {
        ${Ee()}
        let workGroupID = (globalId - localId)/vec3<u32>(${this.workGroupSize[0]}u, ${this.workGroupSize[1]}u, ${this.workGroupSize[2]}u);
        var x = i32(workGroupID.x) * TILE_DIM + i32(localId.x);
        var y = i32(workGroupID.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workGroupID.y) * TILE_DIM + i32(localId.x);
        y = i32(workGroupID.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputFlat((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},DJ=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`,this.size=x.sizeFromShape(this.outputShape)}getUserCode(){let e=Et(this.outputShape.length),t=FJ(this.newDim);return`
      ${Ce()} {
        ${Ee()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromFlatIndex(flatIndex);
            setOutputFlat(flatIndex, A.numbers[getFlatIndex${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function FJ(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC[${s}]`;return n.join()}function ro(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=r.shape[a[l]];if(n.shouldExecuteOnCPU([r])){let d=o.tensorMap.get(r.dataId).values,h=SJ(d,r.shape,r.dtype,a,u);return n.makeTensorInfo(u,r.dtype,h)}if(r.shape.length===2&&x.arraysEqual(a,[1,0])){let l=new RJ(r.shape,a);return o.runWebGPUProgram(l,[r],r.dtype)}let c=new DJ(r.shape,a);return o.runWebGPUProgram(c,[r],r.dtype)}var OJ={kernelName:va,backendName:"webgpu",kernelFunc:ro};function PJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=x.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),u=r,c=[];i!=null&&(u=ro({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=T.getInnerMostAxes(o.length,u.shape.length)),T.assertAxesAreInnerMostDims("argMax",[o[0]],u.shape.length);let l=new sC(u.shape,o[0],"max"),d=[{type:"int32",data:[o[0]]}],h=n.runWebGPUProgram(l,[u],"int32",d);return c.forEach(p=>n.disposeData(p.dataId)),h}var LJ={kernelName:_r,backendName:"webgpu",kernelFunc:PJ};function zJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=x.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),u=r,c=[];i!=null&&(u=ro({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=T.getInnerMostAxes(o.length,u.shape.length)),T.assertAxesAreInnerMostDims("argMin",[o[0]],u.shape.length);let l=new sC(u.shape,o[0],"min"),d=[{type:"int32",data:[o[0]]}],h=n.runWebGPUProgram(l,[u],"int32",d);return c.forEach(p=>n.disposeData(p.dataId)),h}var MJ={kernelName:hu,backendName:"webgpu",kernelFunc:zJ},rC=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Ce()} {
        ${Ee()}
        let coords = getOutputCoords(globalId, index);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutput(batch, coords[1], coords[2], coords[3], ${t});
        }
      }
    `}},aC=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>;",this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Ce()} {
        ${Ee()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let d = coords[3];

        if (all(coords < uniforms.outShape)) {
          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutput(batch, coords[1], coords[2], d, value);
        }
      }
    `}};function BJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=s,c=1,l=T.computePool2DInfo(r.shape,a,o,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&x.arraysEqual(l.inShape,l.outShape))return Kn({inputs:{x:r},backend:n});let d,h=[{type:"int32",data:[l.strideHeight,l.strideWidth]}];return l.filterHeight===1&&l.filterWidth===1?d=new aC(l):(d=new rC(l,"avg"),h.push({type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]})),n.runWebGPUProgram(d,[r],r.dtype,h)}var VJ={kernelName:Rr,backendName:"webgpu",kernelFunc:BJ};function WJ(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return oy({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var UJ={kernelName:Dr,backendName:"webgpu",kernelFunc:WJ},GJ=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.outputShape=t,this.rank=t.length,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Et(e.length)}; `,this.shaderKey="slice",this.size=x.sizeFromShape(this.outputShape)}getUserCode(){let e=Et(this.rank),t=HJ(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${iy[a]} = uniforms.start[${a}] + coords.${iy[a]};`),`
      ${Ce()} {
        ${Ee()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getOutputCoords(globalId, index);
          ${n.join(`
`)}
          setOutputFlat(index, getSource(${t}));
        }
      }
    `}},iy=["x","y","z","w","u","v"];function HJ(e){if(e===1)return"sourceLoc";if(e<=6)return iy.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function Wi(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,u]=It.parseSliceParams(r,a,o);if(It.assertParamsValid(r,i,u),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.tensorMap.get(r.dataId),h=yJ(d.values,i,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,h)}if(x.sizeFromShape(u)===0)return n.makeTensorInfo(u,r.dtype,[]);let c=new GJ(i,u),l=[{type:"int32",data:i}];return n.runWebGPUProgram(c,[r],r.dtype,l)}var qJ={kernelName:qo,backendName:"webgpu",kernelFunc:Wi},jJ=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;x.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((v,y)=>v*y),u=T.getReshaped(r.shape,a,i),c=T.getPermuted(u.length,a.length),l=T.getReshapedPermuted(r.shape,a,i),d=T.getSliceBeginCoords(o,a.length),h=T.getSliceSize(l,o,a.length),p=[],f=Me({inputs:{x:r},backend:n,attrs:{shape:u}}),m=ro({inputs:{x:f},backend:n,attrs:{perm:c}}),g=Me({inputs:{x:m},backend:n,attrs:{shape:l}}),b=Wi({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(v=>n.disposeData(v.dataId)),b},KJ={kernelName:bo,backendName:"webgpu",kernelFunc:jJ},oC=cn({opSnippet:St.NOT_EQUAL,dtype:"bool",cpuKernelImpl:pJ}),XJ={kernelName:Fo,backendName:"webgpu",kernelFunc:oC};function Nl(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Kn({inputs:{x:r.complexTensorInfos.real},backend:n})}var YJ={kernelName:kc,backendName:"webgpu",kernelFunc:Nl};function QJ(e,t){let n=new hh(e.shape,it.TO_INT),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function uy(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Kn({inputs:{x:r},backend:n});let o=Ft(r.shape),i=uy({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=Vi({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeData(i.dataId),u}if(r.dtype==="complex64"){let o=Nl({inputs:{input:r},backend:n}),i=uy({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeData(o.dataId),i}if(!x.hasEncodingLoss(r.dtype,a)){let o=Kn({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return QJ(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",x.getTypedArrayFromDType("bool",1)),u=oC({inputs:{a:r,b:o},backend:n});return n.disposeData(o.dataId),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var ZJ={kernelName:Fr,backendName:"webgpu",kernelFunc:uy},JJ=Qt({opType:it.CEIL,cpuKernelImpl:XZ}),eee={kernelName:Or,backendName:"webgpu",kernelFunc:JJ},tee=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4",this.size=x.sizeFromShape(this.outputShape)/4}getUserCode(){return`
      ${Ce()} {
        ${Ee()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalId(globalId, index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputFlat(index, clampedValue);
        }
      }
    `}},nee=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip",this.size=x.sizeFromShape(this.outputShape)}getUserCode(){return`
      ${Ce()} {
        ${Ee()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalId(globalId, index);
          if (isNanCustom(value)) {
            setOutputFlat(index, value);
            return;
          }
          setOutputFlat(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function see(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i,u=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return x.sizeFromShape(r.shape)%4==0?i=new tee(r.shape):i=new nee(r.shape),n.runWebGPUProgram(i,[r],r.dtype,u)}var ree={kernelName:Zs,backendName:"webgpu",kernelFunc:see},aee=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shapes=e,this.shaderKey=`concat${e}`,this.size=x.sizeFromShape(this.outputShape)}getUserCode(){let e=new Array(this.shapes.length-1),t=[];if(e.length>0){e[0]=this.shapes[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+this.shapes[a][1];t.push(`if (yC < ${e[0]}){ setOutput(coords.x, coords.y, getT0(yR, yC)); }`);for(let a=1;a<e.length;a++){let o=e[a-1];t.push(`elseif (yC < ${e[a]}){ setOutput(coords.x, coords.y, getT${a}(yR, yC - ${o})); }`)}let s=e.length,r=e[e.length-1];t.push(`else { setOutput(coords.x, coords.y, getT${s}(yR, yC - ${r})); }`)}else t.push("setOutput(coords.x, coords.y, getT0(yR, yC));");return`
      ${Ce()} {
        ${Ee()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function ph(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Kn({inputs:{x:r.complexTensorInfos.imag},backend:n})}var oee={kernelName:yc,backendName:"webgpu",kernelFunc:ph};function ly(e,t,n){let s=e[0].dtype;if(s==="complex64"){let l=e.map(m=>Nl({inputs:{input:m},backend:n})),d=e.map(m=>ph({inputs:{input:m},backend:n})),h=ly(l,t,n),p=ly(d,t,n),f=Vi({inputs:{real:h,imag:p},backend:n});return l.forEach(m=>n.disposeData(m.dataId)),d.forEach(m=>n.disposeData(m.dataId)),n.disposeData(h.dataId),n.disposeData(p.dataId),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let l=e.map(b=>{let v=x.sizeFromShape(b.shape.slice(t));return Me({inputs:{x:b},backend:n,attrs:{shape:[-1,v]}})}),d=l.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),h=T.computeOutShape(l.map(b=>b.shape),1),p=l[0].shape[0]===1,f=YZ(d,h,s,p),m=T.computeOutShape(e.map(b=>b.shape),t),g=n.makeTensorInfo(m,s,f);return l.forEach(b=>n.disposeData(b.dataId)),g}let{tensors2D:a,outShape:o}=iee(e,t,n),i=new aee(a.map(l=>l.shape)),u=n.runWebGPUProgram(i,a,a[0].dtype);a.forEach(l=>n.disposeData(l.dataId));let c=Me({inputs:{x:u},backend:n,attrs:{shape:o}});return n.disposeData(u.dataId),c}function iee(e,t,n){let s=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>Me({inputs:{x:a},backend:n,attrs:{shape:[x.sizeFromShape(a.shape.slice(0,t)),x.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function iC(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=x.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(c=>c.shape),a);if(x.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>x.sizeFromShape(c.shape)>0);if(i.length===1)return Kn({inputs:{x:i[0]},backend:n});let u=i.map(c=>c.shape);return T.assertParamsConsistent(u,a),ly(i,a,n)}var uee={kernelName:yo,backendName:"webgpu",kernelFunc:iC},lee=class{constructor(e,t){this.variableNames=["A"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`,this.workPerThread=4,this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`,this.size=x.sizeFromShape(this.outputShape)}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${Ce()} {
      ${Ee()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromFlatIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputFlat(flatIndex, value);
        }
      }
    }
  `}};function uC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let u=e.shape,c=n.dataFormat==="channelsLast",l=!1,d=!1,h=c?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],p=Me({inputs:{x:e},backend:s,attrs:{shape:[1,h,n.inChannels]}}),f=Me({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),m=oy({a:p,b:f,transposeA:l,transposeB:d,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),g=Me({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});return s.disposeData(p.dataId),s.disposeData(f.dataId),s.disposeData(m.dataId),g}function cee({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:u,filterHeight:c,inChannels:l,strideWidth:d,strideHeight:h,padInfo:p,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:b,dataFormat:v}=n,y=v==="channelsLast",w=u*c*l,k=m*f,S=[k,w],N=!1,A=!1,_=[],O=Me({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),R=Me({inputs:{x:t},backend:s,attrs:{shape:[1,w,-1]}});_.push(O),_.push(R);let D=new lee(S,y),C=[{type:"int32",data:[p.left,p.top]},{type:"int32",data:[d,h]},{type:"int32",data:[g,b]},{type:"int32",data:[f]},{type:"int32",data:[l*u]},{type:"int32",data:[l]}],P=s.runWebGPUProgram(D,[O],O.dtype,C),V=Me({inputs:{x:P},backend:s,attrs:{shape:[1,S[0],S[1]]}});_.push(P),_.push(V);let G=[1,S[0],S[1]],U=new J0(G,[1,k,n.outChannels],X().get("WEBGPU_MATMUL_WORK_PER_THREAD"),N,A),q=G[1],Y=G[2],Z=n.outChannels,J=[{type:"int32",data:[q]},{type:"int32",data:[Z]},{type:"int32",data:[Y]}],ne=s.runWebGPUProgram(U,[V,R],V.dtype,J),ee=y?[1,m,f,n.outChannels]:[1,n.outChannels,m,f],te=Me({inputs:{x:ne},backend:s,attrs:{shape:ee}});_.push(ne);for(let re of _)s.disposeData(re.dataId);return te}var lC=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`,this.isVec4=!0,this.outputShape=e.outShape,x.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=[8,8,1];let a=[4,4,1];this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,a),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.hasLeakyreluAlpha=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),[this.fitA,this.fitB]=this.getShapeFit(a),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(e){let t=this.workGroupSize[1]*e[1],n=this.workGroupSize[0]*e[0],s=n,r=[t,s],a=[s,n],o=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],u=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Bs(r,[o,u]),Bs(a,[u,i])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getFlatIndex4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } elseif (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } elseif (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let t=Z0([4,4,1],this.workGroupSize),r=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getFlatIndex4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } elseif (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,a=this.fitA?`${r}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${r}
         }
         return vec4<f32>(0.0);
        `,o=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,i="",u="";if(this.activation){let d=Vs(this.activation,this.isVec4);if(this.hasPreluActivationWeights)i=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${d}
        }`;else{if(this.hasLeakyreluAlpha)throw i=`fn activation(a: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaAtOutCoords();
          ${d}
        }`,new Error("Leakyrelu is not supported.");i=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${d}
        }`}u="value = activation(value, outCoord);"}let c=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
        ${i}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${a}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${o}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${c}
            ${u}
            setOutput(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${t}
      `}},cC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.outShape,x.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=ey(this.dispatchLayout,this.outputShape),this.elementsPerThread=ny(this.dispatchLayout,this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;x.assert(n%this.workGroupSize[0]==0&&n%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[e,n],r=[n,t],a=this.outputShape[1]*this.outputShape[2],o=this.outputShape[3],i=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Bs(s,[a,i]),Bs(r,[i,o])]}getUserCode(){let e=ay(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,s=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,r="",a="";if(this.activation){let u=Vs(this.activation,!1);this.hasPreluActivationWeights?r=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${u}
                }`:r=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${u}
                  }
                `,a="value = activation(value, outCoord);"}let o=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
    ${r}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${s}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${o}
      ${a}
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}},dC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),x.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=Vs(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${r}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${r}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutput(batch, row, col, chan, value);
        }
      }

      ${Ce()} {
        ${Ee()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function dee(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=n,d=T.convertConv2DDataFormat(u),h=T.computeConv2DInfo(r.shape,a.shape,o,c,i,l,!1,d);if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))return uC({x:r,filter:a,convInfo:h,backend:s});if(X().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&r.shape[0]===1)return cee({x:r,filter:a,convInfo:h,backend:s});let p,f=[h.padInfo.top,h.padInfo.left],m=[{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]}],g=X().getBool("WEBGPU_USE_NAIVE_CONV2D");if(g?p=new dC(h):(h.inChannels%4==0||h.inChannels===3&&h.padInfo.type==="VALID")&&h.outChannels%4==0&&h.outChannels>=64?p=new lC(h):p=new cC(h),!g){let b=h.outShape[1]*h.outShape[2],v=h.outShape[3],y=h.filterHeight*h.filterWidth*h.inShape[3];m.push({type:"int32",data:[b]},{type:"int32",data:[v]},{type:"int32",data:[y]})}return s.runWebGPUProgram(p,[r,a],r.dtype,m)}var hee={kernelName:Pr,backendName:"webgpu",kernelFunc:dee},pee=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.inShape,x.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=ey(this.dispatchLayout,this.outputShape),this.elementsPerThread=ny(this.dispatchLayout,this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getFlatIndex4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }

    ${ay(this.elementsPerThread,this.workGroupSize)}
  `}},fee=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;",this.workGroupSize=[64,1,1],this.outputShape=e.inShape,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Ce()} {
      ${Ee()}
      let coords = getOutputCoords(globalId, index);
      if (coordsInBounds4D(coords, uniforms.outShape)) {
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutput(coords[0], coords[1], coords[2], coords[3], dotProd);
      }
    }
  `}};function mee(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=s,d=T.convertConv2DDataFormat(c),h=T.computeConv2DInfo(o,a.shape,i,1,u,l,!1,d),p=[{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize,h.outHeight,h.outWidth,h.outChannels]}],f;if(X().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new fee(h);else{f=new pee(h);let m=h.inShape[1]*h.inShape[2],g=h.inShape[3],b=h.filterHeight*h.filterWidth*h.outChannels;p.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[b]})}return n.runWebGPUProgram(f,[r,a],"float32",p)}var gee={kernelName:Lr,backendName:"webgpu",kernelFunc:mee},bee=Qt({opType:it.COS}),yee={kernelName:zr,backendName:"webgpu",kernelFunc:bee},vee=Qt({opType:it.COSH}),xee={kernelName:Mr,backendName:"webgpu",kernelFunc:vee},wee=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32;",this.workGroupSize=[64,1,1];let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,i]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      fn writeResult(coords : vec4<i32>, value : f32) {
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutput(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
      ${Ce()} {
        ${Ee()}
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let coords = getOutputCoords(globalId, index);
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${o};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          writeResult(coords, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${i};
        if( in_x < 0.0 || in_x > ${t} ) {
          writeResult(coords, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          writeResult(coords, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          writeResult(coords,newValue);
        }
      }
    `}},kee=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:c}=s,l=new wee(r.shape[3],a.shape,i,u),d=[{type:"float32",data:[c]}];return n.runWebGPUProgram(l,[r,a,o],"float32",d)},Iee={kernelName:xo,backendName:"webgpu",kernelFunc:kee},See=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.uniforms="blockSize : i32;",this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.size=x.sizeFromShape(this.outputShape),this.dataFormat=t}getUserCode(){return`
      ${Ce()} {
        ${Ee()}
        if (index < uniforms.size) {
          let coords = getOutputCoords(globalId, index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputFlat(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Cee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],u=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],l=o==="NHWC"?r.shape[3]:r.shape[1],d=u*a,h=c*a,p=l/(a*a),f=o==="NHWC"?[i,d,h,p]:[i,p,d,h],m=[{type:"int32",data:[a]}],g=new See(f,o);return n.runWebGPUProgram(g,[r],r.dtype,m)}var Nee={kernelName:wo,backendName:"webgpu",kernelFunc:Cee},hC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),x.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let r=Vs(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByGlobalId(globalId, globalIndex);
          ${r}
        }`:e=`
        fn activation(a : vec4<f32>, globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
            ${r}
          }
        `,t="dotProd[i] = activation(dotProd[i], globalId, index);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasAtOutCoordsByCoords(coords);":"";return`
      ${e}

      ${Ce()} {
        ${Ee()}
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutput(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},pC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),x.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.activation}_${this.convInfo.outChannels/this.convInfo.inChannels}`}getUserCode(){let e=this.convInfo.outChannels/this.convInfo.inChannels,t="",n="";if(this.activation){let a=Vs(this.activation,!1);this.hasPreluActivation?t=`fn activation(a : f32, globalId : vec3<u32>, index : i32) -> f32 {
          let b = getPreluActivationWeightsAtOutCoordsByGlobalId(globalId, index);
          ${a}
        }`:t=`
          fn activation(a : f32, globalId : vec3<u32>, index : i32) -> f32 {
            ${a}
          }
        `,n="dotProd = activation(dotProd, globalId, index);"}let s=this.addBias?"dotProd = dotProd + getBiasAtOutCoordsByGlobalId(globalId, index);":"";return`
      ${t}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutput(batch, row, col, chan, value);
        }
      }

      ${Ce()} {
        ${Ee()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / ${e};
        let q = d2 - d1 * ${e};

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + ${this.convInfo.filterHeight} * uniforms.dilation[0];
        let inputColEnd = inputColStart + ${this.convInfo.filterWidth} * uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] && inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${s}
        ${n}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function Tee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:c}=s,l=u;l==null&&(l=[1,1]);let d=T.computeConv2DInfo(r.shape,a.shape,o,l,i,c,!0),h;d.batchSize===1&&d.inHeight===d.outHeight&&d.inWidth===d.outWidth&&d.strideHeight===1&&d.strideWidth===1&&d.filterHeight===d.filterWidth&&d.inChannels===d.outChannels&&d.filterHeight===3&&d.inChannels%4==0?h=new hC(d):h=new pC(d);let p=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]}];return n.runWebGPUProgram(h,[r,a],r.dtype,p)}var $ee={kernelName:Br,backendName:"webgpu",kernelFunc:Tee},fC=cn({opSnippet:St.MUL,cpuKernelImpl:dJ,supportsComplex:!0}),Aee={kernelName:sa,backendName:"webgpu",kernelFunc:fC},Eee=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="reduceSize : i32;",this.inputShape=[e.batchSize,e.inSize];let[s]=T.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=s.length===0?[1]:s,this.reductionFactor=2;let r=256,a=Math.min(Math.ceil(e.inSize/this.reductionFactor),r);this.workGroupSize=[a,1,1],this.dispatchLayout={x:[],y:this.outputShape.map((o,i)=>i)},this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.reduceType=t,this.shaderKey=`reduce_${t}_${n}`}getUserCode(){let e=this.workGroupSize[0]>1,t="",n="0.0";this.reduceType==="min"||this.reduceType==="max"?(t=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } elseif (candidate ${this.reduceType==="min"?"<":">"}
           bestValue)
           {  bestValue = candidate; }`,n="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?t=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(t=" bestValue = bestValue * candidate; ",n="1.0");let s=this.reduceType==="mean"?"setOutputFlat(flatOutputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputFlat(flatOutputIndex, bestValue);",r=`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `,a=`
       xBestValues[localId.x] = bestValue;
       ${this.reduceType==="sum"||this.reduceType==="mean"||this.reduceType==="prod"?`bestValue = ${n};`:" "}
       var currentSize = WorkGroupSize;
       for(; currentSize > 1;) {
         workgroupBarrier();
         for (var w = 0; w < ${this.reductionFactor}; w = w + 1) {
           let i = i32(localId.x) * ${this.reductionFactor} + w;
           if (i < currentSize) {
             let candidate = xBestValues[i];
             ${t}
           }
         }
         workgroupBarrier();
         xBestValues[localId.x] = bestValue;
         currentSize = DIV_CEIL(currentSize, ${this.reductionFactor});
         ${this.reduceType==="sum"||this.reduceType==="mean"||this.reduceType==="prod"?`if(currentSize > 1) { bestValue = ${n}; }`:""}
       }
       if (localId.x == 0u) {
         ${s}
       }
     `;return`
       fn DIV_CEIL(a : i32, b : i32) -> i32 {
        return ((a - 1) / b + 1);
       }
       let WorkGroupSize = ${this.workGroupSize[0]};
       ${e?r:""}
       fn getOffset(globalId : vec3<u32>, index : i32) -> i32 {
         let outputCoords = getOutputCoords(globalId, index);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
         return offset;
       }
       ${Ce()} {
         ${Ee()}
         let offset= getOffset(globalId, index);
         var bestValue = ${n};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(Length, WorkGroupSize);
         for (var w = 0; w < WorkPerThread; w = w + 1) {
           let i = i32(globalId.x) * WorkPerThread + w;
           if (i < Length) {
             let candidate = f32(x.numbers[offset + i]);
             ${t}
           }
         }
         let flatOutputIndex = i32(globalId.y);
         ${e?a:s}
       }
     `}};function Tl(e,t,n,s,r){let a=e.shape.length,o=[],i=x.parseAxisParam(t,e.shape),u=i,c=T.getAxesPermutation(u,a),l=e;c!=null&&(l=ro({inputs:{x:e},attrs:{perm:c},backend:r}),u=T.getInnerMostAxes(u.length,a),o.push(l)),T.assertAxesAreInnerMostDims(s,u,a);let[d,h]=T.computeOutAndReduceShapes(l.shape,u),p=d;n&&(p=T.expandShapeToKeepDim(d,i));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([l])){let m=r.tensorMap.get(l.dataId).values;switch(s){case"max":let g=uJ(m,x.sizeFromShape(h),p,e.dtype);f=r.makeTensorInfo(p,e.dtype,g);break;case"prod":let{outVals:b,outShape:v,outDtype:y}=fJ(l.shape,l.dtype,m,u);f=r.makeTensorInfo(v,y,b);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=x.sizeFromShape(h),b=x.sizeFromShape(l.shape)/m,v={windowSize:m,inSize:m,batchSize:b,outSize:1},y=s==="mean"?"float32":Oc(e.dtype),w=[{type:"int32",data:[m]}],k=new Eee(v,s,y),S=r.runWebGPUProgram(k,[l],y,w);o.push(S),f=Me({inputs:{x:S},attrs:{shape:p},backend:r})}return o.forEach(m=>r.disposeData(m.dataId)),f}function cy(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Tl(r,a,o,"sum",n)}var _ee={kernelName:fa,backendName:"webgpu",kernelFunc:cy};function Ree(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:u}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,u,a);let{path:c,steps:l}=T.getEinsumComputePath(i,u),d=l.length,h=null,p=o.length,f=[];for(let m=0;m<d;++m){for(let g of l[m]){let{permutationIndices:b,expandDims:v}=T.getEinsumPermutation(p,u[g]),y;T.isIdentityPermutation(b)?y=a[g]:(y=ro({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(y));let w=y.shape.slice();for(let k=0;k<v.length;++k)w.splice(v[k],0,1);x.arraysEqual(y.shape,w)||(y=Me({inputs:{x:y},backend:n,attrs:{shape:w}}),f.push(y)),h===null?h=y:(h=fC({inputs:{a:y,b:h},backend:n}),f.push(h))}m<d-1&&(c[m]>=0&&(h=cy({inputs:{x:h},backend:n,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(h)),p--)}for(let m of f)m!==h&&n.disposeData(m.dataId);return h}var Dee={kernelName:bc,backendName:"webgpu",kernelFunc:Ree},Fee=Qt({opType:it.ELU}),Oee={kernelName:Wr,backendName:"webgpu",kernelFunc:Fee},Pee=cn({opSnippet:St.EQUAL,dtype:"bool",cpuKernelImpl:QZ}),Lee={kernelName:ko,backendName:"webgpu",kernelFunc:Pee},mC=Qt({opType:it.EXP,cpuKernelImpl:ZZ,dtype:"float32"}),zee={kernelName:Ur,backendName:"webgpu",kernelFunc:mC};function dy(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),u=r;return r<0&&(x.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+r+1),i.splice(u,0,1),Me({inputs:{x:a},backend:s,attrs:{shape:i}})}var Mee={kernelName:Io,backendName:"webgpu",kernelFunc:dy},Bee=Qt({opType:it.EXPM1,cpuKernelImpl:JZ}),Vee={kernelName:So,backendName:"webgpu",kernelFunc:Bee},Wee=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32;",this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill",this.size=x.sizeFromShape(this.outputShape)}getUserCode(){return`
    ${Ce()} {
      ${Ee()}
      if (index < uniforms.size) {
        setOutputFlat(index, uniforms.value);
      }
    }
  `}};function Ui(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||x.inferDtype(r),a==="string"){let o=x.getArrayFromDType(a,x.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new Wee(s),i=[{type:"float32",data:[r]}];return t.runWebGPUProgram(o,[],a,i)}}var Uee={kernelName:vu,backendName:"webgpu",kernelFunc:Ui},Gee=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight",this.size=x.sizeFromShape(this.outputShape)}getUserCode(){return`
      ${Ce()} {
        ${Ee()}

        if (index < uniforms.size) {
          let coords = getOutputCoords(globalId, index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputFlat(index, outputValue);
        }
      }
    `}},Hee={kernelName:Co,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new Gee(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},qee=Qt({opType:it.FLOOR,cpuKernelImpl:eJ}),jee={kernelName:Gr,backendName:"webgpu",kernelFunc:qee},Kee=cn({opSnippet:St.INT_DIV,dtype:"int32"}),Xee={kernelName:Hr,backendName:"webgpu",kernelFunc:Kee},Yee=(e,t,n,s,r)=>{let a=[s,...n];return r&&a.push(r),e.createBindGroup({layout:t,entries:a.map((o,i)=>({binding:i,resource:o}))})},gC=(e,t,n,s,r,a=!1)=>{let o={dtype:r.dtype,shape:r.shape},i=TQ(s,o,t,a),u=e.createShaderModule({code:i});return e.createComputePipeline({layout:n,compute:{module:u,entryPoint:"main"}})};function bC(e,t,n,s="",r=""){return(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(o=>o.length).join(",")+n.join(",")+e.variableNames.join(",")+s+r+e.shaderKey}function yC(e){let{externalImage:t,backend:n,attrs:s,outShape:r,useImport:a}=e,{numChannels:o}=s,i=x.sizeFromShape(r),u=x.computeStrides(r),c=n.makeTensorInfo(r,"int32"),l=n.getFromPixelsProgram(a?"import":"copyExternal");l.updateOutputShape(r);let d=[c.shape],h=[c.dtype,a?"import":"copyExternal"],p=bC(l,d,h),f=l.getLayout(n.device),m=n.getAndSavePipeline(p,()=>gC(n.device,l,f.pipelineLayout,[],c,!0));l.setPipeline(m),a||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:l.makeInputTexture(n.device,r[1],r[0])},[r[1],r[0]]);let g=n.tensorMap.get(c.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);let b=[i,o,...u,...l.dispatch];l.setUniform(n.device,b);let v;if(a){let y={source:t};v=n.device.importExternalTexture(y)}else v=l.inputTexture.createView();return n.runFromPixelsProgram(l,g.bufferInfo.buffer,f,v,c.dataId),c}var Qee={kernelName:Nc,backendName:"webgpu",kernelFunc:Zee},Gi;function Zee(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,u=typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&r instanceof OffscreenCanvas,c=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[l,d]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[d,l,a];if(X().getBool("WEBGPU_USE_IMPORT")&&o)return yC({externalImage:r,backend:n,attrs:s,outShape:h,useImport:!0});if((o||i)&&(Gi==null&&(Gi=document.createElement("canvas").getContext("2d")),Gi.canvas.width=l,Gi.canvas.height=d,Gi.drawImage(r,0,0,l,d),r=Gi.canvas),c||u||o||i)return yC({externalImage:r,backend:n,attrs:s,outShape:h,useImport:!1});let p=r.data,f=p;if(a!=null&&a!==4){f=new Uint8Array(r.width*r.height*a);let b=p.length,v=0;for(let y=0;y<b;y++)y%4<a&&(f[v++]=p[y])}let m=n.makeTensorInfo(h,"int32"),g=n.tensorMap.get(m.dataId);return g.values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}var Jee=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32;",this.workGroupSize=[128,1,1],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetAtOutCoordsByGlobalId(globalId, index)");let t="1.0";this.scaleShape!=null&&(t="getScaleAtOutCoordsByGlobalId(globalId, index)");let n=this.outputShape.length,s=Et(n),r="setOutput(coords[0], coords[1], coords[2], coords[3], value);";return n===2&&(r="setOutput(coords[0], coords[1], value);"),n===3&&(r="setOutput(coords[0], coords[1], coords[2], value);"),`
      fn writeResult(coords : ${s}, value : f32) {
        if (coordsInBounds${n}D(coords, uniforms.outShape)) {
          ${r}
        }
      }
      ${Ce()} {
        ${Ee()}
        let coords = getOutputCoords(globalId, index);
        let xValue = getXAtOutCoordsByGlobalId(globalId, index);
        let meanValue = getMeanAtOutCoordsByGlobalId(globalId, index);
        let varianValue = getVarianceAtOutCoordsByGlobalId(globalId, index);
        let offsetValue = ${e};
        let scaleValue = ${t};
        let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
        writeResult(coords,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
      }
  `}},ete={kernelName:qr,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:o,variance:i}=e,{varianceEpsilon:u}=t,c=n,l=[s,o,i],d=null;a!=null&&(d=a.shape,l.push(a));let h=null;r!=null&&(h=r.shape,l.push(r));let p=new Jee(s.shape,o.shape,i.shape,d,h),f=[{type:"float32",data:[u]}];return c.runWebGPUProgram(p,l,s.dtype,f)}};function tte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=T.convertConv2DDataFormat(l),g=T.computeConv2DInfo(r.shape,a.shape,u,d,c,h,!1,m),b=o!=null,v=i!=null,y;if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))return uC({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});let w=X().getBool("WEBGPU_USE_NAIVE_CONV2D"),k=g.inChannels%4==0&&g.outChannels%4==0,S=[g.padInfo.top,g.padInfo.left],N=[{type:"int32",data:[g.filterHeight,g.filterWidth]},{type:"int32",data:[...S]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]}];if(w)y=new dC(g,b,p,v);else{k?y=new lC(g,b,p,v):y=new cC(g,b,p,v);let _=g.outShape[1]*g.outShape[2],O=g.outShape[3],R=g.filterHeight*g.filterWidth*g.inShape[3];N.push({type:"int32",data:[_]},{type:"int32",data:[O]},{type:"int32",data:[R]})}let A=[r,a];return b&&A.push(o),v&&A.push(i),n.runWebGPUProgram(y,A,r.dtype,N)}var nte={kernelName:ka,backendName:"webgpu",kernelFunc:tte};function ste(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d,activation:h}=s,p=l;p==null&&(p=[1,1]),x.assert(T.eitherStridesOrDilationsAreOne(u,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${p}'`);let f=T.computeConv2DInfo(r.shape,a.shape,u,p,c,d,!0),m=[r,a],g=o!=null,b=i!=null;g&&m.push(o),b&&m.push(i);let v;f.batchSize===1&&f.inHeight===f.outHeight&&f.inWidth===f.outWidth&&f.strideHeight===1&&f.strideWidth===1&&f.filterHeight===f.filterWidth&&f.inChannels===f.outChannels&&f.filterHeight===3&&f.inChannels%4==0?v=new hC(f,g,h,b):v=new pC(f,g,h,b);let y=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]}];return n.runWebGPUProgram(v,m,"float32",y)}var rte={kernelName:Ia,backendName:"webgpu",kernelFunc:ste},ate=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.outputShape=t,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.size=x.sizeFromShape(this.outputShape),this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${Et(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Ce()} {
          ${Ee()}
          let coords = getOutputCoords(globalId, index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }
          if (index < uniforms.size) {
            setOutputFlat(index, getA(flattenIndex, coords[1]));
          }
        }
      `}};function ote(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=x.sizeFromShape(s.shape),[u,c,l,d]=T.prepareAndValidate(s,r),h=Me({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),p=Me({inputs:{x:s},backend:n,attrs:{shape:[x.sizeFromShape(s.shape)/l,l]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let v=n.readSync(r.dataId),y=n.bufferSync(s),w=tJ(v,y,s.dtype,c,o,l,d,s.shape,i);return n.makeTensorInfo(u,s.dtype,w.values)}let f=new ate(o,[c,l]),m=[{type:"int32",data:[o]},{type:"int32",data:d}],g=n.runWebGPUProgram(f,[p,h],p.dtype,m),b=Me({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeData(h.dataId),n.disposeData(p.dataId),n.disposeData(g.dataId),b}var ite={kernelName:To,backendName:"webgpu",kernelFunc:ote},ute=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather",this.size=x.sizeFromShape(this.outputShape)}getUserCode(){let e=lte(this.aShape,"i32");return`
      ${Ce()} {
        ${Ee()}
        let resRC = getOutputCoords(globalId, index);
        if (index < uniforms.size) {
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function lte(e,t="int"){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push(`${t}(getIndices(resRC.x, resRC.z))`):s.push(`${n[r]}`);return s.join()}function vC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,u=x.parseAxisParam(o,r.shape)[0],c=T.segment_util.collectGatherOpShapeInfo(r,a,u,i),l=x.sizeFromShape(a.shape),d=[],h=Me({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=Me({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});d.push(h),d.push(p);let f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let y=n.tensorMap.get(p.dataId).values,w=_e(p.shape,p.dtype,y),S=n.tensorMap.get(h.dataId).values,N=_e(h.shape,h.dtype,S),A=nJ(N,w,f);return d.forEach(_=>n.disposeData(_.dataId)),n.makeTensorInfo(c.outputShape,A.dtype,A.values)}let m=new ute(h.shape,f),g=n.runWebGPUProgram(m,[h,p],h.dtype);d.push(g);let b=Me({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return d.forEach(v=>n.disposeData(v.dataId)),b}var cte={kernelName:No,backendName:"webgpu",kernelFunc:vC},dte=cn({opSnippet:St.GREATER,cpuKernelImpl:rJ,dtype:"bool"}),hte={kernelName:$o,backendName:"webgpu",kernelFunc:dte},pte=cn({opSnippet:St.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:sJ}),fte={kernelName:jr,backendName:"webgpu",kernelFunc:pte},mte=cn({opSnippet:St.LESS,dtype:"bool",cpuKernelImpl:oJ}),gte={kernelName:Eo,backendName:"webgpu",kernelFunc:mte},bte=cn({opSnippet:St.LESS_EQUAL,dtype:"bool",cpuKernelImpl:aJ}),yte={kernelName:_o,backendName:"webgpu",kernelFunc:bte},vte=Qt({opType:it.LOG,cpuKernelImpl:iJ}),xte={kernelName:Xr,backendName:"webgpu",kernelFunc:vte},wte=cn({opSnippet:St.LOGICAL_AND,dtype:"bool"}),kte={kernelName:Ro,backendName:"webgpu",kernelFunc:wte},Ite=Qt({opType:it.LOGICAL_NOT}),Ste={kernelName:Su,backendName:"webgpu",kernelFunc:Ite};function xC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s;return Tl(r,a,o,"max",n)}var Cte={kernelName:Yr,backendName:"webgpu",kernelFunc:xC},Nte=cn({opSnippet:St.MAX,cpuKernelImpl:lJ}),Tte={kernelName:Qr,backendName:"webgpu",kernelFunc:Nte};function $te(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=s,c=1,l=T.computePool2DInfo(r.shape,a,o,c,i,u),d,h=[];if(l.filterHeight===1&&l.filterWidth===1){if(x.arraysEqual(l.inShape,l.outShape))return Kn({inputs:{x:r},backend:n});d=new aC(l),h.push({type:"int32",data:[l.strideHeight,l.strideWidth]})}else d=new rC(l,"max"),h.push({type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]});return n.runWebGPUProgram(d,[r],r.dtype,h)}var Ate={kernelName:Zr,backendName:"webgpu",kernelFunc:$te};function Ete(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:o}=s;return Tl(r,o,a,"mean",n)}var _te={kernelName:Jr,backendName:"webgpu",kernelFunc:Ete};function Rte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Tl(r,a,o,"min",n)}var Dte={kernelName:ea,backendName:"webgpu",kernelFunc:Rte},Fte=cn({opSnippet:St.MIN,cpuKernelImpl:cJ}),Ote={kernelName:ta,backendName:"webgpu",kernelFunc:Fte},Pte=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`,this.size=x.sizeFromShape(this.outputShape)}getUserCode(){let e=this.xShape.length,t=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),n=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=Et(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ce()} {
        ${Ee()}
        let start = ${o}(${t});
        let end = ${o}(${n});
        var outC = getOutputCoords(globalId, index);
        if (index < uniforms.size) {
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } elseif(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputFlat(index, getX(${i}));
        }
      }
    `}},Lte={kernelName:na,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,o=n,i=r.map(l=>({type:"int32",data:[l[0],l[1]]})),u=new Pte(s.shape,r,a);return o.runWebGPUProgram(u,[s],s.dtype,i)}};function zte(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[o,i]=hJ(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r=new hh(s.shape,it.NEG);return n.runWebGPUProgram(r,[s],s.dtype)}var Mte={kernelName:Do,backendName:"webgpu",kernelFunc:zte};function Bte(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=s,c=n.readSync(r.dataId),l=n.readSync(a.dataId),{selectedIndices:d}=ss.nonMaxSuppressionV3Impl(c,l,o,i,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Vte={kernelName:Oo,backendName:"webgpu",kernelFunc:Bte};function Wte(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=s,l=n.readSync(r.dataId),d=n.readSync(a.dataId),h=o,p=i,f=u,m=c,{selectedIndices:g,selectedScores:b}=ss.nonMaxSuppressionV5Impl(l,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var Ute={kernelName:Po,backendName:"webgpu",kernelFunc:Wte};function fh(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Nl({inputs:{input:s},backend:n}),a=fh({inputs:{x:r},backend:n}),o=ph({inputs:{input:s},backend:n}),i=fh({inputs:{x:o},backend:n}),u=Vi({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),u}else return Ui({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Gte={kernelName:ti,backendName:"webgpu",kernelFunc:fh};function wC(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Nl({inputs:{input:s},backend:n}),a=wC({inputs:{x:r},backend:n}),o=ph({inputs:{input:s},backend:n}),i=fh({inputs:{x:o},backend:n}),u=Vi({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),u}else return Ui({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Hte={kernelName:Lo,backendName:"webgpu",kernelFunc:wC};function qte(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return dy({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(l=>{x.assertShapesMatch(a,l.shape,"All tensors passed to stack must have matching shapes"),x.assert(o===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(l=>{let d=dy({inputs:{input:l},backend:n,attrs:{dim:r}});return i.push(d),d}),c=iC({inputs:u,backend:n,attrs:{axis:r}});return i.forEach(l=>n.disposeData(l.dataId)),c}var jte={kernelName:Mo,backendName:"webgpu",kernelFunc:qte},Kte=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32;",this.workGroupSize=[64,1,1],this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad",this.size=x.sizeFromShape(this.outputShape)}getUserCode(){let e=this.xShape.length,t=Et(e),n=this.xShape.map((l,d)=>`uniforms.pad${d}[0]`).join(","),s=this.xShape.map((l,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,o=e>1?"any(outC < start)":"outC < start",i=e>1?"any(outC >= end)":"outC >= end",u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ce()} {
        ${Ee()}
        let start = ${r};
        let end = ${a};
        if (index < uniforms.size) {
          let outC = getOutputCoords(globalId, index);

          if (${o} || ${i}) {
            setOutputFlat(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputFlat(index, getX(${u}));
          }
        }
      }
    `}},kC=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(a.every(c=>x.arraysEqual(c,[0,0])))return Kn({inputs:{x:r},backend:n});if(x.sizeFromShape(r.shape)===0){let c=a.map((l,d)=>l[0]+r.shape[d]+l[1]);return Ui({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=[{type:"float32",data:[o]}];a.map(c=>i.push({type:"int32",data:[c[0],c[1]]}));let u=new Kte(r.shape,a);return n.runWebGPUProgram(u,[r],r.dtype,i)},Xte={kernelName:ra,backendName:"webgpu",kernelFunc:kC},Yte=cn({opSnippet:St.POW}),Qte={kernelName:aa,backendName:"webgpu",kernelFunc:Yte};function Zte(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new tC(St.PRELU,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var Jte={kernelName:oa,backendName:"webgpu",kernelFunc:Zte};function ene(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Tl(r,a,o,"prod",n)}var tne={kernelName:Bo,backendName:"webgpu",kernelFunc:ene},nne=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=mJ(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},sne={kernelName:Tu,backendName:"webgpu",kernelFunc:nne},IC=cn({opSnippet:St.DIV}),rne={kernelName:Vr,backendName:"webgpu",kernelFunc:IC},ane=Qt({opType:it.RELU}),one={kernelName:ia,backendName:"webgpu",kernelFunc:ane},ine=Qt({opType:it.RELU6}),une={kernelName:la,backendName:"webgpu",kernelFunc:ine},lne=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.alignCorners=s,this.halfPixelCenters=r,this.shaderKey=`resizeBilinear_${s}_${r}_${this.outputShape[1]>1}_${this.outputShape[2]>1}`}getUserCode(){let e=this.alignCorners&&this.outputShape[1]>1,t=this.alignCorners&&this.outputShape[2]>1;return`
      ${Ce()} {
        ${Ee()}
        let coords = getOutputCoords(globalId, index);
        if (all(coords < uniforms.outShape)) {
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            ${e?"f32(uniforms.xShape.y) - 1.0":"f32(uniforms.xShape.y)"},
            ${t?"f32(uniforms.xShape.z) - 1.0":"f32(uniforms.xShape.z)"});

          let effectiveOutSize = vec2<f32>(
            ${e?"f32(uniforms.outShape.y) - 1.0":"f32(uniforms.outShape.y)"},
            ${t?"f32(uniforms.outShape.z) - 1.0":"f32(uniforms.outShape.z)"});

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${this.halfPixelCenters?"(vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC - vec2<f32>(0.5)":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC"};

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutput(b, coords[1], coords[2], d, newValue);
        }
      }
    `}};function cne(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:o,halfPixelCenters:i}=s,[u,c]=o,l=new lne(r.shape,u,c,a,i);return n.runWebGPUProgram(l,[r],"float32")}var dne={kernelName:ua,backendName:"webgpu",kernelFunc:cne},hne=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.alignCorners=s,this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${s}_${this.outputShape[1]>1}_${this.outputShape[2]>1}_${r}`}getUserCode(){let e=this.alignCorners?"0.5":"0.0",t;this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC";let n=this.alignCorners&&this.outputShape[1]>1,s=this.alignCorners&&this.outputShape[2]>1;return`
      ${Ce()} {
        ${Ee()}
        let coords = getOutputCoords(globalId, index);
        if (all(coords < uniforms.outShape)) {
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            ${n?"f32(uniforms.xShape.y) - 1.0":"f32(uniforms.xShape.y)"},
            ${s?"f32(uniforms.xShape.z) - 1.0":"f32(uniforms.xShape.z)"});

          let effectiveOutSize = vec2<f32>(
            ${n?"f32(uniforms.outShape.y) - 1.0":"f32(uniforms.outShape.y)"},
            ${s?"f32(uniforms.outShape.z) - 1.0":"f32(uniforms.outShape.z)"});

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${e})));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutput(b, coords[1], coords[2], d, newValue);
        }
      }
    `}};function pne(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[u,c]=i,l=new hne(r.shape,u,c,a,o);return n.runWebGPUProgram(l,[r],r.dtype)}var fne={kernelName:Au,backendName:"webgpu",kernelFunc:pne},mne=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.size=x.sizeFromShape(this.outputShape),this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Ce()} {
          ${Ee()}

          if (index < uniforms.size) {
            let coords = getOutputCoords(globalId, index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputFlat(index, outputValue);
          }
        }
      `}},gne={kernelName:ni,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,u=new mne(s.shape,a),[c,l]=T.getImageCenter(o,s.shape[1],s.shape[2]),d=[{type:"float32",data:[c]},{type:"float32",data:[l]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?d.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):d.push({type:"float32",data:a}),i.runWebGPUProgram(u,[s],s.dtype,d)}},bne=Qt({opType:it.RSQRT,cpuKernelImpl:gJ}),yne={kernelName:ca,backendName:"webgpu",kernelFunc:bne},vne=class{constructor(e,t,n,s,r,a,o){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.dispatchLayout=ze(e),this.dispatch=Ne(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${o}`,this.size=x.sizeFromShape(e);let i=Et(r.length);this.uniforms=`sliceDim : i32; strides: ${i};`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="",a="";this.updatesRank===1?(s="coords[0]",r="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(s="coords[0], coords[1]",r="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let o=`getUpdates(${s})`,i=this.type==="int32"?"ignore(atomicAdd(&(result.numbers[flatIndex]), i32(updateValue)));":`
     var oldI32 = atomicLoad(&(result.numbers[flatIndex]));
     var assumed = oldI32 - 1;
     for (; assumed != oldI32;) {
       assumed = oldI32;
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       oldI32 = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32)[0];
     }
     `;return`
    ${a}

      ${Ce()} {
        ${Ee()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${o};
          let flatIndex = getOutputFlatIndex(${r});

         ${i}
        }
      }`}};function xne(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=T.calculateShapes(a,r,o),h=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let p=Me({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),f=Me({inputs:{x:a},backend:n,attrs:{shape:[u,c]}}),m=f.dtype,g=Ui({backend:n,attrs:{shape:h,value:0,dtype:m}}),b=[{type:"int32",data:[i]},{type:"int32",data:l}],v=new vne(f.shape,i,p.shape.length,f.shape.length,l,h,m),y=n.runWebGPUProgram(v,[f,p],m,b,g),w=Me({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(y.dataId),w}var wne={kernelName:Go,backendName:"webgpu",kernelFunc:xne},kne=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.outputShape=t,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select",this.size=x.sizeFromShape(this.outputShape)}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${s[o]}`),o<this.cRank&&r.push(`${s[o]}`);e=r.join(),t=a.join()}return`
      ${Ce()} {
        ${Ee()}
        if (index < uniforms.size) {
          let resRC = getOutputCoords(globalId, index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputFlat(index, getA(${t}));
          } else {
            setOutputFlat(index, getB(${t}));
          }
        }
      }
    `}};function Ine(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new kne(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(o,[s,r,a],mn(r.dtype,a.dtype))}var Sne={kernelName:Ho,backendName:"webgpu",kernelFunc:Ine},Cne=Qt({opType:it.SIGMOID}),Nne={kernelName:ha,backendName:"webgpu",kernelFunc:Cne},Tne=Qt({opType:it.SIN}),$ne={kernelName:da,backendName:"webgpu",kernelFunc:Tne},Ane=Qt({opType:it.SINH}),Ene={kernelName:jo,backendName:"webgpu",kernelFunc:Ane},SC=cn({opSnippet:St.SUB,cpuKernelImpl:wJ,supportsComplex:!0}),_ne={kernelName:ba,backendName:"webgpu",kernelFunc:SC};function Rne(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=x.parseAxisParam([a],r.shape),i=xC({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=T.expandShapeToKeepDim(i.shape,o),c=Me({inputs:{x:i},backend:n,attrs:{shape:u}}),l=SC({inputs:{a:r,b:c},backend:n}),d=mC({inputs:{x:l},backend:n}),h=cy({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),p=Me({inputs:{x:h},backend:n,attrs:{shape:u}}),f=IC({inputs:{a:d,b:p},backend:n});return n.disposeData(i.dataId),n.disposeData(c.dataId),n.disposeData(l.dataId),n.disposeData(d.dataId),n.disposeData(h.dataId),n.disposeData(p.dataId),f}var Dne={kernelName:ma,backendName:"webgpu",kernelFunc:Rne},Fne=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;x.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((b,v)=>b*v),u=[[0,0]];u.push(...o);for(let b=1+a.length;b<r.shape.length;++b)u.push([0,0]);let c=[],l=kC({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),d=T.getReshaped(l.shape,a,i,!1),h=T.getPermuted(d.length,a.length,!1),p=T.getReshapedPermuted(l.shape,a,i,!1),f=Me({inputs:{x:l},backend:n,attrs:{shape:d}}),m=ro({inputs:{x:f},backend:n,attrs:{perm:h}}),g=Me({inputs:{x:m},backend:n,attrs:{shape:p}});return c.push(l),c.push(f),c.push(m),c.forEach(b=>n.disposeData(b.dataId)),g},One={kernelName:Ko,backendName:"webgpu",kernelFunc:Fne},Pne=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.outputShape=a,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let i=t>1;this.shaderKey=`scatter_${n}_${s}_${i}`,this.size=x.sizeFromShape(this.outputShape);let u=Et(r.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${u};`;let c="";n===1?c="i":n===2&&(c="i, j"),this.indicesSnippet=`getIndices(${c})`;let l="";s===1?l="i":s===2&&(l="i, coords[1]"),this.updatesSnippet=`getUpdates(${l})`,this.strideString=i?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Ce()} {
        ${Ee()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromFlatIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputFlat(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function Lne(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:u,numUpdates:c,strides:l,outputSize:d}=T.calculateShapes(a,r,i),h=!1,p=[{type:"int32",data:[c]},{type:"int32",data:[u]},{type:"int32",data:l}],f=new Pne(c,u,r.shape.length,a.shape.length,l,[d,1],h),m=n.runWebGPUProgram(f,[a,r,o],a.dtype,p),g=Me({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),g}var zne={kernelName:Ic,backendName:"webgpu",kernelFunc:Lne};function Mne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=x.parseAxisParam(o,r.shape)[0],u=T.prepareSplitSize(r,a,i),c=r.shape.length,l=new Array(c).fill(0),d=r.shape.slice();return u.map(h=>{let p=[...d];p[i]=h;let f=Wi({inputs:{x:r},backend:n,attrs:{begin:l,size:p}});return l[i]+=h,f})}var Bne={kernelName:Xo,backendName:"webgpu",kernelFunc:Mne},Vne=Qt({opType:it.SQRT}),Wne={kernelName:pa,backendName:"webgpu",kernelFunc:Vne},Une={kernelName:Du,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new hh(n.shape,it.SQUARE);return s.runWebGPUProgram(r,[n],n.dtype)}},Gne=cn({opSnippet:St.SQUARED_DIFFERENCE}),Hne={kernelName:ga,backendName:"webgpu",kernelFunc:Gne},qne=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Et(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice",this.size=x.sizeFromShape(this.outputShape)}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Ce()} {
         ${Ee()}
         if (index < uniforms.size) {
           let coords = getOutputCoords(globalId, index);
           setOutputFlat(index, getX(${t}));
         }
       }
     `}};function jne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:v,end:y,strides:w}=It.sliceInfo(r.shape,a,o,i,u,c,l,d,h),k;if(m)k=Me({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){x.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=It.computeOutShape(v,y,w),N=Wi({inputs:{x:r},backend:n,attrs:{begin:v,size:S}});k=Me({inputs:{x:N},backend:n,attrs:{shape:f}}),n.disposeData(N)}else if(n.shouldExecuteOnCPU([r])){let N=n.readSync(r.dataId),A=_e(r.shape,r.dtype,N),_=vJ(p,A,w,v);k=n.makeTensorInfo(f,r.dtype,_.values)}else{let N=new qne(p),A=[{type:"int32",data:v},{type:"int32",data:w}];k=n.runWebGPUProgram(N,[r],r.dtype,A)}return k}var Kne={kernelName:Yo,backendName:"webgpu",kernelFunc:jne};function Xne(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=s,{data:l,dataSplits:d}=t,h=n.readSync(l.dataId),p=n.readSync(d.dataId),[f,m]=xJ(h,p,r,a,o,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var Yne={kernelName:Sc,backendName:"webgpu",kernelFunc:Xne},Qne=Qt({opType:it.TANH}),Zne={kernelName:ya,backendName:"webgpu",kernelFunc:Qne},Jne=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.size=x.sizeFromShape(this.outputShape),this.shaderKey="tile"}getUserCode(){let e=ese(this.rank,"uniforms.");return`
      ${Ce()} {
        ${Ee()}
        if (index < uniforms.size) {
          let resRC = getOutputCoords(globalId, index);
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function ese(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function tse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let u=n.readSync(r.dataId),c=r.dtype==="string"?u.map(h=>x.decodeString(h)):u,l=_e(r.shape,r.dtype,c),d=kJ(l,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new Jne(r.shape,a);return n.runWebGPUProgram(o,[r],r.dtype)}var nse={kernelName:Js,backendName:"webgpu",kernelFunc:tse},sse=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap",this.size=x.sizeFromShape(this.outputShape)}getUserCode(){return`
        ${Ce()} {
          ${Ee()}
          if (index < uniforms.size) {
            let outC = getOutputCoords(globalId, index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}},rse=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge",this.size=x.sizeFromShape(this.outputShape)}getUserCode(){return`
        ${Ce()} {
          ${Ee()}
          if (index < uniforms.size) {
            let outC = getOutputCoords(globalId, index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}};function Hi(e,t){t!==null&&e.disposeData(t.dataId)}function CC(e){let t=1;for(;t<e;)t*=2;return t}function ase(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=r.shape,u=i[i.length-1];if(n.shouldExecuteOnCPU([r])){let k=n.readSync(r.dataId),[S,N]=IJ(k,i,r.dtype,a,o);return[n.makeTensorInfo(S.shape,S.dtype,S.values),n.makeTensorInfo(N.shape,N.dtype,N.values)]}if(a===0)return i[i.length-1]=0,[n.makeTensorInfo(i,r.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(u===1)return[r,Ui({attrs:{shape:i,dtype:"int32",value:0},backend:n})];let l=x.sizeFromShape(i)/u,d=Me({inputs:{x:r},attrs:{shape:[l,u]},backend:n}),h=CC(a),p=CC(u),f=null,m=()=>f===null?[d,d]:[d,f],g=(k,S,N)=>{let A=m(),_=new sse(N),R=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[S]}],D=f;f=n.runWebGPUProgram(_,A,"int32",R),Hi(n,D)};for(let k=1;k<h;k*=2){let S=k*2;for(let N=k;N>=1;N/=2)g(S,N,[l,p])}for(let k=p;k>h;k/=2){let S=m(),N=new rse([l,k/2]),_=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[h]}],O=f;f=n.runWebGPUProgram(N,S,"int32",_),Hi(n,O);let R=h/2,D=R*2;for(let C=R;C>=1;C/=2)g(D,C,f.shape)}let b=f;f=Wi({inputs:{x:f},backend:n,attrs:{begin:0,size:[l,a]}}),Hi(n,b);let v=vC({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});Hi(n,d);let y=i.slice(0,-1);y.push(a),b=f,f=Me({inputs:{x:f},attrs:{shape:y},backend:n}),Hi(n,b);let w=v;return v=Me({inputs:{x:v},attrs:{shape:y},backend:n}),Hi(n,w),[v,f]}var ose={kernelName:Zo,backendName:"webgpu",kernelFunc:ase},ise=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;",this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Ce()} {
            ${Ee()}
            let coords = getOutputCoords(globalId, index);
            if (coordsInBounds4D(coords, uniforms.outShape)) {
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(coords[0], coords[1], coords[2], coords[3], outputValue);
            }
          }
        `}};function use(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=s,[l,d,h,p]=r.shape,[f,m]=c??[d,h],g=[l,f,m,p],b=new ise(g),v=o==="nearest"?1:2,y;switch(i){case"constant":y=1;break;case"reflect":y=2;break;case"wrap":y=3;break;case"nearest":y=4;break;default:y=1;break}let w=[{type:"int32",data:[v]},{type:"int32",data:[y]},{type:"float32",data:[u]}];return n.runWebGPUProgram(b,[r,a],"float32",w)}var lse={kernelName:Jo,backendName:"webgpu",kernelFunc:use};function cse(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,u=r.shape[a],c=new Array(i-1),l=0;for(let m=0;m<i;m++)m!==a&&(c[l++]=o.shape[m]);let d=[],h=new Array(i).fill(0),p=o.shape.slice();p[a]=1;let f=new Array(u);for(let m=0;m<f.length;m++){h[a]=m;let g=Wi({inputs:{x:o},backend:n,attrs:{begin:h,size:p}}),b=Me({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=b,d.push(g)}return d.forEach(m=>n.disposeData(m.dataId)),f}var dse={kernelName:ei,backendName:"webgpu",kernelFunc:cse},hse=[UZ,NJ,$J,_J,LJ,MJ,VJ,UJ,KJ,ZJ,eee,ree,jZ,uee,hee,gee,yee,xee,Iee,Nee,$ee,Dee,Oee,Lee,Mee,zee,Vee,Uee,Hee,Qee,jee,Xee,ete,nte,rte,ite,cte,hte,fte,qZ,oee,gte,yte,xte,kte,Ste,Cte,Tte,Ate,_te,Dte,Ote,Lte,Aee,Mte,Vte,Ute,XJ,Hte,jte,Xte,Jte,tne,Qte,sne,YJ,rne,one,une,VZ,dne,fne,gne,yne,wne,Sne,Nne,$ne,Ene,qJ,Kne,Yne,Dne,One,Bne,zne,Wne,Une,Hne,_ne,_ee,Zne,nse,ose,lse,OJ,dse,Gte];for(let e of hse)Ac(e);var pse=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t){let n=NC(e,t);if(this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.usedBuffers.has(n)||this.usedBuffers.set(n,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(n).length>0){this.numFreeBuffers--;let r=this.freeBuffers.get(n).shift();return this.usedBuffers.get(n).push(r),r}this.numBytesAllocated+=e;let s=this.device.createBuffer({size:e,usage:t});return this.usedBuffers.get(n).push(s),s}releaseBuffer(e,t,n){if(this.freeBuffers==null)return;let s=NC(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}reset(){this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}dispose(){this.freeBuffers==null&&this.usedBuffers==null||(this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=null,this.usedBuffers=null,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0)}};function NC(e,t){return`${e}_${t}`}var TC=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){x.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=ze(this.outputShape),this.dispatch=Ne(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      [[binding(1), group(0)]] var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Ce()} {
        ${Ee()}
        let flatIndexBase = index * uniforms.numChannels;
        let coords = getCoordsFromFlatIndex(flatIndexBase);
        let values = ${e};
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,s)=>n===this.lastUniformData[s])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},fse=class extends TC{constructor(){super(...arguments);this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},mse=X().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),$C=class extends au{constructor(e,t=!1){super();if(this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!ry())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new pse(this.device),this.tensorMap=new ac(this,Ds()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),X().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return $C.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:s}=this.tensorMap.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()},r=x.sizeFromShape(t)*sy(n);return n==="bool"&&e instanceof Uint8Array&&(e=Int32Array.from(e)),this.tensorMap.set(s,{dtype:n,values:e,bufferInfo:{byteSize:r,usage:this.defaultGpuBufferUsage()},refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=x.sizeFromShape(n)*sy(s);this.tensorMap.set(e,{dtype:s,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new TC),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new fse),this.fromPixelImportProgram;default:x.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),X().getBool("WEBGPU_USE_PROFILE_TOOL")&&(x.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],o=r[1];s=T.mergeRealAndImagArrays(a,o)}else{let r=await this.getBufferData(t);s=X0(r,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>x.decodeString(s))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return _e(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=x.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=x.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(r);return o.kernelMs=x.sum(i),o.getExtraProfileInfo=()=>i.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&x.isString(n[0])){let r=n.map(a=>x.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values&&this.queue.writeBuffer(t.bufferInfo.buffer,0,t.values))}makeUniformsDataView(e){let t=this.acquireBuffer(e.byteLength,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(t,0,e),{offset:0,size:e.byteLength,buffer:t}}arrayToDataView(e,t){let n=4,s=new DataView(new ArrayBuffer(t*n)),r=0;return e.forEach(a=>{let o=a.data;if(a.type!=="int32"&&a.type!=="float32"&&a.type!=="uint32")throw new Error(`${a.type} not supported!`);a.type==="int32"?o.forEach(i=>{s.setInt32(r*n,i,!0),r++}):a.type==="uint32"?o.forEach(i=>{s.setUint32(r*n,i,!0),r++}):o.forEach(i=>{s.setFloat32(r*n,i,!0),r++})}),s}computePadding(e){let t=0,n=0,s=0,r=[];return e.forEach((a,o)=>{a.data.length===0&&(a.data=[1]);let i;switch(a.data.length){case 0:i=1;break;case 1:i=1;break;case 2:i=2;break;case 3:i=4;break;case 4:i=4;break;default:x.assert(!1,()=>`Unsupported ${a.data.length}D shape`)}n=Math.ceil(t/i)*i-t;for(let u=0;u<n;++u)r.push({type:a.type,data:[0]}),s++;r.push({type:a.type,data:a.data}),s=s+a.data.length,t+=a.data.length+n}),this.arrayToDataView(r,s)}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let r=0;r<e;r++)t.push({binding:r+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,s,r){if(!r){if(r=this.makeTensorInfo(e.outputShape,n),x.sizeFromShape(r.shape)===0){let A=this.tensorMap.get(r.dataId);return A.values=x.getTypedArrayFromDType(r.dtype,0),r}this.uploadToGPU(r.dataId)}let a=[{type:"float32",data:[NaN]}],o=t.concat(r).map(A=>A.shape),i="int32";o.map(A=>{a.push({type:i,data:A})});let u=x.computeStrides(r.shape);a.push({type:i,data:u}),e.size!=null&&a.push({type:i,data:[e.size]}),a.push({type:"uint32",data:e.dispatch}),s&&(a=[...a,...s]);let c=null,l=this.computePadding(a),d=l.byteLength;c=this.makeUniformsDataView(l);let h=t.map((A,_)=>{if(A.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(A.dataId),{dtype:this.tensorMap.get(A.dataId).dtype,shape:A.shape,name:e.variableNames[_]}}),p=h.map(A=>A.dtype).concat(r.dtype),f=h.map(A=>T.getBroadcastDims(A.shape,r.shape)),m=h.map(A=>x.arraysEqual(A.shape,r.shape)).join("_"),g=f.map(A=>A.join("_")).join(";"),b=bC(e,o,p,g,m),{bindGroupLayout:v,pipelineLayout:y}=this.getCachedOrCreateLayout(e.variableNames.length),w=this.getAndSavePipeline(b,()=>gC(this.device,e,y,h,r)),k=this.activeTimers!=null,S=Yee(this.device,v,t.map(A=>this.tensorToBinding(A)),this.tensorToBinding(r),c);this.ensureCommandEncoderReady();let N=this.getComputePass();if(k&&this.supportTimeQuery&&N.writeTimestamp(this.querySet,0),N.setPipeline(w),N.setBindGroup(0,S),N.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),k&&this.supportTimeQuery&&N.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(A=>{this.commandQueueOwnedIds.add(A.dataId)}),this.commandQueueOwnedIds.add(r.dataId),c){let A={byteSize:d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:c.buffer};this.uniformDisposalQueue.push(A)}return X().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),k&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}runFromPixelsProgram(e,t,n,s,r){let a=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:s},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let o=this.getComputePass(),i=this.activeTimers!=null;i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,0),o.setPipeline(e.pipeline),o.setBindGroup(0,a),o.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(r),this.submitQueue(),i&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=mse){return X().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&x.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},hy=$C;hy.nextDataId=0;var gse={};$e(gse,{WebGPUBackend:()=>hy,webgpu_util:()=>K0});Bu.isBrowser()&&ry()&&Bc("webgpu",async()=>{X().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:X().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},s=t.features.has("timestamp-query");s?n={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let r=await t.requestDevice(n);return new hy(r,s)},3);var _t;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(_t||(_t={}));var $l;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})($l||($l={}));var AC;function bse(e){AC=e.wasm.cwrap(wa,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function yse(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s,h=n.dataIdMap.get(r.dataId).id,p=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let A=n.dataIdMap.get(o.dataId);if(A.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${A.shape.length}.`);f=A.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=$l[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);let b=u?r.shape[2]:r.shape[1],v=c?a.shape[1]:a.shape[2],y=li.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),w=n.makeOutput([...y,b,v],r.dtype),k=n.dataIdMap.get(w.dataId).id,S=new Uint8Array(new Int32Array(r.shape).buffer),N=new Uint8Array(new Int32Array(a.shape).buffer);return AC(h,S,r.shape.length,p,N,a.shape.length,u,c,g,f,m,d||0,k),w}var vse={kernelName:wa,backendName:"wasm",setupFunc:bse,kernelFunc:yse};function Zt(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:o,inputs:{x:i}}=a,u=o.dataIdMap.get(i.dataId).id,c=o.makeOutput(i.shape,t||i.dtype),l=o.dataIdMap.get(c.dataId).id;return x.sizeFromShape(c.shape)===0||n(u,_t[i.dtype],l),c}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var xse=Zt(go);function dn(e,t,n){let s;function r(o){s=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:u}=o,{a:c,b:l}=u,d=i.dataIdMap.get(c.dataId).id,h=i.dataIdMap.get(l.dataId).id,p=n??c.dtype,f=T.assertAndGetBroadcastShape(c.shape,l.shape),m=i.makeOutput(f,p);if(x.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(c.shape).buffer),b=new Uint8Array(new Int32Array(l.shape).buffer),v=i.dataIdMap.get(m.dataId).id,y=()=>s(d,g,c.shape.length,h,b,l.shape.length,_t[c.dtype],v);if(t&&c.dtype==="float32")return y(),m;let w=T.getBroadcastDims(c.shape,f),k=T.getBroadcastDims(l.shape,f),S=w.every((A,_)=>A===_),N=k.every((A,_)=>A===_);if(S&&N)return y(),m;throw new Error(`Broadcasting along outer dims is not yet supported for ${c.dtype} ${e}.`)}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var wse=!0,kse=dn(Qs,wse),EC;function Ise(e){EC=e.wasm.cwrap(Er,null,["array","number","number","number"])}function Sse(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(x.sizeFromShape(s.shape)===0)return s;let r=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),o=n.dataIdMap.get(s.dataId).id;return EC(a,r.length,_t[s.dtype],o),s}var Cse={kernelName:Er,backendName:"wasm",setupFunc:Ise,kernelFunc:Sse};function mh(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var Nse={kernelName:Kr,backendName:"wasm",kernelFunc:mh},_C;function Tse(e){_C=e.wasm.cwrap(va,null,["number","array","number","number","number","array","number"])}function qi(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=Ase(t.x.shape,s.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=$se(t.x.shape,s.perm),u={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(o){let f=mh({inputs:t,backend:n});return f.shape=i,f}let c=n.makeOutput(i,u.dtype),l=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(c.dataId).id,h=new Uint8Array(new Int32Array(a).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return _C(l,p,u.shape.length,_t[u.dtype],d,h,a.length),c}function $se(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function Ase(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let o=0;o<s.length;++o)s[o]>=r&&(a===-1||s[a]>s[o])&&(a=o);s[a]=r}return[n,s]}var Ese={kernelName:va,backendName:"wasm",kernelFunc:qi,setupFunc:Tse};function wr(e,t,n){let s=e.shape,r=e.shape.length,a=x.parseAxisParam(t,s),o=a,i=T.getAxesPermutation(o,r),u=null,c=!1;if(i!=null){let l=new Array(r);for(let p=0;p<l.length;p++)l[p]=s[i[p]];o=T.getInnerMostAxes(o.length,r),u=qi({inputs:{x:e},attrs:{perm:i},backend:n});let d=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==d&&(c=!0)}return{transposed:u,originalAxes:a,axes:o,inputWasTransposed:c}}var RC;function _se(e){RC=e.wasm.cwrap(cu,null,["number, number, number"])}function Rse(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,u=t.dataIdMap.get(o.dataId).id,c=o,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=wr(o,r,t);if(p){let y=t.dataIdMap.get(l.dataId).id;c=l,u=y}let f=c.shape.length;T.assertAxesAreInnerMostDims("all",d,f);let[m,g]=T.computeOutAndReduceShapes(c.shape,d),b=x.sizeFromShape(g),v=t.makeOutput(m,o.dtype);if(x.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(v.dataId).id;RC(u,b,y)}if(p&&t.disposeData(l.dataId),a){let y=T.expandShapeToKeepDim(v.shape,h);v.shape=y}return v}var Dse={kernelName:cu,backendName:"wasm",setupFunc:_se,kernelFunc:Rse},DC;function Fse(e){DC=e.wasm.cwrap(du,null,["number, number, number"])}function Ose(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,u=t.dataIdMap.get(o.dataId).id,c=o,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=wr(o,r,t);if(p){let y=t.dataIdMap.get(l.dataId).id;c=l,u=y}let f=c.shape.length;T.assertAxesAreInnerMostDims("any",d,f);let[m,g]=T.computeOutAndReduceShapes(c.shape,d),b=x.sizeFromShape(g),v=t.makeOutput(m,o.dtype);if(x.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(v.dataId).id;DC(u,b,y)}if(p&&t.disposeData(l.dataId),a){let y=T.expandShapeToKeepDim(v.shape,h);v.shape=y}return v}var Pse={kernelName:du,backendName:"wasm",setupFunc:Fse,kernelFunc:Ose},FC;function Lse(e){FC=e.wasm.cwrap(_r,null,["number","number","number","number","number"])}function zse(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,u=a,{transposed:c,axes:l,inputWasTransposed:d}=wr(a,r,t);if(d){let b=t.dataIdMap.get(c.dataId).id;b!==o&&(u=c,i=b)}let h=u.shape.slice(0,-1),p=t.makeOutput(h,"int32"),f=t.dataIdMap.get(p.dataId).id,m=x.sizeFromShape(p.shape),g=u.shape[l[0]];return FC(i,_t[u.dtype],m,g,f),d&&t.disposeData(c.dataId),p}var Mse={kernelName:_r,backendName:"wasm",kernelFunc:zse,setupFunc:Lse},OC;function Bse(e){OC=e.wasm.cwrap(Rr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Vse(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=n,l=T.computePool2DInfo(r.shape,o,i,1,u,c),d=l.filterHeight,h=l.filterWidth,p=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,b=l.strideHeight,v=l.strideWidth,y=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);let w=s.makeOutput(l.outShape,"float32"),k=s.dataIdMap.get(w.dataId).id;return OC(a,r.shape[0],r.shape[1],r.shape[2],d,h,p,f,m,g,b,v,y,k),w}var Wse={kernelName:Rr,backendName:"wasm",setupFunc:Bse,kernelFunc:Vse};function kn(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=x.sizeFromShape(s.shape),o=x.inferFromImplicitShape(r,a);return x.assert(a===x.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var Use={kernelName:Vo,backendName:"wasm",kernelFunc:kn},PC;function Gse(e){PC=e.wasm.cwrap(Dr,null,["number","array","number","number","array","number","number","number","number"])}function Hse(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=r.shape.length,c=a.shape.length,l=o?r.shape[u-2]:r.shape[u-1],d=i?a.shape[c-1]:a.shape[c-2],h=o?r.shape[u-1]:r.shape[u-2],p=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=x.sizeFromShape(f),b=x.sizeFromShape(m),y=li.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([h,p]);x.assert(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let w=o?[g,l,h]:[g,h,l],k=i?[b,p,d]:[b,d,p],S=kn({inputs:{x:r},backend:n,attrs:{shape:w}}),N=kn({inputs:{x:a},backend:n,attrs:{shape:k}}),A=n.dataIdMap.get(S.dataId).id,_=n.dataIdMap.get(N.dataId).id,O=o?S.shape[2]:S.shape[1],R=i?N.shape[1]:N.shape[2],D=Math.max(g,b),C=n.makeOutput([D,O,R],S.dtype),P=n.dataIdMap.get(C.dataId).id,V=new Uint8Array(new Int32Array(S.shape).buffer),G=new Uint8Array(new Int32Array(N.shape).buffer);return PC(A,V,S.shape.length,_,G,N.shape.length,o,i,P),n.disposeData(S.dataId),n.disposeData(N.dataId),C.shape=y,C}var qse={kernelName:Dr,backendName:"wasm",setupFunc:Gse,kernelFunc:Hse};function Al(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,o]=It.parseSliceParams(t,n,s),i=It.isSliceContinous(t.shape,a,o),u=r.readSync(t.dataId),c=r.makeOutput(o,t.dtype),l=x.computeStrides(t.shape),d=r.dataIdMap.get(c.dataId);if(i){let f=It.computeFlatOffset(a,l);return t.dtype==="string"?d.stringBytes=u.slice(f,f+x.sizeFromShape(o)):r.typedArrayFromHeap(c).set(u.subarray(f,f+x.sizeFromShape(o))),c}if(t.dtype==="string"){let f=Ud(u,a,o,t.shape,t.dtype);return d.stringBytes=f,c}let h=r.typedArrayFromHeap(c),p=t.shape.length;if(p===2)jse(u,l[0],h,a,o);else if(p===3)Kse(u,l[0],l[1],h,a,o);else if(p===4)Xse(u,l[0],l[1],l[2],h,a,o);else{let f=Ud(u,a,o,t.shape,t.dtype);h.set(f)}return c}function jse(e,t,n,s,r){let a=0,o=s[0],i=s[1],u=o+r[0];for(let c=o;c<u;c++){let l=c*t+i;n.set(e.subarray(l,l+r[1]),a),a+=r[1]}}function Kse(e,t,n,s,r,a){let o=0,i=r[0],u=r[1],c=r[2],l=i+a[0],d=u+a[1];for(let h=i;h<l;h++)for(let p=u;p<d;p++){let f=h*t+p*n+c;s.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function Xse(e,t,n,s,r,a,o){let i=0,u=a[0],c=a[1],l=a[2],d=u+o[0],h=c+o[1],p=l+o[2],f=a[3];for(let m=u;m<d;m++)for(let g=c;g<h;g++)for(let b=l;b<p;b++){let v=m*t+g*n+b*s+f;r.set(e.subarray(v,v+o[3]),i),i+=o[3]}}var Yse={kernelName:qo,backendName:"wasm",kernelFunc:Al};function Qse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s,i=a.reduce((b,v)=>b*v),u=T.getReshaped(r.shape,a,i),c=T.getPermuted(u.length,a.length),l=T.getReshapedPermuted(r.shape,a,i),d=T.getSliceBeginCoords(o,a.length),h=T.getSliceSize(l,o,a.length),p=kn({inputs:{x:r},backend:n,attrs:{shape:u}}),f=qi({inputs:{x:p},backend:n,attrs:{perm:c}}),m=kn({inputs:{x:f},backend:n,attrs:{shape:l}}),g=Al({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(p.dataId),g}var Zse={kernelName:bo,backendName:"wasm",kernelFunc:Qse};function El(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var Jse={kernelName:Fr,backendName:"wasm",kernelFunc:El},ere=Zt(Or),LC;function tre(e){LC=e.wasm.cwrap(Zs,null,["number","number","number","number"])}function nre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i=n.dataIdMap.get(r.dataId).id,u=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(u.dataId).id;return LC(i,a,o,c),u}var sre={kernelName:Zs,backendName:"wasm",setupFunc:tre,kernelFunc:nre};function zC(e){let{inputs:t,backend:n}=e,s=x.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=T.computeOutShape(t.map(p=>p.shape),s),a=t.filter(p=>x.sizeFromShape(p.shape)>0);if(a.length===1)return mh({inputs:{x:a[0]},backend:n});let o=n.makeOutput(r,t[0].dtype);if(x.sizeFromShape(r)===0)return o;let i=a.map(p=>p.shape);if(T.assertParamsConsistent(i,s),a[0].dtype==="string"){let p=a.map(y=>{let w=x.sizeFromShape(y.shape.slice(s));return kn({inputs:{x:y},backend:n,attrs:{shape:[-1,w]}})}),f=p.map(y=>({vals:n.readSync(y.dataId),shape:y.shape}));r=T.computeOutShape(p.map(y=>y.shape),1);let m=p[0].shape[0]===1,g=kb(f,r,t[0].dtype,m),b=T.computeOutShape(a.map(y=>y.shape),s);o.shape=b;let v=n.dataIdMap.get(o.dataId);return v.stringBytes=T.fromStringArrayToUint8(g),p.forEach(y=>n.disposeData(y.dataId)),o}let u=x.sizeFromShape(a[0].shape.slice(0,s)),c=0,l=a.map(p=>{let f=x.sizeFromShape(p.shape.slice(s));return c+=f,f}),d=a.map(p=>n.typedArrayFromHeap(p)),h=n.typedArrayFromHeap(o);for(let p=0;p<u;p++){let f=p*c;for(let m=0;m<d.length;m++){let g=l[m],b=p*g,v=d[m].subarray(b,b+g);h.set(v,f),f+=g}}return o}var rre={kernelName:yo,backendName:"wasm",kernelFunc:zC},MC;function are(e){MC=e.wasm.cwrap(Pr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ore(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:u,dilations:c,pad:l,dimRoundingMode:d,dataFormat:h}=n,p=T.convertConv2DDataFormat(h),f=T.computeConv2DInfo(r.shape,a.shape,u,c,l,d,!1,p),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,v=f.padInfo.right,y=f.padInfo.bottom,w=f.padInfo.left,k=f.dilationHeight,S=f.dilationWidth,N=f.strideHeight,A=f.strideWidth,_=f.inChannels,O=f.outChannels,R=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let D=s.makeOutput(f.outShape,"float32"),C=s.dataIdMap.get(D.dataId).id;return MC(o,r.shape[0],r.shape[1],r.shape[2],i,m,g,b,v,y,w,R,k,S,N,A,_,O,C),D}var ire={kernelName:Pr,backendName:"wasm",setupFunc:are,kernelFunc:ore},BC;function ure(e){BC=e.wasm.cwrap(Lr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function lre(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:o,pad:i,dataFormat:u,dimRoundingMode:c,inputShape:l}=s,d=1,h=T.convertConv2DDataFormat(u),p=T.computeConv2DInfo(l,a.shape,o,d,i,c,!1,h),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:b,inHeight:v,inWidth:y,outChannels:w,outHeight:k,outWidth:S,strideHeight:N,strideWidth:A}=p,_=m-1-p.padInfo.top,O=g-1-p.padInfo.left,R=p.dataFormat==="channelsLast",D=x.computeStrides(p.inShape),C=x.computeStrides(r.shape),[P,V,G]=x.computeStrides(a.shape),U=D[0],q=R?D[1]:D[2],Y=R?D[2]:1,Z=R?1:D[1],J=C[0],ne=R?C[1]:C[2],ee=R?C[2]:1,te=R?1:C[1],re=t.makeOutput(p.inShape,"float32"),ce=t.dataIdMap.get(re.dataId).id,pe=t.dataIdMap.get(r.dataId).id,be=t.dataIdMap.get(a.dataId).id;return BC(pe,be,f,m,g,v,y,b,k,S,w,N,A,_,O,P,V,G,U,q,Y,Z,J,ne,ee,te,ce),re}var cre={kernelName:Lr,backendName:"wasm",setupFunc:ure,kernelFunc:lre},dre=Zt(zr),hre=Zt(Mr),py;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(py||(py={}));var VC;function pre(e){VC=e.wasm.cwrap(xo,null,["number","number","number","number","array","number","number","number","number","number"])}function fre(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:o}=s,{image:i,boxes:u,boxInd:c}=n,l=u.shape[0],[d,h]=o,p=[l,d,h,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=El({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,b=t.dataIdMap.get(u.dataId).id,v=t.dataIdMap.get(c.dataId).id,y=t.makeOutput(p,"float32"),w=t.dataIdMap.get(y.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return VC(g,b,v,l,k,d,h,py[r],a,w),m!=null&&t.disposeData(m.dataId),y}var mre={kernelName:xo,backendName:"wasm",setupFunc:pre,kernelFunc:fre},WC;function gre(e){WC=e.wasm.cwrap(vo,null,["number","number","number","number","number","number"])}function bre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,u=r.shape.length;x.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let c=T.getAxesPermutation([a],u),l=r;c!==null&&(l=qi({inputs:{x:r},attrs:{perm:c},backend:n}));let d=T.getInnerMostAxes(1,u)[0];T.assertAxesAreInnerMostDims("cumsum",[d],u);let h=n.makeOutput(l.shape,l.dtype),p=l.shape[d],f=n.dataIdMap.get(l.dataId).id,m=n.dataIdMap.get(h.dataId).id;WC(f,o?1:0,i?1:0,p,m,_t[r.dtype]);let g=h;if(c!==null){let b=T.getUndoAxesPermutation(c);g=qi({inputs:{x:h},attrs:{perm:b},backend:n}),n.disposeData(l.dataId),n.disposeData(h.dataId)}return g}var yre={kernelName:vo,backendName:"wasm",setupFunc:gre,kernelFunc:bre},UC;function vre(e){UC=e.wasm.cwrap(wo,null,["number","number","number","array","number","array","array","number","number"])}function xre(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:o}=s,i=r.shape[0],u=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],l=o==="NHWC"?r.shape[3]:r.shape[1],d=u*a,h=c*a,p=l/(a*a),f=o==="NHWC"?[i,d,h,p]:[i,p,d,h],m=t.makeOutput(f,"float32"),b=t.dataIdMap.get(r.dataId).id,v=new Uint8Array(new Int32Array(x.computeStrides(r.shape)).buffer),y=new Uint8Array(new Int32Array(f).buffer),w=new Uint8Array(new Int32Array(x.computeStrides(f)).buffer),k=t.dataIdMap.get(m.dataId).id;return UC(b,a,o==="NHWC"?1:0,v,r.shape.length-1,y,w,f.length,k),m}var wre={kernelName:wo,backendName:"wasm",setupFunc:vre,kernelFunc:xre},GC;function kre(e){GC=e.wasm.cwrap(Br,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ire(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:u,dilations:c,pad:l,dimRoundingMode:d}=n,h=c??[1,1],p=T.computeConv2DInfo(r.shape,a.shape,u,h,l,d,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,b=p.padInfo.right,v=p.padInfo.bottom,y=p.padInfo.left,w=p.dilationHeight,k=p.dilationWidth,S=p.strideHeight,N=p.strideWidth,A=p.inChannels,_=p.outChannels,O=p.padInfo.type==="SAME"?1:0;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let R=s.makeOutput(p.outShape,"float32"),D=s.dataIdMap.get(R.dataId).id;return GC(o,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,b,v,y,O,w,k,S,N,A,_,D),R}var Sre={kernelName:Br,backendName:"wasm",setupFunc:kre,kernelFunc:Ire},Cre=Zt(Wr),Nre=!1,Tre=dn(ko,Nre,"bool"),$re=Zt(Ur,"float32");function fy(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,o=r.shape.length,i=r.shape.slice(),u=a;return a<0&&(x.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+a+1),i.splice(u,0,1),kn({inputs:{x:r},backend:s,attrs:{shape:i}})}var Are={kernelName:Io,backendName:"wasm",kernelFunc:fy};function HC(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var Ere={kernelName:vu,backendName:"wasm",kernelFunc:HC},qC;function _re(e){qC=e.wasm.cwrap(Co,null,["number","number","number","number","number","number"])}function Rre(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,[i,u,c,l]=s.shape;return qC(a,i,u,c,l,o),r}var Dre={kernelName:Co,backendName:"wasm",kernelFunc:Rre,setupFunc:_re},Fre=Zt(Gr),Ore=!1,Pre=dn(Hr,Ore),jC;function Lre(e){jC=e.wasm.cwrap(qr,null,["number","number","number","number","number","number","number"])}function zre(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:o,variance:i,offset:u,scale:c}=n,l=t.dataIdMap.get(a.dataId).id,d=t.dataIdMap.get(o.dataId).id,h=t.dataIdMap.get(i.dataId).id,p=u!=null?t.dataIdMap.get(u.dataId).id:0,f=c!=null?t.dataIdMap.get(c.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(x.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return jC(l,d,h,p,f,r,g),m}var Mre={kernelName:qr,backendName:"wasm",setupFunc:Lre,kernelFunc:zre},KC;function Bre(e){KC=e.wasm.cwrap(ka,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Vre(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dilations:l,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(r.shape,a.shape,u,l,c,h),g=$l[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let b=s.dataIdMap.get(r.dataId).id,v=s.dataIdMap.get(a.dataId).id,y=m.outChannels,w=0;if(o!=null){let ee=s.dataIdMap.get(o.dataId);if(ee.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ee.shape.length}.`);if(ee.shape[0]!==y)throw new Error(`FusedConv2D bias shape (${ee.shape}) does not match the number of output channels (${y})`);w=ee.id}let k=m.filterHeight,S=m.filterWidth,N=m.padInfo.top,A=m.padInfo.right,_=m.padInfo.bottom,O=m.padInfo.left,R=m.dilationHeight,D=m.dilationWidth,C=m.strideHeight,P=m.strideWidth,V=m.inChannels,G=m.padInfo.type==="SAME"?1:0,U=m.batchSize,q=m.inHeight,Y=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let Z=s.makeOutput(m.outShape,"float32"),J=s.dataIdMap.get(Z.dataId).id,ne=i==null?0:s.dataIdMap.get(i.dataId).id;return KC(b,U,q,Y,v,k,S,w,N,A,_,O,G,R,D,C,P,V,y,g,ne,f||0,J),Z}var Wre={kernelName:ka,backendName:"wasm",setupFunc:Bre,kernelFunc:Vre},XC;function Ure(e){XC=e.wasm.cwrap(Ia,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Gre(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dilations:l,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(r.shape,a.shape,u,l,c,h,!0),g=$l[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=s.dataIdMap.get(r.dataId).id,v=s.dataIdMap.get(a.dataId).id,y=m.outChannels,w=0;if(o!=null){let ee=s.dataIdMap.get(o.dataId);if(ee.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ee.shape.length}.`);if(ee.shape[0]!==y)throw new Error(`FusedDepthwiseConv2D bias shape (${ee.shape}) does not match the number of output channels (${y})`);w=ee.id}let k=m.filterHeight,S=m.filterWidth,N=m.padInfo.top,A=m.padInfo.right,_=m.padInfo.bottom,O=m.padInfo.left,R=m.dilationHeight,D=m.dilationWidth,C=m.strideHeight,P=m.strideWidth,V=m.inChannels,G=m.padInfo.type==="SAME"?1:0,U=m.batchSize,q=m.inHeight,Y=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let Z=s.makeOutput(m.outShape,"float32"),J=s.dataIdMap.get(Z.dataId).id,ne=i==null?0:s.dataIdMap.get(i.dataId).id;return XC(b,U,q,Y,v,k,S,w,N,A,_,O,G,R,D,C,P,V,y,g,ne,f||0,J),Z}var Hre={kernelName:Ia,backendName:"wasm",setupFunc:Ure,kernelFunc:Gre},YC;function qre(e){YC=e.wasm.cwrap(To,null,["number","number","number","number","number","number","array","number"])}function jre(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,o,i,u]=Ev.prepareAndValidate(s,r),c=t.makeOutput(a,s.dtype);if(o===0)return c;let l=r.shape,d=l[l.length-1],p=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),b=t.dataIdMap.get(c.dataId).id;return YC(p,_t[s.dtype],m,o,d,i,g,b),c}var Kre={kernelName:To,backendName:"wasm",setupFunc:qre,kernelFunc:jre},QC;function Xre(e){QC=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Yre(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:o,batchDims:i}=s,u=x.parseAxisParam(o,r.shape)[0],c=t.readSync(a.dataId),l=r.shape[u];for(let _=0;_<c.length;++_){let O=c[_];x.assert(O<=l-1&&O>=0,()=>`GatherV2: the index value ${O} is not in [0, ${l-1}]`)}let d=T.segment_util.collectGatherOpShapeInfo(r,a,u,i),h=kn({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),p=x.sizeFromShape(a.shape),f=kn({inputs:{x:a},attrs:{shape:[d.batchSize,p/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],g=t.makeOutput(m,r.dtype);if(x.sizeFromShape(r.shape)===0)return g;let b=h.shape.length-1,y=t.dataIdMap.get(h.dataId).id,k=t.dataIdMap.get(f.dataId).id,S=t.dataIdMap.get(g.dataId).id,N=new Uint8Array(new Int32Array(x.computeStrides(h.shape)).buffer),A=new Uint8Array(new Int32Array(x.computeStrides(m)).buffer);return QC(y,_t[r.dtype],N,b,k,d.batchSize,A,S),t.disposeData(h.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}var Qre={kernelName:No,backendName:"wasm",setupFunc:Xre,kernelFunc:Yre},Zre=!1,Jre=dn($o,Zre,"bool"),eae=!1,tae=dn(jr,eae,"bool"),ZC;function nae(e){ZC=e.wasm.cwrap(Ao,null,["number","number","number","number"])}function sae(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(x.sizeFromShape(t.shape)!==0){let o=s.dataIdMap.get(a.dataId).id;ZC(r,_t[t.dtype],n,o)}return a}var rae={kernelName:Ao,backendName:"wasm",setupFunc:nae,kernelFunc:sae},aae=!1,oae=dn(Eo,aae,"bool"),iae=!1,uae=dn(_o,iae,"bool"),lae=Zt(Xr),cae=!1,dae=dn(Ro,cae,"bool"),JC;function hae(e){JC=e.wasm.cwrap(Yr,null,["number","number","number","number"])}function pae(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:o}=n,u=t.dataIdMap.get(o.dataId).id,c=o,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=wr(o,r,t);if(p){let y=t.dataIdMap.get(l.dataId).id;c=l,u=y}let f=c.shape.length;T.assertAxesAreInnerMostDims("max",d,f);let[m,g]=T.computeOutAndReduceShapes(c.shape,d),b=x.sizeFromShape(g),v=t.makeOutput(m,o.dtype);if(x.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(v.dataId).id;JC(u,_t[o.dtype],b,y)}if(p&&t.disposeData(l.dataId),a){let y=T.expandShapeToKeepDim(v.shape,h);v.shape=y}return v}var fae={kernelName:Yr,backendName:"wasm",setupFunc:hae,kernelFunc:pae},mae=!1,gae=dn(Qr,mae),e1;function bae(e){e1=e.wasm.cwrap(Zr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yae(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;x.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=n,l=T.computePool2DInfo(r.shape,o,i,1,u,c),d=l.filterHeight,h=l.filterWidth,p=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,b=l.dilationHeight,v=l.dilationWidth,y=l.strideHeight,w=l.strideWidth,k=l.inChannels,S=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);let N=s.makeOutput(l.outShape,"float32"),A=s.dataIdMap.get(N.dataId).id;return e1(a,r.shape[0],r.shape[1],r.shape[2],d,h,p,f,m,g,b,v,y,w,k,S,A),N}var vae={kernelName:Zr,backendName:"wasm",setupFunc:bae,kernelFunc:yae},t1;function xae(e){t1=e.wasm.cwrap(Jr,null,["number, number, number"])}function wae(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,u=i,c=o,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=wr(o,r,t),f=d;if(p){let w=t.dataIdMap.get(l.dataId).id;w!==i&&(c=l,u=w,f=T.getInnerMostAxes(f.length,c.shape.length))}T.assertAxesAreInnerMostDims("mean",f,c.shape.length);let[m,g]=T.computeOutAndReduceShapes(c.shape,f),b=x.sizeFromShape(g),v=c;c.dtype!=="float32"&&(v=El({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(v.dataId).id);let y=t.makeOutput(m,"float32");if(x.sizeFromShape(c.shape)!==0){let w=t.dataIdMap.get(y.dataId).id;t1(u,b,w)}if(p&&t.disposeData(l.dataId),a){let w=T.expandShapeToKeepDim(y.shape,h);y.shape=w}return c.dtype!=="float32"&&t.disposeData(v.dataId),y}var kae={kernelName:Jr,backendName:"wasm",setupFunc:xae,kernelFunc:wae},n1;function Iae(e){n1=e.wasm.cwrap(ea,null,["number","number","number","number"])}function Sae(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,u=i,c=o,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=wr(o,r,t);if(p){let y=t.dataIdMap.get(l.dataId).id;y!==i&&(c=l,u=y)}let f=c.shape.length;T.assertAxesAreInnerMostDims("min",d,f);let[m,g]=T.computeOutAndReduceShapes(c.shape,d),b=x.sizeFromShape(g),v=t.makeOutput(m,c.dtype);if(x.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(v.dataId).id;n1(u,_t[o.dtype],b,y)}if(p&&t.disposeData(l.dataId),a){let y=T.expandShapeToKeepDim(v.shape,h);v.shape=y}return v}var Cae={kernelName:ea,backendName:"wasm",setupFunc:Iae,kernelFunc:Sae},Nae=!1,Tae=dn(ta,Nae),my;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(my||(my={}));var s1;function $ae(e){s1=e.wasm.cwrap(na,null,["number","array","number","number","array","array","number","number"])}function Aae(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),u=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),l=s.map(f=>f[0]),d=s.map(f=>f[1]),h=new Uint8Array(new Int32Array(l).buffer),p=new Uint8Array(new Int32Array(d).buffer);return s1(o,c,t.shape.length,_t[t.dtype],h,p,my[r],u),i}var Eae={kernelName:na,backendName:"wasm",kernelFunc:Aae,setupFunc:$ae},_ae=!0,Rae=dn(sa,_ae),Dae=Zt(Do);function gy(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:o}}var r1;function Fae(e){r1=e.wasm.cwrap(Oo,"number",["number","number","number","number","number"])}function Oae(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o}=s,{boxes:i,scores:u}=n,c=t.dataIdMap.get(i.dataId).id,l=t.dataIdMap.get(u.dataId).id,d=r1(c,l,a,r,o),{pSelectedIndices:h,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=gy(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",h)}var Pae={kernelName:Oo,backendName:"wasm",setupFunc:Fae,kernelFunc:Oae},a1;function Lae(e){a1=e.wasm.cwrap(Nu,"number",["number","number","number","number","number","bool"])}function zae(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=s,{boxes:u,scores:c}=n,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(c.dataId).id,h=a1(l,d,a,r,o,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=gy(t,h);t.wasm._free(m);let b=t.makeOutput([f],"int32",p),v=t.makeOutput([],"int32",g);return[b,v]}var Mae={kernelName:Nu,backendName:"wasm",setupFunc:Lae,kernelFunc:zae},o1;function Bae(e){o1=e.wasm.cwrap(Po,"number",["number","number","number","number","number","number"])}function Vae(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=s,{boxes:u,scores:c}=n,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(c.dataId).id,h=o1(l,d,a,r,o,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=gy(t,h);t.wasm._free(g);let b=t.makeOutput([f],"int32",p),v=t.makeOutput([f],"float32",m);return[b,v]}var Wae={kernelName:Po,backendName:"wasm",setupFunc:Bae,kernelFunc:Vae},Uae=!1,Gae=dn(Fo,Uae,"bool"),i1;function Hae(e){i1=e.wasm.cwrap(zo,null,["number","number","number","number","number"])}function qae(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,u=n.makeOutput([...r.shape,a],"int32"),c=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(r.dataId).id;return i1(d,a,o,i,c),u}var jae={kernelName:zo,backendName:"wasm",setupFunc:Hae,kernelFunc:qae};function Kae(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var Xae={kernelName:Lo,backendName:"wasm",kernelFunc:Kae};function Yae(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return fy({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(l=>{x.assertShapesMatch(a,l.shape,"All tensors passed to stack must have matching shapes"),x.assert(o===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],u=t.map(l=>{let d=fy({inputs:{input:l},backend:n,attrs:{dim:r}});return i.push(d),d}),c=zC({inputs:u,backend:n,attrs:{axis:r}});return i.forEach(l=>n.disposeData(l.dataId)),c}var Qae={kernelName:Mo,backendName:"wasm",kernelFunc:Yae},u1;function Zae(e){u1=e.wasm.cwrap(ra,null,["number","array","number","number","array","array","number","number"])}function Jae(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(x.sizeFromShape(t.shape)===0)return HC({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),c=n.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),d=s.map(m=>m[0]),h=s.map(m=>m[1]),p=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(h).buffer);return u1(o,l,t.shape.length,_t[t.dtype],p,f,r,c),i}var l1={kernelName:ra,backendName:"wasm",kernelFunc:Jae,setupFunc:Zae},eoe=!1,toe=dn(aa,eoe),c1;function noe(e){c1=e.wasm.cwrap(oa,null,["number","number","number"])}function soe(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,i=a,u=s,c=u;u.dtype!=="float32"&&(c=El({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(c.dataId).id);let l=n.makeOutput(s.shape,"float32"),d=n.dataIdMap.get(l.dataId).id;return c1(i,o,d),u.dtype!=="float32"&&n.disposeData(c.dataId),l}var roe={kernelName:oa,backendName:"wasm",setupFunc:noe,kernelFunc:soe},d1;function aoe(e){d1=e.wasm.cwrap(Bo,null,["number","number","number","number"])}function ooe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,u=i,c=o,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=wr(o,r,t),f=d;if(p){let y=t.dataIdMap.get(l.dataId).id;y!==i&&(c=l,u=y,f=T.getInnerMostAxes(f.length,c.shape.length))}T.assertAxesAreInnerMostDims("prod",f,c.shape.length);let[m,g]=T.computeOutAndReduceShapes(c.shape,f),b=x.sizeFromShape(g),v=t.makeOutput(m,c.dtype);if(x.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(v.dataId).id;d1(u,b,_t[v.dtype],y)}if(p&&t.disposeData(l.dataId),a){let y=T.expandShapeToKeepDim(v.shape,h);v.shape=y}return v}var ioe={kernelName:Bo,backendName:"wasm",setupFunc:aoe,kernelFunc:ooe},uoe=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=Cb(s,r,a,o),u=t.makeOutput([i.length],o);return t.typedArrayFromHeap(u).set(i),u},loe={kernelName:Tu,backendName:"wasm",kernelFunc:uoe},coe=!0,doe=dn(Vr,coe),hoe=Zt(ia),poe=Zt(la),h1;function foe(e){h1=e.wasm.cwrap(ua,null,["number","number","number","number","number","number","number","number","number","number"])}function moe(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:o,size:i}=s,[u,c]=i,[l,d,h,p]=r.shape,f=[l,u,c,p],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=El({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let b=m.id,v=t.makeOutput(f,"float32");if(x.sizeFromShape(r.shape)===0)return v;let y=t.dataIdMap.get(v.dataId).id;return h1(b,l,d,h,p,u,c,a?1:0,o?1:0,y),g!=null&&t.disposeData(g.dataId),v}var goe={kernelName:ua,backendName:"wasm",setupFunc:foe,kernelFunc:moe},p1;function boe(e){p1=e.wasm.cwrap(Wo,null,["number","array","number","array","number","number"])}function yoe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=x.parseAxisParam(a,r.shape);if(r.shape.length===0)return mh({inputs:{x:r},backend:n});let i=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(o).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);p1(u,l,o.length,d,r.shape.length,c);let h=kn({inputs:{x:i},attrs:{shape:r.shape},backend:n});return n.disposeData(i.dataId),h}var voe={kernelName:Wo,backendName:"wasm",kernelFunc:yoe,setupFunc:boe},f1;function xoe(e){f1=e.wasm.cwrap(ni,null,["number","number","number","number","number","number","number","number","array","number","number"])}function woe(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:o,center:i}=s,u=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(u.dataId).id,[d,h,p,f]=r.shape,[m,g]=T.getImageCenter(i,h,p),b=o===0,v=255,y=typeof o=="number"?[o,o,o,b?0:v]:[...o,v],w=new Uint8Array(new Int32Array(y).buffer);return f1(c,d,h,p,f,a,m,g,w,y.length,l),u}var koe={kernelName:ni,backendName:"wasm",kernelFunc:woe,setupFunc:xoe},Ioe=Zt(Uo),Soe=Zt(ca),m1;function Coe(e){m1=e.wasm.cwrap(Go,null,["number","number","number","number","number","number","array","number","number"])}function Noe(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:o}=s,i=t.makeOutput(o,a.dtype);if(x.sizeFromShape(o)===0)return i;let{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=Rv.calculateShapes(a,r,o),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,b=new Uint8Array(new Int32Array(d).buffer),v=t.dataIdMap.get(i.dataId).id;return m1(f,g,_t[a.dtype],u,c,l,b,h,v),i}var Toe={kernelName:Go,backendName:"wasm",setupFunc:Coe,kernelFunc:Noe},g1;function $oe(e){g1=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Aoe(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(a.dataId).id,c=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(c.dataId).id,d=s.shape.length,h=r.shape.length,p=d===0||d>1||h===1?1:x.sizeFromShape(r.shape.slice(1));return g1(o,i,u,p,l),c}var Eoe={kernelName:Ho,backendName:"wasm",kernelFunc:Aoe,setupFunc:$oe},b1;function _oe(e){b1=e.wasm.cwrap(ha,null,["number","number"])}function Roe(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return x.sizeFromShape(r.shape)===0||b1(s,a),r}var Doe={kernelName:"Sigmoid",backendName:"wasm",setupFunc:_oe,kernelFunc:Roe},Foe=Zt(da),y1;function Ooe(e){y1=e.wasm.cwrap(ma,null,["number","number","number","number"])}function Poe(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[s],u=x.sizeFromShape(n.shape)/i;return x.sizeFromShape(a.shape)===0||y1(r,o,i,u),a}var Loe={kernelName:ma,backendName:"wasm",setupFunc:Ooe,kernelFunc:Poe};function zoe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s,i=x.sizeFromShape(a),u=[[0,0]];u.push(...o);for(let S=1+a.length;S<r.shape.length;++S)u.push([0,0]);let c=l1.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),l=T.getReshaped(c.shape,a,i,!1),d=T.getPermuted(l.length,a.length,!1),h=T.getReshapedPermuted(c.shape,a,i,!1),m=kn({inputs:{x:c},backend:n,attrs:{shape:l}}),v=qi({inputs:{x:m},backend:n,attrs:{perm:d}}),k=kn({inputs:{x:v},backend:n,attrs:{shape:h}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(v.dataId),k}var Moe={kernelName:Ko,backendName:"wasm",kernelFunc:zoe};function Boe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=n,i=x.parseAxisParam(o,r.shape)[0],u=T.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),l=r.shape.slice();return u.map(d=>{let h=[...l];h[i]=d;let p=Al({inputs:{x:r},attrs:{begin:c,size:h},backend:s});return c[i]+=d,p})}var Voe={kernelName:Xo,backendName:"wasm",kernelFunc:Boe},Woe=Zt(pa),Uoe=Zt(Du),Goe=!0,Hoe=dn(ga,Goe),v1;function qoe(e){v1=e.wasm.cwrap(xa,null,["number","number","number","number"])}function joe(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),u=t.dataIdMap.get(i.dataId).id;return v1(o,r,_t[a.dtype],u),i}var Koe={kernelName:xa,backendName:"wasm",setupFunc:qoe,kernelFunc:joe},x1;function Xoe(e){x1=e.wasm.cwrap(Yo,null,["number","array","number","array","array","array","array","array","number","number"])}function Yoe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:o,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:v,end:y,strides:w}=It.sliceInfo(r.shape,a,o,i,u,c,l,d,h),k;if(m)k=kn({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||b){x.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=It.computeOutShape(v,y,w),N=Al({inputs:{x:r},backend:t,attrs:{begin:v,size:S}});k=kn({inputs:{x:N},backend:t,attrs:{shape:f}}),t.disposeData(N.dataId)}else{let S=t.makeOutput(p,"float32"),N=t.dataIdMap.get(r.dataId).id,A=new Uint8Array(new Int32Array(x.computeStrides(r.shape)).buffer),_=new Uint8Array(new Int32Array(v).buffer),O=new Uint8Array(new Int32Array(y).buffer),R=new Uint8Array(new Int32Array(w).buffer),D=new Uint8Array(new Int32Array(p).buffer),C=new Uint8Array(new Int32Array(x.computeStrides(p)).buffer),P=t.dataIdMap.get(S.dataId).id;x1(N,A,r.shape.length,_,O,R,D,C,p.length,P),k=kn({inputs:{x:S},backend:t,attrs:{shape:f}}),t.disposeData(S.dataId)}return k}var Qoe={kernelName:Yo,backendName:"wasm",setupFunc:Xoe,kernelFunc:Yoe},Zoe=!0,Joe=dn(ba,Zoe),w1;function eie(e){w1=e.wasm.cwrap(fa,null,["number","number","number","number"])}function tie(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,u=i,c=o,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=wr(o,r,t),f=d;if(p){let y=t.dataIdMap.get(l.dataId).id;y!==i&&(c=l,u=y,f=T.getInnerMostAxes(f.length,c.shape.length))}T.assertAxesAreInnerMostDims("sum",f,c.shape.length);let[m,g]=T.computeOutAndReduceShapes(c.shape,f),b=x.sizeFromShape(g),v=t.makeOutput(m,c.dtype);if(x.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(v.dataId).id;w1(u,b,_t[v.dtype],y)}if(p&&t.disposeData(l.dataId),a){let y=T.expandShapeToKeepDim(v.shape,h);v.shape=y}return v}var nie={kernelName:fa,backendName:"wasm",setupFunc:eie,kernelFunc:tie},sie=Zt(Qo),rie=Zt(ya),k1;function aie(e){k1=e.wasm.cwrap(Js,null,["number","array","number","array","number","number"])}function oie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:o}=s,i=new Array(r.shape.length);for(let h=0;h<i.length;h++)i[h]=r.shape[h]*o[h];let u=new Uint8Array(new Int32Array(r.shape).buffer),c=new Uint8Array(new Int32Array(i).buffer),l=n.makeOutput(i,r.dtype),d=n.dataIdMap.get(l.dataId).id;return k1(a,u,r.shape.length,c,i.length,_t[l.dtype],d),l}var iie={kernelName:Js,backendName:"wasm",setupFunc:aie,kernelFunc:oie},I1;function uie(e){I1=e.wasm.cwrap(Zo,null,["number","array","number","number","number","bool","number","number"])}var lie=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,o=t.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),u=s.shape.slice();u[u.length-1]=r;let c=t.makeOutput(u,s.dtype),l=t.dataIdMap.get(c.dataId).id,d=t.makeOutput(u,"int32"),h=t.dataIdMap.get(d.dataId).id;return I1(o,i,s.shape.length,_t[s.dtype],r,a,l,h),[c,d]},cie={kernelName:Zo,backendName:"wasm",setupFunc:uie,kernelFunc:lie},S1;function die(e){S1=e.wasm.cwrap(Jo,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function hie(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=s,[l,d,h,p]=r.shape,[f,m]=c??[d,h],g=[l,f,m,p],b=new Uint8Array(new Int32Array(x.computeStrides(r.shape)).buffer),v=t.makeOutput(g,r.dtype),y=t.dataIdMap.get(v.dataId).id,k=t.dataIdMap.get(r.dataId).id,N=t.dataIdMap.get(a.dataId).id,A=o==="nearest"?1:2,_;switch(i){case"constant":_=1;break;case"reflect":_=2;break;case"wrap":_=3;break;case"nearest":_=4;break;default:_=1;break}return S1(k,N,a.shape[0]>1,l,f,m,p,h,d,b,r.shape.length-1,A,_,u,y),v}var pie={kernelName:Jo,backendName:"wasm",setupFunc:die,kernelFunc:hie};function fie(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape[a],i=r.shape.length,u=new Array(i-1),c=0;for(let p=0;p<i;p++)p!==a&&(u[c++]=r.shape[p]);let l=new Array(o),d=new Array(i).fill(0),h=r.shape.slice();h[a]=1;for(let p=0;p<l.length;p++)d[a]=p,l[p]=Al({inputs:{x:r},attrs:{begin:d,size:h},backend:n});return l.map(({dataId:p,dtype:f})=>({dataId:p,dtype:f,shape:u}))}var mie={kernelName:ei,backendName:"wasm",kernelFunc:fie};function gie(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var bie={kernelName:ti,backendName:"wasm",kernelFunc:gie},yie=[xse,kse,Cse,Dse,Pse,Mse,Wse,qse,Zse,Jse,ere,sre,rre,ire,cre,dre,hre,mre,yre,wre,Sre,Cre,Tre,$re,Are,Ere,Dre,Fre,Pre,vse,Mre,Wre,Hre,Kre,Qre,Jre,tae,Nse,rae,oae,uae,lae,dae,fae,gae,vae,kae,Cae,Tae,Eae,Rae,Dae,Pae,Mae,Wae,Gae,jae,Xae,Qae,l1,toe,roe,ioe,loe,doe,hoe,poe,Use,goe,voe,koe,Soe,Ioe,Toe,Eoe,Doe,Foe,Yse,Loe,Moe,Voe,Woe,Uoe,Hoe,Koe,Qoe,Joe,nie,sie,rie,iie,cie,pie,Ese,mie,bie];for(let e of yie)Ac(e);var by=X();by.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));by.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(by.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var C1=$r(W2()),vie='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',xie=$r(U2()),wie=class extends au{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(Nie),Tie=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new ac(this,Ds())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=x.now();return e(),{kernelMs:x.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let c=t;this.dataIdMap.set(e,{id:a,stringBytes:c,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let o=x.sizeFromShape(n),i=o*x.bytesPerElement(s),u=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:u,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,o,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),u)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:s,stringBytes:r}=this.dataIdMap.get(e);if(n==="string")return r;let a=this.wasm.HEAPU8.slice(t,t+x.sizeFromShape(s)*x.bytesPerElement(n));return Sie(a.buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=x.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=x.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function kie(e){return(t,n)=>(x.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function N1(e,t,n){if(yy!=null)return yy;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),vy!=null&&vy[s]!=null?vy[s]:n+s}async function Iie(){let[e,t]=await Promise.all([X().getAsync("WASM_HAS_SIMD_SUPPORT"),X().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(i,u)=>{if(i.endsWith(".worker.js")){let c=vie,l=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(l)}return i.endsWith(".wasm")?N1(e,t,gh??u):u+i},Cie&&(r.instantiateWasm=kie(N1(e,t,gh??"")));let a=!1;r.onAbort=()=>{if(a||xy)return;xy=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&yy==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+C1.default.toString()],{type:"text/javascript"}),o=(0,C1.default)(r)):o=(0,xie.default)(r),o.then(i=>{a=!0,xy=!1;let u=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",u,["number"]),dispose:i.cwrap("dispose",u,[])},n({wasm:i})})})}function Sie(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var yy=null,gh=null,vy={},xy=!1,Cie=!1;var Nie=-1,Tie=-1;var $ie=2;Bc("wasm",async()=>{let{wasm:e}=await Iie();return new wie(e)},$ie);var kr="3.11.0-20211031",T1={tfjs:kr,"tfjs-core":kr,"tfjs-data":kr,"tfjs-layers":kr,"tfjs-converter":kr,"tfjs-backend-cpu":kr,"tfjs-backend-webgl":kr,"tfjs-backend-wasm":kr};async function _l(...e){let t=()=>{if(!Array.isArray(e))return e;let a="";for(let o of e)typeof o=="object"?a+=JSON.stringify(o).replace(/{|}|"|\[|\]/g,"").replace(/,/g,"&nbsp"):a+=o+"&nbsp";return a},n=new Date,s=`${n.getHours().toString().padStart(2,"0")}:${n.getMinutes().toString().padStart(2,"0")}:${n.getSeconds().toString().padStart(2,"0")}.${n.getMilliseconds().toString().padStart(3,"0")}`;console.log(s,...e);let r=document.getElementById("log");r&&(r.innerHTML+=s+"&nbsp &nbsp"+t()+"<br>")}function Aie(e){let t={};for(let n of e){let s=0,r=$c(n.toLowerCase());for(let a of r)t[a.kernelName]||(t[a.kernelName]={}),t[a.kernelName][a.backendName]=!0,s++;_l(`kernels found for ${n}:`,s)}return t}function Eie(e,t){let n=document.createElement("table"),s=e.map(a=>`<th>${a}</th>`).join(""),r=`
    <!-- <caption>List of TF Kernels implemented for each Backend</caption> -->
    <colgroup>
      <col style="background-color: #3f3f3f; width: 16rem">
      <col span="${e.length}" style="background-color: #1f1f1f; width: 4rem">
    </colgroup>
    <thead>
      <tr>
        <th>&nbsp</th>
        ${s}
      </tr>
    </thead>
    <tbody style="font-size: 0.8rem">
  `;for(let a of Object.keys(t)){let o=e.map(i=>`<td style="text-align: center; background-color: ${t[a][i.toLowerCase()]?"darkslategrey":"maroon"}">${t[a][i.toLowerCase()]?"&#10004":"-"}</td>`).join("");r+=`
        <tr>
          <td style="padding-left: 0.5rem">${a}</td>
          ${o}
        </tr>`}return r+=`
      </tbody>
    </table>`,n.innerHTML=r,n}async function _ie(){_l("list of tensorflow/js kernels implemented for each backend"),_l("tfjs version:",T1.tfjs);let e=["CPU","WASM","WebGL","WebGPU"];_l("analyzing backends:",e);let t=Aie(e);_l("total kernels found:",Object.keys(t).length),console.log(t);let n=Eie(e,t);document.body.appendChild(n)}window.onload=_ie;export{_l as log};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
